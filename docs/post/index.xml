<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Alvaro Franco Martins</title>
    <link>https://alvarofrancomartins.com/post/</link>
      <atom:link href="https://alvarofrancomartins.com/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Fri, 03 Oct 2025 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://alvarofrancomartins.com/media/sharing.png</url>
      <title>Posts</title>
      <link>https://alvarofrancomartins.com/post/</link>
    </image>
    
    <item>
      <title>Where Languages Meet Worlds</title>
      <link>https://alvarofrancomartins.com/post/language-network/</link>
      <pubDate>Fri, 03 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://alvarofrancomartins.com/post/language-network/</guid>
      <description>&lt;h2 id=&#34;foundation-unicode-and-language-data&#34;&gt;Foundation: Unicode and Language Data&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://home.unicode.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Unicode&lt;/a&gt; is the global standard that defines how text, numbers, and symbols are represented on computers, ensuring billions of devices and platforms can handle content consistently across hundreds of languages.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;For this post, I relied on the Unicode Consortium’s &lt;a href=&#34;https://www.unicode.org/cldr/charts/47/supplemental/territory_language_information.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Territory-Language&lt;/a&gt;. This dataset captures the percentage of literate, functional populations using each language in each country, providing a sociolinguistic view of global language usage.&lt;/p&gt;
&lt;h2 id=&#34;methodology-building-the-network&#34;&gt;Methodology: Building the Network&lt;/h2&gt;
&lt;p&gt;Using this dataset, a country–country network was constructed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Nodes:&lt;/strong&gt; Countries with populations of at least 200,000.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edges:&lt;/strong&gt; A link exists if two countries share a language spoken by at least 50% of their population.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Filtering:&lt;/strong&gt; Smaller components were removed, focusing on the largest connected component.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The resulting network includes &lt;strong&gt;89 countries&lt;/strong&gt; and &lt;strong&gt;1338 connections&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&#34;network-wrapper&#34;&gt;
  &lt;div class=&#34;container&#34;&gt;
      &lt;div class=&#34;graph-container&#34;&gt;
          &lt;div id=&#34;network-graph&#34;&gt;&lt;/div&gt;
          &lt;div class=&#34;loading&#34;&gt;Loading network data...&lt;/div&gt;
          
          &lt;div class=&#34;zoom-controls&#34;&gt;
              &lt;button class=&#34;zoom-btn&#34; id=&#34;zoom-in&#34;&gt;+&lt;/button&gt;
              &lt;button class=&#34;zoom-btn&#34; id=&#34;zoom-out&#34;&gt;-&lt;/button&gt;
              &lt;button class=&#34;zoom-btn&#34; id=&#34;fit-to-screen&#34;&gt;Fit&lt;/button&gt;
          &lt;/div&gt;
      &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;style&gt;
  /* Scoped styles so Hugo defaults remain untouched */
  .network-wrapper {
      margin: 2rem 0;
  }

  .network-wrapper .container {
      display: flex;
      flex-direction: column;
      height: 80vh;
      background: linear-gradient(135deg, #0c0c0c 0%, #1a1a2e 50%, #16213e 100%);
      font-family: &#39;Segoe UI&#39;, Tahoma, Geneva, Verdana, sans-serif;
      color: #ffffff;
  }

  .network-wrapper .graph-container {
      flex: 1;
      position: relative;
      overflow: hidden;
  }

  .network-wrapper #network-graph {
      width: 100%;
      height: 100%;
  }

  .network-wrapper .tooltip {
      position: absolute;
      padding: 12px;
      background: rgba(0, 0, 0, 0.65);
      border: 1px solid rgba(255, 255, 255, 0.1);
      border-radius: 8px;
      pointer-events: none;
      font-size: 18px;
      color: #fff; 
      opacity: 0;
      max-width: 300px;
  }

  .network-wrapper .tooltip h3 {
      margin: 0 0 8px 0;
      color: #4cc9f0;
      font-size: 16px;
  }

  .network-wrapper .tooltip p {
      margin: 4px 0;
  }

  .network-wrapper .loading {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 18px;
      color: #4cc9f0;
  }

  .network-wrapper .node-label {
      font-size: 18px;
      font-weight: bold;
      text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.9);
      pointer-events: none;
      user-select: none;
      transition: all 0.3s;
      fill: #ffffff;
      stroke: #000000;
      stroke-width: 1px;
      paint-order: stroke;
  }

  .network-wrapper .zoom-controls {
      position: absolute;
      bottom: 15px;
      right: 15px;
      display: flex;
      flex-direction: column;
      gap: 5px;
  }

  .network-wrapper .zoom-btn {
      width: 40px;
      height: 40px;
      background: rgba(0, 0, 0, 0.7);
      border: 1px solid rgba(255, 255, 255, 0.2);
      color: white;
      font-size: 20px;
      border-radius: 5px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
  }

  .network-wrapper .zoom-btn:hover {
      background: rgba(76, 201, 240, 0.3);
  }

  .network-wrapper .legend {
      position: absolute;
      bottom: 15px;
      left: 15px;
      background: rgba(0, 0, 0, 0.7);
      padding: 15px;
      border-radius: 10px;
      border: 1px solid rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      font-size: 12px;
  }
&lt;/style&gt;

&lt;script src=&#34;https://d3js.org/d3.v7.min.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;
  // Configuration with your specified defaults
    const container = document.querySelector(&#34;.graph-container&#34;);

    const config = {
        width: container.clientWidth,
        height: container.clientHeight,
        chargeStrength: -287,
        linkDistance: 145,
        nodeSize: 2.3,
        gravityStrength: 0.05
    };
  // Create SVG and tooltip
  const svg = d3.select(&#34;#network-graph&#34;)
      .append(&#34;svg&#34;)
      .attr(&#34;width&#34;, config.width)
      .attr(&#34;height&#34;, config.height);

  const g = svg.append(&#34;g&#34;);
  const tooltip = d3.select(&#34;.network-wrapper&#34;).append(&#34;div&#34;)
      .attr(&#34;class&#34;, &#34;tooltip&#34;);

  // Zoom behavior
  const zoom = d3.zoom()
      .scaleExtent([0.1, 4])
      .on(&#34;zoom&#34;, (event) =&gt; {
          g.attr(&#34;transform&#34;, event.transform);
      });

  svg.call(zoom);

  // Color scale for nodes based on betweenness
  const getNodeColor = (d) =&gt; {
      if (d.betweenness === 0) return &#34;#DBE2EF&#34;;      // Low betweenness - Light blue
      else if (d.betweenness &lt;= 0.1) return &#34;#3F72AF&#34;; // Medium betweenness - Teal
      else return &#34;#112D4E&#34;;                          // High betweenness - Coral
  };

  // Load and visualize the graph
  d3.json(&#34;country_country_network.json&#34;).then(function(graphData) {
      setTimeout(() =&gt; {
            fitToScreen();
        }, 1500);
      d3.select(&#34;.loading&#34;).remove();
      // Initialize the graph
      updateGraph(graphData);
      // Set up controls
      setupControls(graphData);
  }).catch(function(error) {
      console.error(&#34;Error loading graph data:&#34;, error);
      d3.select(&#34;.loading&#34;).text(&#34;Error loading data. Please check the console.&#34;);
  });

  function updateGraph(graphData) {
      // Clear previous graph
      g.selectAll(&#34;*&#34;).remove();

      // Create links
      const links = graphData.links.map(d =&gt; Object.create(d));
      
      // Create nodes
      const nodes = graphData.nodes.map(d =&gt; Object.create(d));

      // Create simulation with boundary constraints
      const simulation = d3.forceSimulation(nodes)
          .force(&#34;link&#34;, d3.forceLink(links).id(d =&gt; d.id).distance(config.linkDistance))
          .force(&#34;charge&#34;, d3.forceManyBody().strength(config.chargeStrength))
          .force(&#34;center&#34;, d3.forceCenter(config.width / 2, config.height / 2))
          .force(&#34;x&#34;, d3.forceX(config.width / 2).strength(config.gravityStrength))
          .force(&#34;y&#34;, d3.forceY(config.height / 2).strength(config.gravityStrength))
          .force(&#34;collision&#34;, d3.forceCollide().radius(d =&gt; {
              if (d.betweenness === 0) return 8 + 8; // radius + padding
              const minBetweenness = 0.0001;
              const maxBetweenness = 0.12217142691280622;
              const normalized = Math.log1p(d.betweenness) / Math.log1p(maxBetweenness);
              const minRadius = 8;
              const maxRadius = 35;
              return (minRadius + (normalized * (maxRadius - minRadius))) + 8;
          }))
      // Add boundary force to keep nodes within view
      simulation.force(&#34;boundary&#34;, function() {
          nodes.forEach(node =&gt; {
              const radius = Math.sqrt(node.degree) * config.nodeSize;
              node.x = Math.max(radius, Math.min(config.width - radius, node.x));
              node.y = Math.max(radius, Math.min(config.height - radius, node.y));
          });
      });

      // Create links
      const link = g.append(&#34;g&#34;)
          .attr(&#34;class&#34;, &#34;links&#34;)
          .selectAll(&#34;line&#34;)
          .data(links)
          .enter().append(&#34;line&#34;)
          .attr(&#34;stroke-width&#34;, 1)
          .attr(&#34;stroke&#34;, &#34;rgba(255, 255, 255, 0.4)&#34;)
          .attr(&#34;stroke-opacity&#34;, 0.7)
          .attr(&#34;class&#34;, &#34;link&#34;);

      // Create nodes
      const node = g.append(&#34;g&#34;)
          .attr(&#34;class&#34;, &#34;nodes&#34;)
          .selectAll(&#34;circle&#34;)
          .data(nodes)
          .enter().append(&#34;circle&#34;)
          .attr(&#34;r&#34;, d =&gt; {
              if (d.betweenness === 0) return 8;
              const minBetweenness = 0.0001;
              const maxBetweenness = 0.12217142691280622;
              const normalized = Math.log1p(d.betweenness) / Math.log1p(maxBetweenness);
              const minRadius = 18;
              const maxRadius = 35;
              return minRadius + (normalized * (maxRadius - minRadius));
          })
          .attr(&#34;fill&#34;, d =&gt; getNodeColor(d))
          .attr(&#34;stroke&#34;, &#34;#ffffff&#34;)
          .attr(&#34;stroke-width&#34;, 1.5)
          .attr(&#34;class&#34;, &#34;node&#34;)
          .call(d3.drag()
              .on(&#34;start&#34;, dragstarted)
              .on(&#34;drag&#34;, dragged)
              .on(&#34;end&#34;, dragended))
          .on(&#34;mouseover&#34;, function(event, d) {
              highlightNeighbors(d);
              showTooltip(event, d);
          })
          .on(&#34;mouseout&#34;, function() {
              unhighlightAll();
              hideTooltip();
          });

      // Create labels and store their default attributes
      const label = g.append(&#34;g&#34;)
          .attr(&#34;class&#34;, &#34;labels&#34;)
          .selectAll(&#34;text&#34;)
          .data(nodes)
          .enter().append(&#34;text&#34;)
          .attr(&#34;class&#34;, &#34;node-label&#34;)
          .text(d =&gt; d.id)
          .attr(&#34;text-anchor&#34;, &#34;middle&#34;)
          .attr(&#34;dy&#34;, -3)
          .attr(&#34;fill&#34;, &#34;#ffffff&#34;)
          .attr(&#34;stroke&#34;, &#34;#000000&#34;)
          .attr(&#34;stroke-width&#34;, &#34;1px&#34;)
          .attr(&#34;paint-order&#34;, &#34;stroke&#34;)
          .attr(&#34;font-size&#34;, &#34;18px&#34;)
          .each(function(d) {
              const el = d3.select(this);
              d._default = {
                  opacity: el.style(&#34;opacity&#34;),
                  fontWeight: el.style(&#34;font-weight&#34;),
                  textAnchor: el.attr(&#34;text-anchor&#34;),
                  dy: el.attr(&#34;dy&#34;),
                  fill: el.attr(&#34;fill&#34;),
                  stroke: el.attr(&#34;stroke&#34;),
                  strokeWidth: el.attr(&#34;stroke-width&#34;),
                  paintOrder: el.attr(&#34;paint-order&#34;),
                  fontSize: el.attr(&#34;font-size&#34;)
              };
          });

      function highlightNeighbors(selectedNode) {
          let connectedNodes = new Set([selectedNode.id]);
          let connectedLinks = new Set();

          links.forEach(link =&gt; {
              if (link.source.id === selectedNode.id) {
                  connectedNodes.add(link.target.id);
                  connectedLinks.add(link);
              } else if (link.target.id === selectedNode.id) {
                  connectedNodes.add(link.source.id);
                  connectedLinks.add(link);
              }
          });

          node.style(&#34;opacity&#34;, d =&gt; connectedNodes.has(d.id) ? 1 : 0.2);
          link.style(&#34;opacity&#34;, d =&gt; {
              const isConnected = connectedLinks.has(d) || 
                                (connectedNodes.has(d.source.id) &amp;&amp; connectedNodes.has(d.target.id));
              return isConnected ? 0.9 : 0.1;
          });
          label.style(&#34;opacity&#34;, d =&gt; connectedNodes.has(d.id) ? 1 : 0.2);

          node.filter(d =&gt; connectedNodes.has(d.id))
              .style(&#34;stroke-width&#34;, 2.5)
              .style(&#34;filter&#34;, &#34;drop-shadow(0 0 8px rgba(255, 255, 255, 0.7))&#34;);

          link.filter(d =&gt; connectedLinks.has(d) || 
                        (connectedNodes.has(d.source.id) &amp;&amp; connectedNodes.has(d.target.id)))
              .style(&#34;stroke-width&#34;, 1)
              .style(&#34;stroke&#34;, &#34;rgba(255, 255, 255, 0.8)&#34;);

          label.filter(d =&gt; connectedNodes.has(d.id))
              .style(&#34;font-weight&#34;, &#34;bold&#34;)
              .style(&#34;font-size&#34;, &#34;18px&#34;);
      }

      function unhighlightAll() {
          node.style(&#34;opacity&#34;, 1)
              .style(&#34;stroke-width&#34;, 1.5)
              .style(&#34;filter&#34;, &#34;none&#34;);

          link.style(&#34;opacity&#34;, 0.7)
              .style(&#34;stroke-width&#34;, 1)
              .style(&#34;stroke&#34;, &#34;rgba(255, 255, 255, 0.4)&#34;);

          label.each(function(d) {
              const el = d3.select(this);
              const def = d._default;

              el.style(&#34;opacity&#34;, def.opacity)
              .style(&#34;font-weight&#34;, def.fontWeight)
              .attr(&#34;text-anchor&#34;, def.textAnchor)
              .attr(&#34;dy&#34;, def.dy)
              .attr(&#34;fill&#34;, def.fill)
              .attr(&#34;stroke&#34;, def.stroke)
              .attr(&#34;stroke-width&#34;, def.strokeWidth)
              .attr(&#34;paint-order&#34;, def.paintOrder)
              .attr(&#34;font-size&#34;, def.fontSize);
          });
      }

      simulation.on(&#34;tick&#34;, () =&gt; {
          link.attr(&#34;x1&#34;, d =&gt; d.source.x)
              .attr(&#34;y1&#34;, d =&gt; d.source.y)
              .attr(&#34;x2&#34;, d =&gt; d.target.x)
              .attr(&#34;y2&#34;, d =&gt; d.target.y);

          node.attr(&#34;cx&#34;, d =&gt; d.x)
              .attr(&#34;cy&#34;, d =&gt; d.y);

          label.attr(&#34;x&#34;, d =&gt; d.x)
              .attr(&#34;y&#34;, d =&gt; d.y);
      });

      function dragstarted(event, d) {
          if (!event.active) simulation.alphaTarget(0.3).restart();
          d.fx = d.x;
          d.fy = d.y;
      }
      function dragged(event, d) {
          d.fx = event.x;
          d.fy = event.y;
      }
      function dragended(event, d) {
          if (!event.active) simulation.alphaTarget(0);
          d.fx = null;
          d.fy = null;
      }

      function showTooltip(event, d) {
          const countryName = d.name;
          tooltip.html(`
              &lt;h3&gt;${countryName}&lt;/h3&gt;
              &lt;p&gt;&lt;strong&gt;Languages:&lt;/strong&gt; ${d.languages}&lt;/p&gt;
          `)
          .style(&#34;left&#34;, (event.pageX + 10) + &#34;px&#34;)
          .style(&#34;top&#34;, (event.pageY - 10) + &#34;px&#34;)
          .style(&#34;opacity&#34;, 1);
      }
      function hideTooltip() {
          tooltip.style(&#34;opacity&#34;, 0);
      }

      window.currentSimulation = simulation;
      window.currentNodes = nodes;
      window.currentLinks = links;
      window.highlightNeighbors = highlightNeighbors;
      window.unhighlightAll = unhighlightAll;
  }

  function fitToScreen() {
      const bounds = g.node().getBBox();
      const fullWidth = config.width;
      const fullHeight = config.height;
      const width = bounds.width;
      const height = bounds.height;
      
      const midX = bounds.x + width / 2;
      const midY = bounds.y + height / 2;
      
      if (width === 0 || height === 0) return;
      
      const scale = 0.95 / Math.max(width / fullWidth, height / fullHeight);
      const translate = [fullWidth / 2 - scale * midX, fullHeight / 2 - scale * midY];
      
      svg.transition()
          .duration(750)
          .call(zoom.transform, d3.zoomIdentity.translate(translate[0], translate[1]).scale(scale));
  }

  function setupControls() {
      d3.select(&#34;#fit-to-screen&#34;).on(&#34;click&#34;, fitToScreen);
      d3.select(&#34;#zoom-in&#34;).on(&#34;click&#34;, () =&gt; svg.transition().call(zoom.scaleBy, 1.3));
      d3.select(&#34;#zoom-out&#34;).on(&#34;click&#34;, () =&gt; svg.transition().call(zoom.scaleBy, 0.7));

      window.addEventListener(&#34;resize&#34;, function() {
          config.width = container.clientWidth;
          config.height = container.clientHeight;
          
          svg.attr(&#34;width&#34;, config.width)
             .attr(&#34;height&#34;, config.height);
          
          if (window.currentSimulation) {
              window.currentSimulation.force(&#34;center&#34;)
                  .x(config.width / 2)
                  .y(config.height / 2);
              window.currentSimulation.force(&#34;x&#34;)
                  .x(config.width / 2);
              window.currentSimulation.force(&#34;y&#34;)
                  .y(config.height / 2);
              window.currentSimulation.alpha(0.3).restart();
          }
          
          setTimeout(fitToScreen, 100);
      });

  }
&lt;/script&gt;

&lt;h2 id=&#34;macro-structure-of-the-network&#34;&gt;Macro-Structure of the Network&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Arabic Cluster:&lt;/strong&gt; Dense community across North Africa and the Middle East, tied together by Arabic.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Francophone Cluster:&lt;/strong&gt; Extends from Europe into Africa and overseas territories, linking France, Luxembourg, Cameroon, Gabon, Congo, and Mauritius.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Anglophone Cluster:&lt;/strong&gt; The most globally dispersed, spanning Europe, Africa, Asia, and the Americas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Broker Nodes:&lt;/strong&gt; Countries such as Tunisia, Sudan, UAE and Luxembourg serve as bridges, linking these clusters into one global system.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;key-bridges-and-connectors&#34;&gt;Key Bridges and Connectors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Tunisia – Connects French and Arabic worlds:&lt;/strong&gt; The sole bridge between Arabic and Francophone hubs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sudan &amp;amp; UAE – Connect Arabic and English worlds:&lt;/strong&gt; Sudan and UAE ties the Arabic cluster to the Anglophone.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Luxembourg &amp;amp; Mauritius – Connect English and French worlds:&lt;/strong&gt; Luxembourg unites Romance and Germanic Europe while projecting outward to Africa; Mauritius strengthens Francophone–Anglophone ties from the Indian Ocean.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Estonia – Connects English and Russian worlds:&lt;/strong&gt; Prevents the Russian-speaking bloc from isolation, reflecting its balance between eastern history and western integration.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;slides.pdf&#34;&gt;See more&lt;/a&gt;&lt;/p&gt;
&lt;!-- 
&lt;!DOCTYPE html&gt;
&lt;meta charset=&#34;utf-8&#34;&gt;
&lt;head&gt;
  &lt;title&gt;Bubble Plot - Population vs Languages&lt;/title&gt;
  &lt;script src=&#34;https://d3js.org/d3.v7.min.js&#34;&gt;&lt;/script&gt;
  &lt;style&gt;
    .bubblePlot-body { font-family: &#34;Segoe UI&#34;, Roboto, sans-serif; background:#fafafa; margin:0; padding:20px; }
    .bubblePlot-svg { width:100%; height:100vh; }
    .bubblePlot-title { font-size:70px; font-weight:700; text-anchor:middle; }
    .bubblePlot-axis-label { font-size:45px; font-weight:700; }
    .bubblePlot-tick text { font-size:30px; }
    .bubblePlot-tooltip {
      position:absolute; background:white; border:1px solid #ccc; padding:10px 12px; border-radius:6px;
      font-size:20px; pointer-events:none; box-shadow:0 2px 6px rgba(0,0,0,.2);
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body class=&#34;bubblePlot-body&#34;&gt;
  &lt;svg class=&#34;bubblePlot-svg&#34;&gt;&lt;/svg&gt;
  &lt;script&gt;
    // ---- Layout ----
    const M = {top: 0, right: 80, bottom: 0, left: 140};
    const W = window.innerWidth - M.left*6.0 - M.right;
    const H = window.innerHeight * 1.1 - M.top - M.bottom; // taller plot

    const bubbleSvg = d3.select(&#34;.bubblePlot-svg&#34;)
      .attr(&#34;viewBox&#34;, [0, 0, W + M.left + M.right, H + M.top + M.bottom]);

    const bubbleG = bubbleSvg.append(&#34;g&#34;).attr(&#34;transform&#34;, `translate(${M.left},${M.top})`);

    const tooltipG = d3.select(&#34;body&#34;).append(&#34;div&#34;).attr(&#34;class&#34;, &#34;bubblePlot-tooltip&#34;).style(&#34;opacity&#34;, 0);

    d3.csv(&#34;df_full.csv&#34;).then(raw =&gt; {
      // ---- Aggregate to one row per Territory ----
      const byTerritory = d3.rollup(
        raw,
        rows =&gt; {
          const popRow = rows.find(r =&gt; r.population &amp;&amp; String(r.population).trim() !== &#34;&#34;);
          const pop = popRow ? +popRow.population : NaN;
          return { Territory: rows[0].Territory, population: pop, num_languages: rows.length };
        },
        r =&gt; r.Territory
      );

      const data = Array.from(byTerritory.values()).filter(d =&gt; !isNaN(d.population) &amp;&amp; d.population &gt; 0);

      // ---- Scales ----
      const x = d3.scaleLog()
        .domain([d3.min(data, d =&gt; d.population) * 0.8, d3.max(data, d =&gt; d.population) * 1.2])
        .range([0, W]);

      const y = d3.scaleLinear()
        .domain([0, d3.max(data, d =&gt; d.num_languages) * 1.1])
        .range([H, 0]);

      const r = d3.scaleSqrt()
        .domain(d3.extent(data, d =&gt; d.population))
        .range([6, 70]);

      const color = d3.scaleSequential(d3.interpolateViridis)
        .domain(d3.extent(data, d =&gt; d.num_languages));

      // ---- Axes ----
      const xAxis = d3.axisBottom(x).ticks(12, &#34;~s&#34;);
      const yAxis = d3.axisLeft(y).ticks(12);

      const gx = bubbleG.append(&#34;g&#34;).attr(&#34;class&#34;, &#34;bubblePlot-tick&#34;).attr(&#34;transform&#34;, `translate(0,${H})`).call(xAxis);
      const gy = bubbleG.append(&#34;g&#34;).attr(&#34;class&#34;, &#34;bubblePlot-tick&#34;).call(yAxis);

      // Labels &amp; title
      bubbleG.append(&#34;text&#34;).attr(&#34;class&#34;, &#34;bubblePlot-title&#34;).attr(&#34;x&#34;, W/2).attr(&#34;y&#34;, -50)
        .text(&#34;Population vs Linguistic Diversity&#34;);

      bubbleG.append(&#34;text&#34;).attr(&#34;class&#34;, &#34;bubblePlot-axis-label&#34;)
        .attr(&#34;x&#34;, W/2).attr(&#34;y&#34;, H + 90).attr(&#34;text-anchor&#34;, &#34;middle&#34;)
        .text(&#34;Population (log scale)&#34;);

      bubbleG.append(&#34;text&#34;).attr(&#34;class&#34;, &#34;bubblePlot-axis-label&#34;)
        .attr(&#34;transform&#34;, &#34;rotate(-90)&#34;)
        .attr(&#34;x&#34;, -H/2).attr(&#34;y&#34;, -110).attr(&#34;text-anchor&#34;, &#34;middle&#34;)
        .text(&#34;Number of Languages&#34;);

      // ---- Points ----
      bubbleG.append(&#34;g&#34;)
        .selectAll(&#34;circle&#34;).data(data).join(&#34;circle&#34;)
        .attr(&#34;cx&#34;, d =&gt; x(d.population))
        .attr(&#34;cy&#34;, d =&gt; y(d.num_languages))
        .attr(&#34;r&#34;, d =&gt; r(d.population))
        .attr(&#34;fill&#34;, d =&gt; color(d.num_languages))
        .attr(&#34;stroke&#34;, &#34;#333&#34;).attr(&#34;stroke-width&#34;, 1).attr(&#34;opacity&#34;, 0.8)
        .on(&#34;mouseover&#34;, (event, d) =&gt; {
          tooltipG.transition().duration(150).style(&#34;opacity&#34;, 1);
          tooltipG.html(
            `&lt;strong&gt;${d.Territory}&lt;/strong&gt;&lt;br&gt;
             Population: ${d3.format(&#34;,&#34;)(d.population)}&lt;br&gt;
             Languages: ${d.num_languages}`
          )
          .style(&#34;left&#34;, (event.pageX + 12) + &#34;px&#34;)
          .style(&#34;top&#34;, (event.pageY - 28) + &#34;px&#34;);
        })
        .on(&#34;mousemove&#34;, (event) =&gt; {
          tooltipG.style(&#34;left&#34;, (event.pageX + 12) + &#34;px&#34;)
                 .style(&#34;top&#34;, (event.pageY - 28) + &#34;px&#34;);
        })
        .on(&#34;mouseout&#34;, () =&gt; tooltipG.transition().duration(150).style(&#34;opacity&#34;, 0));
    });
  &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
 --&gt;</description>
    </item>
    
    <item>
      <title>Mapeie sua próxima descoberta musical</title>
      <link>https://alvarofrancomartins.com/post/sankey/</link>
      <pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate>
      <guid>https://alvarofrancomartins.com/post/sankey/</guid>
      <description>&lt;p&gt;Cansado das listas superficiais de artistas similares? Esta ferramenta vai fundo, revelando artistas de artistas de artistas&amp;hellip; até quatro níveis de distância do seu artista favorito.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;É uma forma de visualizar uma vasta rede de conexões musicais de maneira condensada, perfeita para quem tem gostos ecléticos e busca expandir seus horizontes sonoros. A partir de um artista que você já curte, descubra caminhos surpreendentes para novos talentos e quebre suas barreiras musicais.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Cada nome no diagrama é um convite para explorar mais: clique e acesse diretamente a página do artista no Last.fm.&lt;/p&gt;
&lt;br&gt;

&lt;!DOCTYPE html&gt;
&lt;div id=&#34;artistas-app-container&#34; class=&#34;artistas-app-wrapper&#34;&gt;
    &lt;header class=&#34;artistas-app-header&#34;&gt;
        &lt;h2&gt;Artistas Similares&lt;/h2&gt;
        &lt;p&gt;Pesquise seu artista favorito abaixo. Descubra conexões musicais em até 4 níveis de similaridade.&lt;/p&gt;
    &lt;/header&gt;
    &lt;div class=&#34;artistas-app-search-container&#34;&gt;
        &lt;input type=&#34;text&#34; id=&#34;artist-input-app&#34; placeholder=&#34;Digite o nome de um artista&#34; value=&#34;Radiohead&#34;&gt;
        &lt;button id=&#34;search-button-app&#34;&gt;Buscar&lt;/button&gt;
        &lt;button id=&#34;generate-diagram-playlist-btn-app&#34; class=&#34;artistas-app-playlist-button&#34; disabled&gt;✨ Gerar Playlist&lt;/button&gt;
    &lt;/div&gt;
    &lt;div id=&#34;search-feedback-message-app&#34; class=&#34;artistas-app-feedback&#34;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;sankey-chart-container-app&#34; class=&#34;artistas-app-sankey-container&#34; style=&#34;display: none;&#34;&gt;
    &lt;div id=&#34;sankey-chart-app&#34;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;playlist-modal-overlay-app&#34; class=&#34;artistas-app-modal-overlay&#34;&gt;
    &lt;div class=&#34;artistas-app-modal-content&#34;&gt;
        &lt;button id=&#34;modal-close-btn-app&#34; class=&#34;artistas-app-modal-close-button&#34;&gt;&amp;times;&lt;/button&gt;
        &lt;h2 id=&#34;playlist-modal-title-app&#34;&gt;🎶 Sankey Playlist&lt;/h2&gt;
        &lt;div id=&#34;playlist-modal-body-app&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;footer class=&#34;artistas-app-footer&#34;&gt;
    &lt;p&gt;Dados fornecidos pela &lt;a href=&#34;https://www.last.fm&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Last.fm&lt;/a&gt;.&lt;/p&gt;
&lt;/footer&gt;

&lt;style&gt;
/* Para evitar conflitos, todas as classes têm o prefixo &#34;artistas-app-&#34; */
.artistas-app-wrapper {
    font-family: &#39;Inter&#39;, sans-serif; /* Certifique-se que a fonte Inter está carregada na sua página Hugo principal */
    line-height: 1.6;
    color: #374151;
    margin-bottom: 40px;
}
.artistas-app-header { text-align: center; margin-bottom: 20px; }
.artistas-app-header h2 { color: #c53030; margin-top: 0; margin-bottom: 5px; font-weight: 700; font-size: 1.8rem; }
.artistas-app-header p { margin-bottom: 0; font-size: 1rem; color: #6b7280; }

.artistas-app-search-container {
    display: flex;
    justify-content: center;
    align-items: stretch; /* Para alinhar altura dos botões e input */
    margin-bottom: 15px;
    gap: 8px; /* Espaço entre os elementos */
}
.artistas-app-search-container input[type=&#34;text&#34;] {
    padding: 10px 15px;
    width: clamp(220px, 50%, 300px); /* Ajustada largura do input */
    border: 1px solid #d1d5db;
    border-radius: 8px;
    font-size: 1rem;
    box-shadow: 0 1px 2px rgba(0,0,0,0.05);
}
.artistas-app-search-container input[type=&#34;text&#34;]:focus {
    outline: none;
    border-color: #c53030;
    box-shadow: 0 0 0 3px rgba(197, 48, 48, 0.15);
    z-index: 1;
}
.artistas-app-search-container button#search-button-app {
    padding: 10px 20px;
    background-color: #c53030;
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 600;
    white-space: nowrap;
}
.artistas-app-search-container button#search-button-app:hover {
    background-color: #a02828;
}

button.artistas-app-playlist-button { /* Estilo para o botão de playlist, agora no mesmo container */
    background-color: #2563eb;
    color: white;
    padding: 10px 18px;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    white-space: nowrap;
    transition: background-color 0.2s ease, opacity 0.2s ease;
    box-shadow: 0 1px 2px rgba(0,0,0,0.07);
}
button.artistas-app-playlist-button:hover {
    background-color: #1d4ed8;
}
button.artistas-app-playlist-button:disabled {
    background-color: #9ca3af;
    opacity: 0.7;
    cursor: not-allowed;
}

.sankey-chart-app {
    width: 100%;
    overflow: visible; /* Prevents unintended cropping */
}

.artistas-app-feedback { text-align: center; margin: 8px 0; min-height: 18px; font-size: 1rem; color: #4b5563; }
.artistas-app-feedback.error { color: #c53030; font-weight: 500; }
.artistas-app-sankey-container { width: 100%; max-width: 100%; margin-top: 5px; background-color: #ffffff; border-radius: 12px; box-shadow: 0 6px 12px rgba(0,0,0,0.08); padding: 5px; box-sizing: border-box; overflow-x: auto; }
.artistas-app-sankey-container svg { display: block; width: 100%; min-height: 800px; /* Aumentada altura mínima para profundidade 4 */ }
.sankey-node-group { cursor: pointer; }
.sankey-node rect { fill-opacity: 1; shape-rendering: crispEdges; stroke: rgba(0,0,0,0.1); stroke-width: 0.5px; transition: all 0.2s ease; }
.sankey-node-group:hover .sankey-node { stroke-width: 1.5px; stroke: rgba(0,0,0,0.3); fill-opacity: 0.85; }
.sankey-link { fill: none; stroke-opacity: 0.55; transition: stroke-opacity 0.2s ease; }
/* .sankey-link-group:hover .sankey-link { stroke-opacity: 0.8; } */
.sankey-node-label { pointer-events: none; font-size: 20px; font-weight: 500; fill: #1f2937; transition: all 0.2s ease; }
.sankey-node-group:hover .sankey-node-label { font-size: 20px; font-weight: 700; fill: #000000; }
.artistas-app-modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.6); display: flex; justify-content: center; align-items: center; z-index: 2000; opacity: 0; visibility: hidden; transition: opacity 0.3s ease, visibility 0.3s ease; }
.artistas-app-modal-overlay.active { opacity: 1; visibility: visible; }
.artistas-app-modal-content { background-color: white; padding: 20px 25px; border-radius: 12px; box-shadow: 0 5px 15px rgba(0,0,0,0.3); width: 90%; max-width: 650px; max-height: 80vh; overflow-y: auto; position: relative; }
.artistas-app-modal-content h2 { margin-top: 0; margin-bottom: 15px; font-size: 1.4rem; color: #c53030; }
.artistas-app-modal-content ul { list-style: decimal; padding-left: 20px; }
.artistas-app-modal-content li { margin-bottom: 8px; font-size: 0.9rem; }
.artistas-app-modal-content li a { color: #2563eb; text-decoration: none; font-weight: 500; }
.artistas-app-modal-content li a:hover { text-decoration: underline; }
.artistas-app-modal-close-button { position: absolute; top: 10px; right: 15px; background: none; border: none; font-size: 1.7rem; cursor: pointer; color: #9ca3af; padding: 0; line-height: 1; }
.artistas-app-modal-close-button:hover { color: #6b7280; }
.artistas-app-modal-loading-spinner { display: flex; flex-direction: column; justify-content: center; align-items: center; min-height: 120px; }
.artistas-app-modal-loading-spinner p { margin-bottom: 12px; font-size: 0.95rem; color: #4b5563; }
.spinner { border: 4px solid rgba(0, 0, 0, 0.1); width: 32px; height: 32px; border-radius: 50%; border-left-color: #c53030; animation: spin 1s ease infinite; }
@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
.artistas-app-footer { text-align: center; padding: 10px 0; font-size: 0.8rem; color: #6b7280; margin-top: 15px; }
.artistas-app-footer a { color: #c53030; text-decoration: none; }
.artistas-app-footer a:hover { text-decoration: underline; }
&lt;/style&gt;

&lt;script src=&#34;https://d3js.org/d3.v7.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://unpkg.com/d3-sankey@0.12.3/dist/d3-sankey.min.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;
(function() {
    // Get references to DOM elements
    const artistInputApp = document.getElementById(&#39;artist-input-app&#39;);
    // Early exit if the main input isn&#39;t found (e.g., if script is loaded on a page without the app)
    if (!artistInputApp) { return; }

    const searchButtonApp = document.getElementById(&#39;search-button-app&#39;);
    const generateDiagramPlaylistBtnApp = document.getElementById(&#39;generate-diagram-playlist-btn-app&#39;);
    const searchFeedbackMessageApp = document.getElementById(&#39;search-feedback-message-app&#39;);
    const sankeyChartContainerApp = document.getElementById(&#39;sankey-chart-container-app&#39;);
    const sankeyChartDivApp = document.getElementById(&#39;sankey-chart-app&#39;);

    // Playlist Modal Elements
    const playlistModalOverlayApp = document.getElementById(&#39;playlist-modal-overlay-app&#39;);
    const playlistModalTitleApp = document.getElementById(&#39;playlist-modal-title-app&#39;);
    const playlistModalBodyApp = document.getElementById(&#39;playlist-modal-body-app&#39;);
    const modalCloseBtnApp = document.getElementById(&#39;modal-close-btn-app&#39;);

    // Configuration constants
    const MAX_DEPTH_APP = 4; // Max levels of similarity to explore
    const SIMILAR_ARTISTS_LIMIT_PER_CALL_APP = 3; // How many similar artists to fetch per API call

    // State variables
    let currentGraphNodesApp = []; // Stores nodes currently displayed in the diagram
    let cachedPlaylistDataApp = null; // Caches generated playlist to avoid re-fetching
    let cachedDiagramSignatureApp = null; // Signature of the current diagram to validate cache

    // --- D3 Sankey Diagram Configuration ---
    // MODIFICATION 1: Reduce left and right margins to provide more horizontal space
    const marginApp = {top: 40, right: 40, bottom: 40, left: 40}; // Margins for the SVG
    const nodeWidthApp = 25; // Width of the Sankey nodes
    const nodePaddingVerticalApp = 50; // Vertical padding between nodes in the same column

    /**
     * Initializes the application by setting up event listeners.
     * It also triggers an initial search if an artist name is pre-filled.
     */
    function initializePageApp() {
        searchButtonApp.addEventListener(&#39;click&#39;, handleSearchApp);
        artistInputApp.addEventListener(&#39;keypress&#39;, (event) =&gt; { if (event.key === &#39;Enter&#39;) handleSearchApp(); });
        generateDiagramPlaylistBtnApp.addEventListener(&#39;click&#39;, handleGenerateDiagramPlaylistApp);
        modalCloseBtnApp.addEventListener(&#39;click&#39;, () =&gt; playlistModalOverlayApp.classList.remove(&#39;active&#39;));
        // Close modal if user clicks outside the content area
        playlistModalOverlayApp.addEventListener(&#39;click&#39;, (event) =&gt; {
            if (event.target === playlistModalOverlayApp) playlistModalOverlayApp.classList.remove(&#39;active&#39;);
        });
        handleSearchApp(); // Perform an initial search (e.g., for &#34;Radiohead&#34; if pre-filled)
    }

    /**
     * Displays a loading message and disables UI elements during data fetching.
     * @param {string} message - The message to display.
     */
    function showLoadingApp(message = &#34;Procurando...&#34;) {
        searchFeedbackMessageApp.textContent = message;
        searchFeedbackMessageApp.className = &#39;artistas-app-feedback&#39;; // Reset class
        sankeyChartContainerApp.style.display = &#39;none&#39;; // Hide diagram container
        generateDiagramPlaylistBtnApp.disabled = true;
        searchButtonApp.disabled = true;
        artistInputApp.disabled = true;
    }

    /**
     * Hides the loading state by re-enabling UI elements.
     */
    function hideLoadingApp() {
        searchButtonApp.disabled = false;
        artistInputApp.disabled = false;
        // Playlist button is enabled separately when diagram is ready
    }

    /**
     * Displays an error message to the user.
     * @param {string} message - The error message.
     */
    function showErrorApp(message) {
        console.error(&#34;Erro (Artistas App):&#34;, message);
        searchFeedbackMessageApp.textContent = message;
        searchFeedbackMessageApp.className = &#39;artistas-app-feedback error&#39;; // Add error class for styling
        sankeyChartContainerApp.style.display = &#39;none&#39;;
        generateDiagramPlaylistBtnApp.disabled = true;
        hideLoadingApp(); // Re-enable search inputs
    }

    /**
     * Calls a Netlify serverless function which acts as a proxy to the Last.fm API.
     * This is used to hide the API key and manage requests.
     * @param {string} method - The Last.fm API method (e.g., &#39;artist.getinfo&#39;, &#39;artist.getsimilar&#39;).
     * @param {string|null} artistName - The name of the artist for the query.
     * @param {number} limit - The number of results to limit for certain methods.
     * @returns {Promise&lt;object&gt;} - A promise that resolves with the JSON data from the API.
     * @throws {Error} - If the API call fails or returns an error.
     */
    async function callNetlifyProxy(method, artistName = null, limit = SIMILAR_ARTISTS_LIMIT_PER_CALL_APP) {
        const netlifyFunctionBaseUrl = &#34;https://afmartins.netlify.app/.netlify/functions/lastfm-proxy&#34;;

        let proxyUrl = `${netlifyFunctionBaseUrl}?method=${method}`;
        if (artistName) proxyUrl += `&amp;artist=${encodeURIComponent(artistName)}`;
        if (method === &#39;artist.getsimilar&#39; || method === &#39;artist.gettoptracks&#39;) proxyUrl += `&amp;limit=${limit}`;

        try {
            const response = await fetch(proxyUrl);
            const contentType = response.headers.get(&#34;content-type&#34;);

            if (contentType &amp;&amp; contentType.indexOf(&#34;application/json&#34;) !== -1) {
                const data = await response.json();
                if (!response.ok) { // Check for HTTP errors (4xx, 5xx)
                    const errorMsg = data.error || data.details || `Erro ao chamar o proxy (Status: ${response.status})`;
                    throw new Error(errorMsg);
                }
                // Check for Last.fm specific errors embedded in the JSON response
                if (data.error &amp;&amp; typeof data.error === &#39;string&#39; &amp;&amp; data.message) throw new Error(data.message); // Last.fm error format 1
                if (data.error &amp;&amp; data.error.message) throw new Error(data.error.message); // Last.fm error format 2
                return data;
            } else {
                // Handle non-JSON responses (e.g., HTML error pages from proxy)
                const textResponse = await response.text();
                throw new Error(`Resposta inesperada do servidor proxy (não JSON). Status: ${response.status}. Resposta: ${textResponse.substring(0,100)}...`);
            }
        } catch (error) {
            console.error(`Erro na callNetlifyProxy para ${method} (${artistName || &#39;&#39;}):`, error);
            throw error; // Re-throw to be caught by calling function
        }
    }

    /**
     * Fetches detailed information for a specific artist.
     * @param {string} artistName - The name of the artist.
     * @returns {Promise&lt;object&gt;} - Artist data object.
     */
    async function fetchArtistInfoAPIApp(artistName) {
        try {
            const data = await callNetlifyProxy(&#39;artist.getinfo&#39;, artistName);
            if (!data.artist) throw new Error (`Informações do artista &#34;${artistName}&#34; não encontradas (via proxy).`);
            return data.artist;
        } catch (error) {
            throw error;
        }
    }

    /**
     * Fetches artists similar to a given artist.
     * @param {string} artistName - The name of the artist.
     * @returns {Promise&lt;Array&lt;object&gt;&gt;} - An array of similar artist objects.
     */
    async function fetchSimilarArtistsAPIApp(artistName) {
        try {
            const data = await callNetlifyProxy(&#39;artist.getsimilar&#39;, artistName, SIMILAR_ARTISTS_LIMIT_PER_CALL_APP);
            return (data.similarartists &amp;&amp; Array.isArray(data.similarartists.artist)) ? data.similarartists.artist : [];
        } catch (error) {
            // Log a warning but don&#39;t let it break the entire diagram generation if one artist fails
            console.warn(`Falha ao buscar similares para &#34;${artistName}&#34; via proxy: ${error.message}`);
            return []; // Return empty array on failure
        }
    }

    /**
     * Fetches the top track for a given artist.
     * @param {string} artistName - The name of the artist.
     * @returns {Promise&lt;object|null&gt;} - The top track object or null if not found.
     */
    async function fetchArtistTopTrackAPIApp(artistName) {
         try {
            const data = await callNetlifyProxy(&#39;artist.gettoptracks&#39;, artistName, 1); // Fetch only 1 top track
            if (!data.toptracks || !data.toptracks.track || data.toptracks.track.length === 0) {
                console.warn(`Nenhuma top track encontrada para &#34;${artistName}&#34; via proxy.`);
                return null;
            }
            return data.toptracks.track[0]; // Return the first track
        } catch (error) {
            console.warn(`Erro ao buscar top track para &#34;${artistName}&#34; via proxy: ${error.message}`);
            return null;
        }
    }

    /**
     * Generates a unique signature for a set of diagram nodes.
     * Used to check if the playlist cache is still valid for the current diagram.
     * @param {Array&lt;object&gt;} nodes - Array of node objects from the diagram.
     * @returns {string|null} - A sorted string of node names or null.
     */
    function generateDiagramSignatureApp(nodes) {
        if (!nodes || nodes.length === 0) return null;
        return nodes.map(n =&gt; n.name).sort().join(&#39;||&#39;); // Simple signature: sorted names joined
    }

    /**
     * Recursively fetches similar artists up to a max depth and prepares data for the Sankey diagram.
     * This function now explicitly tracks and assigns an &#39;explicitDepth&#39; to each node
     * based on its level in the BFS traversal from the initial artist.
     * @param {string} initialArtistName - The starting artist for the similarity search.
     * @param {number} maxDepth - The maximum depth of similarity links to explore.
     * @returns {Promise&lt;object&gt;} - An object containing nodes, links, and the initial artist name.
     */
    async function generateSankeyDataApp(initialArtistName, maxDepth) {
        const rawLinks = []; // Stores link objects {source, target, value}
        const fetchedArtists = new Set(); // Keeps track of artists already processed to avoid redundant API calls and cycles
        const allNodesData = new Map(); // Stores node data {name, url, explicitDepth} keyed by artist name

        let initialArtistData;
        try {
            // Fetch info for the initial artist to ensure it&#39;s valid and get its URL
            initialArtistData = await fetchArtistInfoAPIApp(initialArtistName);
            // Assign initial explicit depth
            allNodesData.set(initialArtistData.name, { name: initialArtistData.name, url: initialArtistData.url, explicitDepth: 0 });
        } catch (error) {
            // If the initial artist can&#39;t be fetched, throw error to stop processing
            throw error;
        }

        // Use a queue for a Breadth-First Search (BFS) to correctly assign explicit depths
        const queue = [{ artistName: initialArtistData.name, depth: 0 }];
        fetchedArtists.add(initialArtistData.name.toLowerCase()); // Mark initial artist as fetched

        let head = 0;
        while (head &lt; queue.length) {
            const { artistName: currentArtist, depth: currentDepth } = queue[head++];

            if (currentDepth &gt;= maxDepth) continue; // Stop exploring if max depth reached

            const similarArtists = await fetchSimilarArtistsAPIApp(currentArtist);

            similarArtists.forEach(targetArtistInfo =&gt; {
                // Ensure the similar artist data is valid
                if (targetArtistInfo &amp;&amp; targetArtistInfo.name &amp;&amp; targetArtistInfo.match &amp;&amp; targetArtistInfo.url) {
                    const targetArtistName = targetArtistInfo.name;
                    const normalizedTargetArtist = targetArtistName.toLowerCase();

                    // Only process if not already fetched at an earlier or equal depth
                    if (!fetchedArtists.has(normalizedTargetArtist)) {
                        fetchedArtists.add(normalizedTargetArtist);
                        // Assign explicit depth to the new node
                        allNodesData.set(targetArtistName, { name: targetArtistName, url: targetArtistInfo.url, explicitDepth: currentDepth + 1 });
                        queue.push({ artistName: targetArtistName, depth: currentDepth + 1 });
                    }

                    // Add link if similarity is above threshold AND it doesn&#39;t create a circular reference
                    // by ensuring the target node&#39;s explicitDepth is greater than the source node&#39;s.
                    const weight = parseFloat(targetArtistInfo.match) * 100; // &#39;match&#39; is similarity score (0-1)
                    if (weight &gt; 0.01) { // Only include links with a minimal similarity
                        const sourceNode = allNodesData.get(currentArtist);
                        const targetNode = allNodesData.get(targetArtistName);

                        // Prevent circular links: only add if target depth is greater than source depth
                        if (sourceNode &amp;&amp; targetNode &amp;&amp; targetNode.explicitDepth &gt; sourceNode.explicitDepth) {
                            rawLinks.push({ source: currentArtist, target: targetArtistName, value: Math.max(0.01, weight) }); // Sankey value
                        }
                    }
                }
            });
        }

        const nodes = Array.from(allNodesData.values()); // Convert Map to array of node objects
        // Filter out any links where source or target might have been removed or failed to add
        const links = rawLinks.filter(link =&gt; allNodesData.has(link.source) &amp;&amp; allNodesData.has(link.target));

        // Ensure all nodes involved in links actually exist in `nodes` and have an explicitDepth.
        // This is a safeguard for any edge cases where a node might be linked but not fully processed.
        links.forEach(link =&gt; {
            if (!allNodesData.has(link.source)) {
                allNodesData.set(link.source, { name: link.source, url: `https://www.last.fm/music/${encodeURIComponent(link.source.replace(/\s+/g, &#39;+&#39;))}`, explicitDepth: 0 }); // Fallback depth
            }
            if (!allNodesData.has(link.target)) {
                allNodesData.set(link.target, { name: link.target, url: `https://www.last.fm/music/${encodeURIComponent(link.target.replace(/\s+/g, &#39;+&#39;))}`, explicitDepth: 0 }); // Fallback depth
            }
        });
        // Re-filter nodes to ensure consistency after potential fallback additions
        const finalNodes = Array.from(allNodesData.values());


        return { nodes: finalNodes, links, initialArtistName: initialArtistData.name };
    }

    /**
     * Displays the generated playlist in a modal window.
     * @param {object} playlistData - Object containing playlistName and an array of tracks.
     */
    function displayPlaylistInModalApp(playlistData) {
        playlistModalTitleApp.textContent = `🎶 ${playlistData.playlistName}`;
        let playlistHtml = &#34;&lt;ul&gt;&#34;;
        playlistData.tracks.forEach(track =&gt; {
            playlistHtml += `&lt;li&gt;&lt;a href=&#34;${track.trackUrl}&#34; target=&#34;_blank&#34;&gt;${track.trackName}&lt;/a&gt; - ${track.artistName}&lt;/li&gt;`;
        });
        playlistHtml += &#34;&lt;/ul&gt;&#34;;
        playlistModalBodyApp.innerHTML = playlistHtml;
        playlistModalOverlayApp.classList.add(&#39;active&#39;); // Show the modal
        generateDiagramPlaylistBtnApp.disabled = false; // Re-enable button
    }

    /**
     * Draws the Sankey diagram using D3.js.
     * @param {object} sankeyData - Data object containing nodes and links.
     */
    function drawSankeyD3App(sankeyData) {
        searchFeedbackMessageApp.textContent = &#39;&#39;; // Clear any previous messages
        const { nodes, links, initialArtistName } = sankeyData;
        currentGraphNodesApp = []; // Reset current graph nodes

        // Handle cases with no data or only a single node
        if (!nodes || nodes.length === 0) {
            showErrorApp(`Nenhum dado encontrado para &#34;${initialArtistName}&#34;.`);
            generateDiagramPlaylistBtnApp.disabled = true; return;
        }
        // Special display for a single artist with no similar links found
        if (nodes.length === 1 &amp;&amp; (!links || links.length === 0)) {
            sankeyChartDivApp.innerHTML = &#39;&#39;; // Clear previous diagram
            const singleNode = nodes[0]; currentGraphNodesApp = [singleNode]; // Store for playlist
            const svgSingle = d3.select(sankeyChartDivApp).append(&#34;svg&#34;)
                .attr(&#34;width&#34;, &#34;100%&#34;)
                .attr(&#34;height&#34;, 120)
                .append(&#34;g&#34;)
                .attr(&#34;transform&#34;, `translate(20, 30)`);

            svgSingle.append(&#34;text&#34;).attr(&#34;x&#34;, 0).attr(&#34;y&#34;, 20).attr(&#34;class&#34;, &#34;sankey-node-label&#34;).style(&#34;font-size&#34;, &#34;16px&#34;)
                .text(`Artista: `)
              .append(&#34;a&#34;) // Make artist name a link
                .attr(&#34;xlink:href&#34;, singleNode.url)
                .attr(&#34;target&#34;, &#34;_blank&#34;)
                .style(&#34;fill&#34;, &#34;#c53030&#34;) // Style link
                .style(&#34;text-decoration&#34;, &#34;underline&#34;)
                .text(singleNode.name);
            svgSingle.append(&#34;text&#34;).attr(&#34;x&#34;, 0).attr(&#34;y&#34;, 45).attr(&#34;class&#34;, &#34;sankey-node-label&#34;)
                .text(&#34;(Nenhum artista similar direto encontrado na Last.fm)&#34;);

            sankeyChartContainerApp.style.display = &#39;block&#39;;
            generateDiagramPlaylistBtnApp.disabled = false; // Can still generate playlist for single artist
            hideLoadingApp();
            return;
        }
        // If there are nodes but no links (e.g., initial artist + others but no connections made)
        if ((!links || links.length === 0) &amp;&amp; nodes.length &gt; 1) {
             showErrorApp(`Nenhum artista similar encontrado para &#34;${initialArtistName}&#34; para gerar o diagrama.`);
             generateDiagramPlaylistBtnApp.disabled = true; return;
        }

        // --- Sankey Diagram Setup ---
        const containerWidth = Math.max(1200, sankeyChartDivApp.clientWidth); // Ensure minimum width or use container width
        // Dynamic height based on number of nodes and links to prevent squashing
        const dynamicHeight = Math.max(800, nodes.length * 50 + links.length * 20);
        const width = containerWidth - marginApp.left - marginApp.right;
        const height = dynamicHeight - marginApp.top - marginApp.bottom;

        sankeyChartDivApp.innerHTML = &#39;&#39;; // MODIFICATION: Clear previous diagram before drawing new one
        const svg = d3.select(sankeyChartDivApp).append(&#34;svg&#34;)
            .attr(&#34;width&#34;, containerWidth)
            .attr(&#34;height&#34;, dynamicHeight)
          .append(&#34;g&#34;)
            .attr(&#34;transform&#34;, `translate(${marginApp.left},${marginApp.top})`);

        // MODIFICATION: Change nodeAlign to a custom function to prevent nodes with no outgoing links
        // from being pushed to the last column. This aligns nodes based purely on their explicitDepth.
        const sankey = d3.sankey()
            .nodeId(d =&gt; d.name) // Accessor for node ID (artist name)
            .nodeAlign(function(node) {
                // Use the &#39;explicitDepth&#39; property assigned during graph generation
                // to align nodes to columns. This ensures nodes stay in their
                // natural depth position, even if they have no outgoing links.
                return node.explicitDepth;
            })
            .nodeWidth(nodeWidthApp)
            .nodePadding(nodePaddingVerticalApp)
            .extent([[0, 5], [width, height - 5]]) // Diagram bounds [[x0, y0], [x1, y1]]
            .iterations(32); // Number of layout iterations

        let graph;
        try {
            // Compute the Sankey layout. D3 modifies the nodes and links objects in place.
            // It will also add its own &#39;depth&#39; property, but our nodeAlign uses &#39;explicitDepth&#39;.
            graph = sankey({
                nodes: JSON.parse(JSON.stringify(nodes)), // Deep copy to avoid modifying original data
                links: JSON.parse(JSON.stringify(links))
            });
        } catch (error) {
            showErrorApp(`Erro no layout do Sankey: ${error.message}.`);
            generateDiagramPlaylistBtnApp.disabled = true; return;
        }

        if (!graph || !graph.nodes || !graph.links || graph.nodes.length === 0) {
            showErrorApp(&#39;Falha ao gerar o gráfico Sankey com os dados processados.&#39;);
            generateDiagramPlaylistBtnApp.disabled = true; return;
        }

        currentGraphNodesApp = graph.nodes; // Store processed nodes for playlist generation
        generateDiagramPlaylistBtnApp.disabled = false; // Enable playlist button

        // --- Color Scheme &amp; Gradients for Links ---
        const simpleColors = [&#34;#66c2a5&#34;, &#34;#fc8d62&#34;, &#34;#8da0cb&#34;, &#34;#e78ac3&#34;, &#34;#a6d854&#34;, &#34;#ffd92f&#34;, &#34;#e5c494&#34;, &#34;#b3b3b3&#34;];
        let maxNodeDepth = 0;
        // MODIFICATION: Ensure node.explicitDepth is used for color if available
        graph.nodes.forEach(node =&gt; {
            const depthToUse = typeof node.explicitDepth === &#39;number&#39; ? node.explicitDepth : node.depth;
            if (typeof depthToUse !== &#39;number&#39; || isNaN(depthToUse)) node.depth = 0; // Fallback to 0 if neither is valid
            if (depthToUse &gt; maxNodeDepth) maxNodeDepth = depthToUse;
        });
        // Color nodes based on their explicit depth (or D3&#39;s depth as fallback)
        const nodeColorFunc = (node) =&gt; {
            const depthToUse = typeof node.explicitDepth === &#39;number&#39; ? node.explicitDepth : node.depth;
            if (typeof depthToUse !== &#39;number&#39; || isNaN(depthToUse)) return &#34;#cccccc&#34;; // Fallback color
            return simpleColors[depthToUse % simpleColors.length];
        };

        const defs = svg.append(&#34;defs&#34;); // Container for SVG definitions (like gradients)
        // Create a gradient for each link
        graph.links.forEach((link, i) =&gt; {
            const gradientID = `linkGradient-${i}`; // Unique ID for each gradient
            const gradient = defs.append(&#34;linearGradient&#34;)
                .attr(&#34;id&#34;, gradientID)
                .attr(&#34;gradientUnits&#34;, &#34;userSpaceOnUse&#34;) // Gradient coordinates relative to the link path
                .attr(&#34;x1&#34;, link.source.x1) // Start gradient at the end of the source node
                .attr(&#34;x2&#34;, link.target.x0); // End gradient at the start of the target node

            const sourceColor = nodeColorFunc(link.source);
            const targetColor = nodeColorFunc(link.target);
            gradient.append(&#34;stop&#34;).attr(&#34;offset&#34;, &#34;0%&#34;).attr(&#34;stop-color&#34;, sourceColor);
            gradient.append(&#34;stop&#34;).attr(&#34;offset&#34;, &#34;100%&#34;).attr(&#34;stop-color&#34;, targetColor);
        });

        // --- Draw Links ---
        const linkGroups = svg.append(&#34;g&#34;)
            .attr(&#34;fill&#34;, &#34;none&#34;) // Links are typically strokes, not fills
          .selectAll(&#34;g.sankey-link-group&#34;)
          .data(graph.links)
          .join(&#34;g&#34;)
            .attr(&#34;class&#34;, &#34;sankey-link-group&#34;);

        linkGroups.append(&#34;path&#34;)
            .attr(&#34;class&#34;, &#34;sankey-link&#34;)
            .attr(&#34;d&#34;, d3.sankeyLinkHorizontal()) // Path generator for Sankey links
            .attr(&#34;stroke&#34;, (d, i) =&gt; `url(#${`linkGradient-${i}`.replace(/\s/g, &#39;-&#39;)})`) // Apply gradient
            .attr(&#34;stroke-width&#34;, d =&gt; Math.max(1, d.width)); // Stroke width based on link value

        // --- Draw Nodes ---
        const nodeLinkGroups = svg.append(&#34;g&#34;) // Group for nodes, wrapped in links
          .selectAll(&#34;a.sankey-node-link&#34;)
          .data(graph.nodes)
          .join(&#34;a&#34;) // Each node is a link to the artist&#39;s Last.fm page
            .attr(&#34;class&#34;, &#34;sankey-node-link&#34;)
            .attr(&#34;xlink:href&#34;, d =&gt; d.url)
            .attr(&#34;target&#34;, &#34;_blank&#34;) // Open in new tab
          .append(&#34;g&#34;) // Group for rect and text within the link
            .attr(&#34;class&#34;, &#34;sankey-node-group&#34;)
            .attr(&#34;transform&#34;, d =&gt; `translate(${d.x0},${d.y0})`); // Position node group

        nodeLinkGroups.append(&#34;rect&#34;) // The visual node rectangle
            .attr(&#34;class&#34;, &#34;sankey-node&#34;)
            .attr(&#34;height&#34;, d =&gt; Math.max(0.5, d.y1 - d.y0)) // Node height
            .attr(&#34;width&#34;, d =&gt; d.x1 - d.x0) // Node width (calculated by Sankey layout)
            .attr(&#34;fill&#34;, d =&gt; nodeColorFunc(d)); // Color by depth

        // --- Add Node Labels ---
        nodeLinkGroups.append(&#34;text&#34;)
            .attr(&#34;class&#34;, &#34;sankey-node-label&#34;)
            .each(function(d) { // `each` allows using `this` to refer to the text element
                const isInitialArtist = d.name === initialArtistName;
                const text = d3.select(this);
                const nodeWidth = d.x1 - d.x0;
                const nodeHeight = d.y1 - d.y0;

                // MODIFICATION: Adjusted label positioning logic
                if (isInitialArtist &amp;&amp; nodeHeight &gt; 20) { // Centered for initial artist if tall enough
                     text.attr(&#34;x&#34;, nodeWidth / 2).attr(&#34;y&#34;, nodeHeight / 2).attr(&#34;text-anchor&#34;, &#34;middle&#34;);
                } else if (d.x0 &lt; width * 0.15 &amp;&amp; nodeHeight &gt; 15 ) { // Text to the right for nodes on the far left
                    text.attr(&#34;x&#34;, nodeWidth + 6).attr(&#34;y&#34;, nodeHeight / 2).attr(&#34;text-anchor&#34;, &#34;start&#34;);
                } else if (d.x1 &gt; width * 0.85 &amp;&amp; nodeHeight &gt; 15) { // Text to the left for nodes on the far right
                    text.attr(&#34;x&#34;, -6).attr(&#34;y&#34;, nodeHeight / 2).attr(&#34;text-anchor&#34;, &#34;end&#34;);
                }
                else { // Default: above node, or centered if very thin
                    text.attr(&#34;x&#34;, nodeWidth / 2).attr(&#34;y&#34;, nodeHeight &lt; 12 ? nodeHeight / 2 : -12).attr(&#34;text-anchor&#34;, &#34;middle&#34;);
                }
            })
            .attr(&#34;dy&#34;, &#34;0.35em&#34;) // Vertical alignment adjustment
            .text(d =&gt; d.name)
            .style(&#34;display&#34;, d =&gt; (d.y1 - d.y0) &gt; 10 ? &#34;inline&#34; : &#34;none&#34;); // Hide label if node is too short

        sankeyChartContainerApp.style.display = &#39;block&#39;; // Show the diagram container
        hideLoadingApp();
    }

    /**
     * Handles the generation of a playlist from the artists in the current Sankey diagram.
     * Fetches the top track for each artist and displays them in a modal.
     */
    async function handleGenerateDiagramPlaylistApp() {
        if (!currentGraphNodesApp || currentGraphNodesApp.length === 0) {
            showErrorApp(&#34;Nenhum artista no diagrama para gerar playlist.&#34;);
            return;
        }

        // Check cache first
        const currentDiagramSignature = generateDiagramSignatureApp(currentGraphNodesApp);
        if (cachedPlaylistDataApp &amp;&amp; cachedDiagramSignatureApp === currentDiagramSignature) {
            displayPlaylistInModalApp(cachedPlaylistDataApp);
            return;
        }

        // Show loading state in modal
        playlistModalTitleApp.textContent = `🎶 Gerando Playlist...`;
        playlistModalBodyApp.innerHTML = &#39;&lt;div class=&#34;artistas-app-modal-loading-spinner&#34;&gt;&lt;p&gt;Procurando as músicas mais famosas...&lt;/p&gt;&lt;div class=&#34;spinner&#34;&gt;&lt;/div&gt;&lt;/div&gt;&#39;;
        playlistModalOverlayApp.classList.add(&#39;active&#39;);
        generateDiagramPlaylistBtnApp.disabled = true; // Disable button while fetching

        // Fetch top track for each artist in the diagram
        const trackPromises = currentGraphNodesApp.map(node =&gt; fetchArtistTopTrackAPIApp(node.name));

        try {
            const topTracksResponses = await Promise.all(trackPromises);
            const validTracks = topTracksResponses.filter(track =&gt; track !== null); // Filter out nulls (failed fetches)

            if (validTracks.length === 0) {
                throw new Error(&#34;Não foi possível encontrar as músicas mais famosas para os artistas do diagrama.&#34;);
            }

            // Prepare playlist data
            const tracksForPlaylist = validTracks.map(track =&gt; ({
                artistName: track.artist.name,
                trackName: track.name,
                trackUrl: track.url
            }));
            const playlistData = {
                playlistName: &#34;Sankey Playlist&#34;,
                tracks: tracksForPlaylist
            };

            // Cache and display
            cachedPlaylistDataApp = playlistData;
            cachedDiagramSignatureApp = currentDiagramSignature;
            displayPlaylistInModalApp(playlistData);
        } catch (error) {
            console.error(&#34;Erro ao gerar playlist do diagrama:&#34;, error);
            playlistModalTitleApp.textContent = &#34;Erro ao Gerar a Playlist&#34;;
            playlistModalBodyApp.innerHTML = `&lt;p style=&#34;color: #c53030;&#34;&gt;${error.message}&lt;/p&gt;`;
        } finally {
            generateDiagramPlaylistBtnApp.disabled = false; // Re-enable button
        }
    }

    /**
     * Handles the main search functionality when the user clicks &#34;Buscar&#34; or presses Enter.
     * Fetches Sankey data for the entered artist and triggers diagram drawing.
     */
    async function handleSearchApp() {
        if (!artistInputApp) return; // Should not happen if initialized correctly
        const artistNameFromInput = artistInputApp.value.trim();
        if (!artistNameFromInput) {
            showErrorApp(&#39;Por favor, digite o nome de um artista.&#39;);
            return;
        }

        showLoadingApp(`Procurando por &#34;${artistNameFromInput}&#34;...`);
        if(sankeyChartDivApp) sankeyChartDivApp.innerHTML = &#39;&#39;; // Clear previous diagram
        currentGraphNodesApp = []; // Reset state
        if(generateDiagramPlaylistBtnApp) generateDiagramPlaylistBtnApp.disabled = true;
        cachedPlaylistDataApp = null; // Clear cache
        cachedDiagramSignatureApp = null;

        try {
            const sankeyData = await generateSankeyDataApp(artistNameFromInput, MAX_DEPTH_APP);
            if (sankeyData &amp;&amp; sankeyData.nodes &amp;&amp; sankeyData.nodes.length &gt; 0) {
                drawSankeyD3App(sankeyData);
            } else {
                // This case should ideally be caught by generateSankeyDataApp throwing an error
                // if initialArtistData fails, or by drawSankeyD3App if nodes array is empty after processing.
                showErrorApp(`Nenhuma informação encontrada para &#34;${artistNameFromInput}&#34;.`);
            }
        } catch (error) {
            // Catch errors from generateSankeyDataApp (e.g., initial artist not found)
            showErrorApp(error.message || `Ocorreu um erro ao buscar dados para &#34;${artistNameFromInput}&#34;.`);
        }
    }

    // --- App Initialization ---
    // Ensure the script runs only if the main container element exists on the page
    if (document.getElementById(&#39;artist-input-app&#39;)) {
        initializePageApp();
    }

})();
&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Sensibilidade, especificidade e curvas ROC: Um guia visual para não se confundir mais!</title>
      <link>https://alvarofrancomartins.com/post/ml-metrics/</link>
      <pubDate>Mon, 24 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://alvarofrancomartins.com/post/ml-metrics/</guid>
      <description>&lt;h1 id=&#34;descomplicando-as-métricas-de-classificação&#34;&gt;Descomplicando as métricas de classificação&lt;/h1&gt;
&lt;p&gt;Você já se viu diante do desafio de memorizar todas aquelas métricas de classificação?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;Era sensibilidade que priorizava acertar os positivos ou era especificidade? E a precisão&amp;hellip; se refere a quê mesmo?&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se você já se fez essas perguntas, não está sozinho. Essas métricas são confusas porque muitas vezes são ensinadas apenas com fórmulas matemáticas, sem uma compreensão visual ou prática do que realmente significam.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Neste post, vamos transformar conceitos abstratos em intuições visuais. Ao invés de decorar fórmulas, você vai entender o que cada métrica realmente representa e quando deve ser aplicada. Esta postagem inclui simulações interativas, assim você poderá observar como cada métrica se comporta em tempo real.&lt;/p&gt;
&lt;h2 id=&#34;o-cenário-básico-separando-positivos-e-negativos&#34;&gt;O cenário básico: separando positivos e negativos&lt;/h2&gt;
&lt;div style=&#34;display: flex; align-items: center;&#34;&gt;
&lt;div style=&#34;flex: 1; padding-right: 20px;&#34;&gt;
&lt;p&gt;No diagrama apresentado, utilizamos uma representação visual simplificada para facilitar a compreensão dos conceitos. O retângulo é dividido em duas seções distintas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color: red;&#34;&gt;Lado esquerdo&lt;/span&gt;: representa casos negativos (exemplos: pessoas sem doença, transação legítima, etc&amp;hellip;);&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color: blue;&#34;&gt;Lado direito&lt;/span&gt;: representa casos positivos (exemplos: pessoas com doença, transação fraudulenta, etc&amp;hellip;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div style=&#34;flex: 1;&#34;&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/ml-metrics/img/separacao_hu3f58973be1ed0536e63e064b1fdcb669_68287_3de44b4fcbfe16561abd143e6202f3b9.png 400w,
               /post/ml-metrics/img/separacao_hu3f58973be1ed0536e63e064b1fdcb669_68287_0451326f5176334c2702dee5ca1ce4d3.png 760w,
               /post/ml-metrics/img/separacao_hu3f58973be1ed0536e63e064b1fdcb669_68287_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://alvarofrancomartins.com/post/ml-metrics/img/separacao_hu3f58973be1ed0536e63e064b1fdcb669_68287_3de44b4fcbfe16561abd143e6202f3b9.png&#34;
               width=&#34;60%&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Para entender as métricas de classificação, podemos visualizar o que um modelo está fazendo. Considere que nosso modelo (por exemplo, que determina se a pessoa possui ou não determinada doença) é representado por um círculo azul no centro desse retângulo. O círculo, na verdade, é a fronteira de decisão do modelo. Tudo o que está dentro deste círculo o modelo prevê que é positivo. Portanto, tudo que está fora dele é previsto como negativo.&lt;/p&gt;
&lt;div style=&#34;display: flex; align-items: center; margin-top: 30px;&#34;&gt;
&lt;div style=&#34;flex: 1; padding-right: 20px;&#34;&gt;
&lt;br&gt;
&lt;p&gt;Observamos claramente que o modelo não é perfeito&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. Ele comete dois tipos de erros:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Classifica alguns negativos como positivos (dentro do círculo, à esquerda);&lt;/li&gt;
&lt;li&gt;Classifica alguns positivos como negativos (fora do círculo, à direita).&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div style=&#34;flex: 1;&#34;&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/ml-metrics/img/separacao_modelo_hu04f02f5379807a38989e453224f67c1d_87762_3d7256dca6c2f1a5a69583887cc6efb5.png 400w,
               /post/ml-metrics/img/separacao_modelo_hu04f02f5379807a38989e453224f67c1d_87762_1ea16d9e8305ae7435780ea59b24fec3.png 760w,
               /post/ml-metrics/img/separacao_modelo_hu04f02f5379807a38989e453224f67c1d_87762_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://alvarofrancomartins.com/post/ml-metrics/img/separacao_modelo_hu04f02f5379807a38989e453224f67c1d_87762_3d7256dca6c2f1a5a69583887cc6efb5.png&#34;
               width=&#34;60%&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;as-quatro-situações-fundamentais&#34;&gt;As quatro situações fundamentais&lt;/h2&gt;
&lt;div style=&#34;display: flex; align-items: center;&#34;&gt;
&lt;div style=&#34;flex: 1; padding-right: 20px;&#34;&gt;
&lt;p&gt;Esses erros&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; e acertos possuem nomes e são representados nas quatro regiões da figura ao lado. Suas descrições são as seguintes:&lt;/p&gt;
&lt;br&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Sigla&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;TP&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Verdadeiro positivo, acerto&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;FN&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Falso negativo, erro de omissão, subestimação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;FP&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Falso positivo, falso alarme, superestimação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;TN&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Verdadeiro negativo, rejeição correta&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
  &lt;/div&gt;
&lt;div style=&#34;flex: 1;&#34;&gt;

&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;pt-br&#34;&gt;
&lt;head&gt;
  &lt;meta charset=&#34;UTF-8&#34;&gt;
  &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
  &lt;title&gt;Visualização Interativa das Métricas de Classificação&lt;/title&gt;
  &lt;style&gt;
    .simulation_container {
      max-width: 600px;
      margin: 0 auto;
      font-family: Arial, sans-serif;
    }
    
    .visualization {
      position: relative;
      width: 400px;
      height: 400px;
      margin: 20px auto;
      border: 2px solid #000;
      background-color: #ffffff;
    }
    
    .divider {
      position: absolute;
      top: 0;
      left: 50%;
      width: 2px;
      height: 100%;
      background-color: #000;
    }
    
    .circle {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 65%;
      height: 65%;
      border: 3px solid blue;
      border-radius: 50%;
      background-color: rgba(0, 0, 255, 0.08);
      z-index: 1;
    }
    
    .dot {
      position: absolute;
      width: 7px;
      height: 7px;
      border-radius: 50%;
      margin: -3.5px 0 0 -3.5px;
    }
    
    .negative {
      background-color: red;
    }
    
    .positive {
      background-color: blue;
    }
    
    .label {
      position: absolute;
      font-size: 32px;
      font-weight: bold;
      z-index: 3;
      cursor: pointer;
      padding: 6px 12px;
      border-radius: 8px;
      transition: all 0.2s ease;
      text-shadow: 1px 1px 2px rgba(255, 255, 255, 1);
      color: #000;
      background-color: rgba(255, 255, 255, 0.9);
      border: 2px dashed rgba(0, 0, 0, 0.1);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    
    .label:hover {
      transform: scale(1.1);
      background-color: rgba(255, 255, 255, 1);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 1);
      border: 2px dashed rgba(0, 0, 0, 0.7);
    }
    
    /* Posicionamento correto baseado nas posições fornecidas */
    .tn-label {
      top: 7%;
      left: 10%;
      color: #000;
    }
    
    .fn-label {
      top: 7%;
      right: 10%;
      color: #000;
    }
    
    .fp-label {
      bottom: 42%;
      left: 30%;
      color: #000;
    }
    
    .tp-label {
      bottom: 42%;
      right: 30%;
      color: #000;
    }
    
    .side-label {
      position: absolute;
      font-size: 24px;
      font-weight: bold;
      bottom: -40px;
      text-align: center;
      width: 45%;
    }
    
    .negative-label {
      left: 0;
      color: #ff0000;
    }
    
    .positive-label {
      right: 0;
      color: blue;
    }
    
    .info-box {
      position: absolute;
      top: 95%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: rgba(255, 255, 255, 1);
      border: 2px solid #333;
      border-radius: 10px;
      padding: 7px;
      width: 100%;
      max-width: 400px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      z-index: 10;
      display: none;
    }
    
    .info-title {
      font-size: 22px;
      font-weight: bold;
      margin-bottom: 15px;
      text-align: center;
      border-bottom: 1px solid #ddd;
      padding-bottom: 10px;
    }
    
    .info-description {
      font-size: 16px;
      margin-bottom: 15px;
      line-height: 1.5;
      white-space: pre-line;
    }
    
    .close-btn {
      background-color: #4a5568;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 4px;
      cursor: pointer;
      display: block;
      margin: 0 auto;
      font-weight: bold;
      transition: background-color 0.2s;
    }
    
    .close-btn:hover {
      background-color: #2d3748;
    }
    
    .instructions {
      text-align: center;
      margin-bottom: 20px;
      font-style: italic;
      color: #555;
      background-color: #f0f0f0;
      padding: 12px;
      border-radius: 8px;
      border-left: 6px solid #4a5568;
      font-size: 18px;
    }
    
    /* Responsividade para telas menores */
    @media (max-width: 600px) {
      .visualization {
        width: 100%;
        height: 90vw;
        max-height: 500px;
      }
      
      .label {
        font-size: 18px;
      }
      
      .side-label {
        font-size: 18px;
      }
    }

    table {
      font-size: 1rem !important;
      width: 100%;
    }
    table td, table th {
      padding: 18px;
      font-size: 1rem !important;
}

  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;div class=&#34;simulation_container&#34;&gt;    
    &lt;div class=&#34;visualization&#34; id=&#34;classification-viz&#34;&gt;
      &lt;div class=&#34;divider&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;circle&#34;&gt;&lt;/div&gt;
      
      &lt;!-- Rótulos clicáveis --&gt;
      &lt;div class=&#34;label tn-label&#34; data-type=&#34;tn&#34;&gt;TN&lt;/div&gt;
      &lt;div class=&#34;label fn-label&#34; data-type=&#34;fn&#34;&gt;FN&lt;/div&gt;
      &lt;div class=&#34;label fp-label&#34; data-type=&#34;fp&#34;&gt;FP&lt;/div&gt;
      &lt;div class=&#34;label tp-label&#34; data-type=&#34;tp&#34;&gt;TP&lt;/div&gt;
      
      &lt;!-- Rótulos laterais --&gt;
      &lt;div class=&#34;side-label negative-label&#34;&gt;Negativos&lt;/div&gt;
      &lt;div class=&#34;side-label positive-label&#34;&gt;Positivos&lt;/div&gt;
      
      &lt;!-- Caixa de informações --&gt;
      &lt;div class=&#34;info-box&#34; id=&#34;info-box&#34;&gt;
        &lt;div class=&#34;info-title&#34; id=&#34;info-title&#34;&gt;&lt;/div&gt;
        &lt;div class=&#34;info-description&#34; id=&#34;info-description&#34;&gt;&lt;/div&gt;
        &lt;button class=&#34;close-btn&#34; id=&#34;close-btn&#34;&gt;Fechar&lt;/button&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  
  &lt;script&gt;
    document.addEventListener(&#39;DOMContentLoaded&#39;, function() {
      const visualization = document.getElementById(&#39;classification-viz&#39;);
      const infoBox = document.getElementById(&#39;info-box&#39;);
      const infoTitle = document.getElementById(&#39;info-title&#39;);
      const infoDescription = document.getElementById(&#39;info-description&#39;);
      const closeBtn = document.getElementById(&#39;close-btn&#39;);
      const circle = document.querySelector(&#39;.circle&#39;);
      
      // Dados para cada quadrante - definições precisas
      const quadrantInfo = {
        tn: {
          title: &#39;TN - Verdadeiro Negativo&#39;,
          description: &#39;O modelo classificou como NEGATIVO, e realmente era NEGATIVO.\n\nEstes são os pontos vermelhos (negativos) que estão FORA do círculo (classificados como negativos pelo modelo).&#39;
        },
        fn: {
          title: &#39;FN - Falso Negativo&#39;,
          description: &#39;O modelo classificou como NEGATIVO, mas na verdade era POSITIVO.\n\nEstes são os pontos azuis (positivos) que estão FORA do círculo (classificados como negativos pelo modelo).&#39;
        },
        fp: {
          title: &#39;FP - Falso Positivo&#39;,
          description: &#39;O modelo classificou como POSITIVO, mas na verdade era NEGATIVO.\n\nEstes são os pontos vermelhos (negativos) que estão DENTRO do círculo (classificados como positivos pelo modelo).&#39;
        },
        tp: {
          title: &#39;TP - Verdadeiro Positivo&#39;,
          description: &#39;O modelo classificou como POSITIVO, e realmente era POSITIVO.\n\nEstes são os pontos azuis (positivos) que estão DENTRO do círculo (classificados como positivos pelo modelo).&#39;
        }
      };
      
      // Obter as dimensões do círculo e área de visualização
      function getCircleProperties() {
        const rect = circle.getBoundingClientRect();
        const vizRect = visualization.getBoundingClientRect();
        
        const centerX = rect.width / 2;
        const centerY = rect.height / 2;
        const radius = rect.width / 2;
        
        return { centerX, centerY, radius, vizWidth: vizRect.width, vizHeight: vizRect.height };
      }
      
      // Verificar se um ponto está dentro do círculo
      function isInsideCircle(x, y) {
        const rect = circle.getBoundingClientRect();
        const vizRect = visualization.getBoundingClientRect();
        
        const circleX = rect.left + rect.width / 2 - vizRect.left;
        const circleY = rect.top + rect.height / 2 - vizRect.top;
        const radius = rect.width / 2;
        
        const dx = x - circleX;
        const dy = y - circleY;
        return dx * dx + dy * dy &lt;= radius * radius;
      }
      
      // Gerar pontos aleatórios
      function generateDots() {
        // Limpar pontos existentes
        const existingDots = document.querySelectorAll(&#39;.dot&#39;);
        existingDots.forEach(dot =&gt; dot.remove());
        
        const { vizWidth, vizHeight } = getCircleProperties();
        const midX = vizWidth / 2;
        
        // Gerar novos pontos
        for (let i = 0; i &lt; 500; i++) {
          const dot = document.createElement(&#39;div&#39;);
          dot.className = &#39;dot&#39;;
          
          // Metade dos pontos são negativos (esquerda), metade positivos (direita)
          const isPositive = i &gt;= 250;
          dot.classList.add(isPositive ? &#39;positive&#39; : &#39;negative&#39;);
          
          // Posicionar os pontos respeitando a divisão central
          let x, y;
          
          if (isPositive) {
            // Pontos positivos (lado direito)
            x = Math.random() * (vizWidth / 2 - 10) + midX + 5;  // 5px de margem da linha central
          } else {
            // Pontos negativos (lado esquerdo)
            x = Math.random() * (vizWidth / 2 - 10) + 5;         // 5px de margem da borda
          }
          
          y = Math.random() * (vizHeight - 10) + 5;    // 5px de margem da borda superior e inferior
          
          // Melhor distribuição para TN, FP, FN, TP
          const insideCircle = isInsideCircle(x, y);
          
          // Queremos uma distribuição de pontos que seja consistente com a visualização
          // Se for FP (negativo dentro do círculo) ou FN (positivo fora do círculo)
          // reduzimos a probabilidade para ter mais TP e TN
          if ((!isPositive &amp;&amp; insideCircle) || (isPositive &amp;&amp; !insideCircle)) {
            if (Math.random() &gt; 0.6) {
              // Tentar novamente para obter mais TP e TN
              i--;
              continue;
            }
          }
          
          dot.style.left = x + &#39;px&#39;;
          dot.style.top = y + &#39;px&#39;;
          
          visualization.appendChild(dot);
        }
      }
      
      // Mostrar informações quando um rótulo é clicado
      const labels = document.querySelectorAll(&#39;.label&#39;);
      labels.forEach(label =&gt; {
        label.addEventListener(&#39;click&#39;, function() {
          const type = this.getAttribute(&#39;data-type&#39;);
          const info = quadrantInfo[type];
          
          infoTitle.textContent = info.title;
          infoDescription.textContent = info.description;
          
          infoBox.style.display = &#39;block&#39;;
          
          // Destacar o rótulo clicado
          labels.forEach(l =&gt; l.style.backgroundColor = &#39;&#39;);
          this.style.backgroundColor = &#39;rgba(255, 255, 255, 0.8)&#39;;
        });
      });
      
      // Fechar a caixa de informações
      closeBtn.addEventListener(&#39;click&#39;, function() {
        infoBox.style.display = &#39;none&#39;;
        
        // Remover destaque de todos os rótulos
        labels.forEach(l =&gt; l.style.backgroundColor = &#39;&#39;);
      });
      
      // Fechar a caixa quando clicar fora dela
      visualization.addEventListener(&#39;click&#39;, function(e) {
        if (e.target === visualization || e.target === document.querySelector(&#39;.circle&#39;) || e.target === document.querySelector(&#39;.divider&#39;)) {
          infoBox.style.display = &#39;none&#39;;
          
          // Remover destaque de todos os rótulos
          labels.forEach(l =&gt; l.style.backgroundColor = &#39;&#39;);
        }
      });
      
      // Inicializar a visualização
      window.addEventListener(&#39;resize&#39;, generateDots);
      generateDots();
    });
  &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;br&gt;
&lt;div class=&#34;instructions&#34;&gt;No painel acima, clique em cada rótulo (TN, FP, FN, TP) para aprender mais sobre as quatro situações fundamentais. &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;Com base nessas quatro situações, podemos calcular métricas que nos ajudam a avaliar o desempenho de um modelo.&lt;/p&gt;
&lt;h2 id=&#34;entendendo-cada-métrica-visualmente&#34;&gt;Entendendo Cada Métrica Visualmente&lt;/h2&gt;
&lt;h3 id=&#34;1-sensibilidade-recall-ou-tpr&#34;&gt;1. Sensibilidade (Recall ou TPR)&lt;/h3&gt;
&lt;div style=&#34;display: flex; align-items: center;&#34;&gt;
&lt;div style=&#34;flex: 1; padding-right: 20px;&#34;&gt;
&lt;p&gt;&lt;strong&gt;Pergunta-chave: &amp;ldquo;De todos os casos realmente positivos, quantos o modelo classificou como positivos?&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
$$\text{Sensibilidade} = \frac{TP}{TP + FN}$$
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;A &lt;strong&gt;sensibilidade&lt;/strong&gt; indica quanto do lado direito foi coberto pelo círculo — ou seja, a proporção entre a parte azul dentro do círculo (TP) e todo o lado direito (TP + FN). O foco da sensibilidade é não deixar passar casos positivos.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&#34;flex: 1;&#34;&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/ml-metrics/img/tpr_hu83acb151a3873ecb5acdbb19fdef72f9_88387_a28f82fe6d55a7ba15b2887f3d912c99.png 400w,
               /post/ml-metrics/img/tpr_hu83acb151a3873ecb5acdbb19fdef72f9_88387_0975becfbc9e35fa0d01b25d49bd1e2b.png 760w,
               /post/ml-metrics/img/tpr_hu83acb151a3873ecb5acdbb19fdef72f9_88387_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://alvarofrancomartins.com/post/ml-metrics/img/tpr_hu83acb151a3873ecb5acdbb19fdef72f9_88387_a28f82fe6d55a7ba15b2887f3d912c99.png&#34;
               width=&#34;60%&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;2-taxa-de-falsos-negativos-fnr&#34;&gt;2. Taxa de Falsos Negativos (FNR)&lt;/h3&gt;
&lt;div style=&#34;display: flex; align-items: center;&#34;&gt;
&lt;div style=&#34;flex: 1; padding-right: 20px;&#34;&gt;
&lt;p&gt;&lt;strong&gt;Pergunta-chave: &amp;ldquo;De todos os casos realmente positivos, quantos o modelo classificou como negativos?&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
$$\text{FNR} = \frac{FN}{TP + FN} = 1 - \text{Sensibilidade}$$
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;É a proporção entre o que o círculo não cobriu do lado direito (FN) em relação ao lado direito inteiro (TP + FN).&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&#34;flex: 1;&#34;&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/ml-metrics/img/fnr_hu12acc418103c2365ca44d1387167aa06_82701_9e9a288eb11238d76cbe97cd7e1c418e.png 400w,
               /post/ml-metrics/img/fnr_hu12acc418103c2365ca44d1387167aa06_82701_576f67fb3635cc80f3b1360bfdea8255.png 760w,
               /post/ml-metrics/img/fnr_hu12acc418103c2365ca44d1387167aa06_82701_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://alvarofrancomartins.com/post/ml-metrics/img/fnr_hu12acc418103c2365ca44d1387167aa06_82701_9e9a288eb11238d76cbe97cd7e1c418e.png&#34;
               width=&#34;60%&#34;
               height=&#34;626&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;3-especificidade-tnr&#34;&gt;3. Especificidade (TNR)&lt;/h3&gt;
&lt;div style=&#34;display: flex; align-items: center;&#34;&gt;
&lt;div style=&#34;flex: 1; padding-right: 20px;&#34;&gt;
&lt;p&gt;&lt;strong&gt;Pergunta-chave: &amp;ldquo;De todos os casos realmente negativos, quantos o modelo classificou como negativos?&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
$$\text{Especificidade} = \frac{TN}{TN + FP}$$
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;A &lt;strong&gt;especificidade&lt;/strong&gt; representa a proporção do lado esquerdo que o círculo não cobriu (TN) em relação ao lado esquerdo inteiro (TN + FP).&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&#34;flex: 1;&#34;&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/ml-metrics/img/tnr_hu898c36af63707939ee0fc9f92b553a00_87616_e1f42cb1315e2f27e339e4783b54b2bb.png 400w,
               /post/ml-metrics/img/tnr_hu898c36af63707939ee0fc9f92b553a00_87616_05e1cd55e74a7ccc1c39fbd7cca622ac.png 760w,
               /post/ml-metrics/img/tnr_hu898c36af63707939ee0fc9f92b553a00_87616_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://alvarofrancomartins.com/post/ml-metrics/img/tnr_hu898c36af63707939ee0fc9f92b553a00_87616_e1f42cb1315e2f27e339e4783b54b2bb.png&#34;
               width=&#34;60%&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;4-taxa-de-falsos-positivos-fpr&#34;&gt;4. Taxa de Falsos Positivos (FPR)&lt;/h3&gt;
&lt;div style=&#34;display: flex; align-items: center;&#34;&gt;
&lt;div style=&#34;flex: 1; padding-right: 20px;&#34;&gt;
&lt;p&gt;&lt;strong&gt;Pergunta-chave: &amp;ldquo;De todos os casos realmente negativos, quantos o modelo  classificou como positivos?&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
$$\text{FPR} = \frac{FP}{TN + FP} = 1 - \text{Especificidade}$$
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;É a proporção entre o que o círculo cobriu do lado esquerdo (FP) e o lado esquerdo inteiro (TN + FP). É o complemento da especificidade.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&#34;flex: 1;&#34;&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/ml-metrics/img/fpr_hu2d1878e6feaffb64491d611c1a439f6e_88246_385ab302cd18c19653c23c4fa6b2f037.png 400w,
               /post/ml-metrics/img/fpr_hu2d1878e6feaffb64491d611c1a439f6e_88246_53c00ec90bea212034d32e374515e84f.png 760w,
               /post/ml-metrics/img/fpr_hu2d1878e6feaffb64491d611c1a439f6e_88246_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://alvarofrancomartins.com/post/ml-metrics/img/fpr_hu2d1878e6feaffb64491d611c1a439f6e_88246_385ab302cd18c19653c23c4fa6b2f037.png&#34;
               width=&#34;60%&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;5-precisão-precision-ou-ppv&#34;&gt;5. Precisão (Precision ou PPV)&lt;/h3&gt;
&lt;div style=&#34;display: flex; align-items: center;&#34;&gt;
&lt;div style=&#34;flex: 1; padding-right: 20px;&#34;&gt;
&lt;p&gt;&lt;strong&gt;Pergunta-chave: &amp;ldquo;Quando o modelo diz &amp;lsquo;positivo&amp;rsquo;, com que frequência ele está correto?&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
$$\text{Precisão} = \frac{TP}{TP + FP}$$
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;Considerando a região interna do círculo (tudo o que o modelo classificou como positivo), a &lt;strong&gt;precisão&lt;/strong&gt; representa a proporção da área à direita (TP) em relação à área total do círculo (TP + FP). O foco da precisão é não dar falsos alarmes.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&#34;flex: 1;&#34;&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/ml-metrics/img/prec_hu87f480ea6cdf39eeaeec3942b42ab3b6_113788_a994763ebed4b5ae20598529275689ae.png 400w,
               /post/ml-metrics/img/prec_hu87f480ea6cdf39eeaeec3942b42ab3b6_113788_11a057d11ebf9b73109b79018bc3f7c0.png 760w,
               /post/ml-metrics/img/prec_hu87f480ea6cdf39eeaeec3942b42ab3b6_113788_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://alvarofrancomartins.com/post/ml-metrics/img/prec_hu87f480ea6cdf39eeaeec3942b42ab3b6_113788_a994763ebed4b5ae20598529275689ae.png&#34;
               width=&#34;60%&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;6-acurácia&#34;&gt;6. Acurácia&lt;/h3&gt;
&lt;div style=&#34;display: flex; align-items: center;&#34;&gt;
&lt;div style=&#34;flex: 1; padding-right: 20px;&#34;&gt;
&lt;p&gt;&lt;strong&gt;Pergunta-chave: &amp;ldquo;Qual a porcentagem total de previsões corretas?&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
$$\text{Acurácia} = \frac{TP + TN}{TP + TN + FP + FN}$$
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;A &lt;strong&gt;acurácia&lt;/strong&gt; representa a proporção da área coberta pelo círculo à direita (TP) mais a área não coberta pelo círculo à esquerda (TN) em relação à área total.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&#34;flex: 1;&#34;&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /post/ml-metrics/img/acuracia_huaf85c404ff198c2ba9fa7f1480b5b36b_156621_55e735f14940870b5d2fb976dfc7bab1.png 400w,
               /post/ml-metrics/img/acuracia_huaf85c404ff198c2ba9fa7f1480b5b36b_156621_f1c4c3bbdebf55a66a61ccbec37aa736.png 760w,
               /post/ml-metrics/img/acuracia_huaf85c404ff198c2ba9fa7f1480b5b36b_156621_1200x1200_fit_lanczos_3.png 1200w&#34;
               src=&#34;https://alvarofrancomartins.com/post/ml-metrics/img/acuracia_huaf85c404ff198c2ba9fa7f1480b5b36b_156621_55e735f14940870b5d2fb976dfc7bab1.png&#34;
               width=&#34;60%&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;simulações-interativas&#34;&gt;Simulações interativas&lt;/h1&gt;
&lt;p&gt;Para realmente compreender esses conceitos, nada melhor que ver como eles se comportam em tempo real.&lt;/p&gt;
&lt;h2 id=&#34;métricas-de-classificação&#34;&gt;Métricas de classificação&lt;/h2&gt;
&lt;p&gt;A simulação abaixo ilustra interativamente os conceitos fundamentais de métricas de classificação. Pontos são uniformemente e aleatoriamente gerados, separados igualmente entre as classes positiva (direita) e negativa (esquerda). Você pode alterar o tamanho do cículo, bem como movê-lo e assim observar como se comportam as métricas discutidas acima.&lt;/p&gt;
&lt;br&gt;

&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;
&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;!-- KaTeX for math rendering --&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.15.3/katex.min.css&#34;&gt;
    &lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.15.3/katex.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.15.3/contrib/auto-render.min.js&#34;&gt;&lt;/script&gt;
    &lt;style&gt;
        .simulation-container {
            max-width: 1200px;
        }
        
        /* Novo contêiner flexível para layout lado a lado */
        .flex-container {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
        }
        
        .visualization-area {
            flex: 3;
            min-width: 300px;
        }
        
        .metrics-area {
            flex: 2;
            min-width: 300px;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
        }
        
        .control-panel {
            width: 100%;
            max-width: 800px; /* Match visualization area width */
            margin: 0 auto 20px; /* Center horizontally with bottom margin */
            justify-content: flex-start; /* Left-align slider */
        }

        
        /* Improved Slider Styles */
        .slider-container {
            display: flex;
            align-items: center;
            gap: 10px;
            flex-wrap: wrap;
            margin-bottom: 10px;
            position: relative;
            width: 100%;
            max-width: 350px;
        }
        
        .slider-container label {
            font-weight: bold;
            min-width: 100px;
            color: #333;
            margin-bottom: 8px;
        }
        
        .range-slider {
            width: 100%;
            position: relative;
        }
        
        .range-slider-track {
            height: 8px;
            width: 100%;
            background-color: #ddd;
            border-radius: 4px;
            position: relative;
        }
        
        .range-slider-fill {
            height: 100%;
            background-color: #3b82f6;
            border-radius: 4px;
            position: absolute;
            top: 0;
            left: 0;
            pointer-events: none;
            transition: width 0.1s ease;
        }
        
        input[type=&#34;range&#34;] {
            -webkit-appearance: none;
            appearance: none;
            width: 100%;
            height: 8px;
            background: transparent;
            position: absolute;
            top: 0;
            left: 0;
            margin: 0;
            z-index: 10;
        }

        input[type=&#34;range&#34;]::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 22px;
            height: 22px;
            background: #3b82f6;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            transition: all 0.2s ease;
        }

        input[type=&#34;range&#34;]::-webkit-slider-thumb:hover {
            background: #2563eb;
            transform: scale(1.1);
        }

        input[type=&#34;range&#34;]::-moz-range-thumb {
            width: 22px;
            height: 22px;
            background: #3b82f6;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            transition: all 0.2s ease;
        }

        input[type=&#34;range&#34;]::-moz-range-thumb:hover {
            background: #2563eb;
            transform: scale(1.1);
        }

        .slider-value {
            min-width: 50px;
            text-align: center;
            font-weight: bold;
            color: #3b82f6;
            background-color: #f0f4ff;
            padding: 4px 8px;
            border-radius: 12px;
            margin-left: 10px;
            border: 1px solid #d1d5db;
        }

        .canvas-container {
            position: relative;
            width: 100%;
            padding-bottom: 70%; /* Ajustado para uma proporção diferente */
            border: 0px solid black;
            overflow: hidden;
            background-color: white;
            margin-bottom: 10px;
        }
        #canvas {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            cursor: move;
        }
        .quadrant-label {
            position: absolute;
/*            font-weight: bold;*/
            font-size: 17px;
            text-align: center;
            color: #fff;
            background-color: rgba(0, 0, 0, 1);
            padding: 1px 5px;
            border-radius: 10px;
            z-index: 10;
            pointer-events: none;
            transition: all 0.3s ease;
        }
        .metrics-container {
            display: flex;
            flex-direction: column;
            gap: 15px;
            height: 100%;
        }
        .metric-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: center;
        }
        .metric-btn {
            padding: 8px 12px;
            font-size: 24px;
            cursor: pointer;
            background-color: #f8f8f8;
            border: 1px solid #ccc;
            border-radius: 6px;
            font-weight: bold;
            text-align: center;
            line-height: 1.2;
        }
        .metric-btn.active {
            background-color: #e6f0ff;
            border-color: #99c2ff;
        }
        /* Updated Metric Display Styles */
        .metric-display {
            min-height: 0px;
            max-height: 440px;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            overflow: hidden;
            align-items: center;
            justify-content: flex-start;
            padding-top: 20px;
        }

        .metric-title {
            margin-bottom: 0;
            font-size: 30px;
            color: #000;
            text-align: center;
        }

        .metric-formula {
            font-size: 30px;
            text-align: center;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            max-width: 100%;
            overflow: auto;
            margin-bottom: 0px;
            margin-top: 0px;
            overflow: hidden; /* Remove scrollbar */

        }

        .metric-formula .equation {
            font-size: 22px;
            margin-bottom: 10px;
        }

        .metric-formula .result {
            font-size: 20px;
            color: #007bff;
            font-weight: bold;
        }
        .instruction {
            text-align: center;
            margin: 10px 0;
            color: #666;
            font-style: italic;
        }
        
        /* Responsividade para telas menores */
        @media (max-width: 768px) {
            .flex-container {
                flex-direction: column;
            }
            .visualization-area, .metrics-area {
                width: 100%;
            }
            .metric-btn {
                padding: 10px 15px;
                font-size: 16px;
            }
            .canvas-container {
                padding-bottom: 60%;
            }
        }

        table {
          max-width: 100%;
          overflow-x: hidden;
          table-layout: fixed;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&#34;simulation-container&#34;&gt;
        
        &lt;div class=&#34;control-panel&#34;&gt;
            &lt;div class=&#34;slider-container&#34;&gt;
                &lt;label for=&#34;circleSize&#34;&gt;Raio do círculo&lt;/label&gt;
                &lt;div class=&#34;range-slider&#34;&gt;
                    &lt;div class=&#34;range-slider-track&#34;&gt;
                        &lt;div class=&#34;range-slider-fill&#34; id=&#34;circleSizeFill&#34;&gt;&lt;/div&gt;
                    &lt;/div&gt;
                    &lt;input type=&#34;range&#34; id=&#34;circleSize&#34; min=&#34;0&#34; max=&#34;100&#34; value=&#34;30&#34; step=&#34;1&#34;&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        
        &lt;!-- Novo contêiner flexível para layout lado a lado --&gt;
        &lt;div class=&#34;flex-container&#34;&gt;
            &lt;!-- Área de visualização (lado esquerdo) --&gt;
            &lt;div class=&#34;visualization-area&#34;&gt;
                &lt;div class=&#34;canvas-container&#34;&gt;
                    &lt;canvas id=&#34;canvas&#34;&gt;&lt;/canvas&gt;
                    &lt;div id=&#34;quadrant0&#34; class=&#34;quadrant-label&#34;&gt;False&lt;br&gt;Positives&lt;/div&gt;
                    &lt;div id=&#34;quadrant1&#34; class=&#34;quadrant-label&#34;&gt;True&lt;br&gt;Positives&lt;/div&gt;
                    &lt;div id=&#34;quadrant2&#34; class=&#34;quadrant-label&#34;&gt;True&lt;br&gt;Negatives&lt;/div&gt;
                    &lt;div id=&#34;quadrant3&#34; class=&#34;quadrant-label&#34;&gt;False&lt;br&gt;Negatives&lt;/div&gt;
                &lt;/div&gt;
                
                &lt;div style=&#34;display: flex; justify-content: space-between; width: 100%; font-weight: bold; margin-top: 5px;&#34;&gt;
                    &lt;span&gt;Negatives&lt;/span&gt;
                    &lt;span&gt;Positives&lt;/span&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            
            &lt;!-- Área de métricas (lado direito) --&gt;
            &lt;div class=&#34;metrics-area&#34;&gt;
                &lt;div class=&#34;metrics-container&#34;&gt;
                    
                    &lt;div class=&#34;metric-buttons&#34;&gt;
                        &lt;button id=&#34;btnRecall&#34; class=&#34;metric-btn active&#34;&gt;Recall&lt;br&gt;Sensitivity&lt;/button&gt;
                        &lt;button id=&#34;btnFPR&#34; class=&#34;metric-btn&#34;&gt;FPR&lt;/button&gt;
                        &lt;button id=&#34;btnSpecificity&#34; class=&#34;metric-btn&#34;&gt;Specificity&lt;/button&gt;
                        &lt;button id=&#34;btnFNR&#34; class=&#34;metric-btn&#34;&gt;FNR&lt;/button&gt;
                        &lt;button id=&#34;btnPrecision&#34; class=&#34;metric-btn&#34;&gt;Precision&lt;/button&gt;
                        &lt;button id=&#34;btnAccuracy&#34; class=&#34;metric-btn&#34;&gt;Accuracy&lt;/button&gt;
                        &lt;button id=&#34;btnF1&#34; class=&#34;metric-btn&#34;&gt;F1 Score&lt;/button&gt;
                    &lt;/div&gt;
                    
                    &lt;div class=&#34;metric-display&#34;&gt;
                        &lt;div class=&#34;metric-title&#34; id=&#34;metricTitle&#34;&gt;Recall/Sensitivity (TPR):&lt;/div&gt;
                        &lt;div class=&#34;metric-formula&#34; id=&#34;metricFormula&#34;&gt;Recall = TP/(TP + FN) = 0/0 = 0&lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;script&gt;
        // DOM Elements
        const canvas = document.getElementById(&#39;canvas&#39;);
        const ctx = canvas.getContext(&#39;2d&#39;);
        const circleSizeSlider = document.getElementById(&#39;circleSize&#39;);
        const circleSizeFill = document.getElementById(&#39;circleSizeFill&#39;);
        
        // Quadrant labels
        const quadrantLabels = [
            document.getElementById(&#39;quadrant0&#39;),
            document.getElementById(&#39;quadrant1&#39;),
            document.getElementById(&#39;quadrant2&#39;),
            document.getElementById(&#39;quadrant3&#39;)
        ];
        
        // Metric buttons
        const btnRecall = document.getElementById(&#39;btnRecall&#39;);
        const btnFPR = document.getElementById(&#39;btnFPR&#39;);
        const btnSpecificity = document.getElementById(&#39;btnSpecificity&#39;);
        const btnFNR = document.getElementById(&#39;btnFNR&#39;);
        const btnPrecision = document.getElementById(&#39;btnPrecision&#39;);
        const btnAccuracy = document.getElementById(&#39;btnAccuracy&#39;);
        const btnF1 = document.getElementById(&#39;btnF1&#39;);
        
        // Metric displays
        const metricTitle = document.getElementById(&#39;metricTitle&#39;);
        const metricFormula = document.getElementById(&#39;metricFormula&#39;);
        
        // Variables
        let isDragging = false;
        let truePositives = 0;
        let falsePositives = 0;
        let trueNegatives = 0;
        let falseNegatives = 0;
        let totalPoints = 0;
        let points = [];
        let currentMetric = &#39;recall&#39;;
        
        // Circle properties
        let circleRadius;
        let centerX;
        let centerY;
        let circleCenter = { x: 0.5, y: 0.5 }; // Normalized position (0-1)
        let circleSizePercent = 30; // Percentage of min dimension
        let dragStartPos = { x: 0, y: 0 };
        let dragStartCenter = { x: 0, y: 0 };
        
        // Update slider fill
        function updateSliderFill() {
            const percent = (circleSizeSlider.value - circleSizeSlider.min) / (circleSizeSlider.max - circleSizeSlider.min) * 100;
            circleSizeFill.style.width = percent + &#39;%&#39;;
        }
        
        // Initial slider fill update
        updateSliderFill();
        
        // Update slider values
        circleSizeSlider.addEventListener(&#39;input&#39;, function() {
            circleSizePercent = parseInt(this.value);
            updateSliderFill();
            calculateDimensions();
            redrawCanvas();
            recalculateMetrics();
            updateLabels();
        });
        
        // Resize canvas to fit container
        function resizeCanvas() {
            const container = canvas.parentElement;
            canvas.width = container.clientWidth;
            canvas.height = container.clientHeight;
            
            calculateDimensions();
            redrawCanvas();
            updateLabels();
        }
        
        // Calculate circle dimensions based on canvas size and current settings
        function calculateDimensions() {
            centerX = canvas.width * circleCenter.x;
            centerY = canvas.height * circleCenter.y;
            const minDimension = Math.min(canvas.width, canvas.height);
            circleRadius = minDimension * (circleSizePercent / 100);
        }
        
        // Generate points once at startup
        function generatePoints(count) {
            points = [];
            
            // Generate half the points on the left side and half on the right
            for (let i = 0; i &lt; count / 2; i++) {
                // Left side point (Negatives)
                points.push({
                    x: Math.random() * (canvas.width / 2 - 5),
                    y: Math.random() * canvas.height
                });
                
                // Right side point (Positives)
                points.push({
                    x: (canvas.width / 2 + 5) + Math.random() * (canvas.width / 2 - 10),
                    y: Math.random() * canvas.height
                });
            }
            
            recalculateMetrics();
        }
        
        // Update the class metrics based on the points
        function recalculateMetrics() {
            // Reset counts
            truePositives = 0;
            falsePositives = 0;
            trueNegatives = 0;
            falseNegatives = 0;
            
            // Recalculate counts for each point
            points.forEach(point =&gt; {
                const isRight = point.x &gt;= canvas.width / 2;
                const isPredictedPositive = isInsideCircle(point.x, point.y);
                
                if (isRight &amp;&amp; isPredictedPositive) truePositives++;
                else if (!isRight &amp;&amp; isPredictedPositive) falsePositives++;
                else if (!isRight &amp;&amp; !isPredictedPositive) trueNegatives++;
                else if (isRight &amp;&amp; !isPredictedPositive) falseNegatives++;
            });
            
            totalPoints = points.length;
            
            // Update the current metric display
            updateMetricDisplay();
        }
        
        // Redraw canvas with all points and current circle position
        function redrawCanvas() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawPoints();
            drawBase();
        }
        
        // Update quadrant labels dynamically based on circle position
        function updateLabels() {
            // Get vertical dividing line position
            const midX = canvas.width / 2;
            
            // Check if circle overlaps with left or right half
            const leftEdge = centerX - circleRadius;
            const rightEdge = centerX + circleRadius;
            const overlapsLeft = leftEdge &lt; midX;
            const overlapsRight = rightEdge &gt; midX;
            
            // Padding to ensure labels stay within canvas
            const padding = 20;
            const labelWidth = 70;
            const labelHeight = 40;
            
            // Label safety margin (extra distance from circle)
            const safetyMargin = 15;
            
            // 1. False Positives (inside circle, left side)
            if (overlapsLeft &amp;&amp; circleRadius &gt; 1) {
                // Position inside circle on left side
                const fpX = Math.max(padding, Math.min(midX - labelWidth - padding, centerX - 10));
                const fpY = centerY;
                quadrantLabels[0].style.display = &#39;block&#39;;
                quadrantLabels[0].style.left = fpX + &#39;px&#39;;
                quadrantLabels[0].style.top = fpY + &#39;px&#39;;
                quadrantLabels[0].style.right = &#39;auto&#39;;
                quadrantLabels[0].innerHTML = &#34;False&lt;br&gt;Positives&#34;;
                quadrantLabels[0].style.backgroundColor = &#39;rgba(0, 0, 0, 1)&#39;;
            } else {
                quadrantLabels[0].style.display = &#39;none&#39;;
            }
            
            // 2. True Positives (inside circle, right side)
            if (overlapsRight &amp;&amp; circleRadius &gt; 1) {
                // Position inside circle on right side
                const tpX = Math.min(canvas.width - labelWidth - padding, Math.max(midX + padding, centerX + 10));
                const tpY = centerY;
                quadrantLabels[1].style.display = &#39;block&#39;;
                quadrantLabels[1].style.left = tpX + &#39;px&#39;;
                quadrantLabels[1].style.top = tpY + &#39;px&#39;;
                quadrantLabels[1].style.right = &#39;auto&#39;;
                quadrantLabels[1].innerHTML = &#34;True&lt;br&gt;Positives&#34;;
                quadrantLabels[1].style.backgroundColor = &#39;rgba(0, 0, 0, 1)&#39;;
            } else {
                quadrantLabels[1].style.display = &#39;none&#39;;
            }
            
            // 3. True Negatives (outside circle, left side)
            let tnX, tnY;

            // Try different positions for True Negatives to ensure it&#39;s outside the circle
            // Option 1: Far top left
            let tnPosition1 = { x: padding, y: padding };
            // Option 2: Far bottom left
            let tnPosition2 = { x: padding, y: canvas.height - labelHeight - padding };
            // Option 3: Default position but adjusted
            let tnPosition3 = { x: Math.min(midX / 2, leftEdge - labelWidth - safetyMargin), y: canvas.height * 0.2 };

            // Check which position is furthest from circle
            let tnDistances = [
                distanceToCircle(tnPosition1.x, tnPosition1.y),
                distanceToCircle(tnPosition2.x, tnPosition2.y),
                distanceToCircle(tnPosition3.x, tnPosition3.y)
            ];

            // Select the position with the maximum distance from circle
            let tnMaxDistanceIndex = tnDistances.indexOf(Math.max(...tnDistances));

            if (tnMaxDistanceIndex === 0) {
                tnX = tnPosition1.x;
                tnY = tnPosition1.y;
            } else if (tnMaxDistanceIndex === 1) {
                tnX = tnPosition2.x;
                tnY = tnPosition2.y;
            } else {
                tnX = tnPosition3.x;
                tnY = tnPosition3.y;
            }

            // Ensure it&#39;s within bounds and outside the circle
            tnX = Math.max(padding, Math.min(midX - labelWidth - padding, tnX))-15;
            tnY = Math.max(padding, Math.min(canvas.height - labelHeight - padding, tnY));

            // Additional check to ensure the label is outside the circle
            while (isInsideCircle(tnX + labelWidth / 2, tnY + labelHeight / 2)) {
                tnX -= 10; // Move left
                tnY -= 10; // Move up
            }

            quadrantLabels[2].style.display = &#39;block&#39;;
            quadrantLabels[2].style.left = tnX + &#39;px&#39;;
            quadrantLabels[2].style.top = tnY + &#39;px&#39;;
            quadrantLabels[2].style.right = &#39;auto&#39;;
            quadrantLabels[2].innerHTML = &#34;True&lt;br&gt;Negatives&#34;;
            quadrantLabels[2].style.backgroundColor = &#39;rgba(0, 0, 0, 1)&#39;;

            // 4. False Negatives (outside circle, right side)
            let fnX, fnY;

            // Try different positions for False Negatives to ensure it&#39;s outside the circle
            // Option 1: Far top right
            let fnPosition1 = { x: canvas.width - labelWidth - padding, y: padding };
            // Option 2: Far bottom right
            let fnPosition2 = { x: canvas.width - labelWidth - padding, y: canvas.height - labelHeight - padding };
            // Option 3: Default position but adjusted
            let fnPosition3 = { x: Math.max(midX + (canvas.width - midX) / 2, rightEdge + safetyMargin), y: canvas.height * 0.2};

            // Check which position is furthest from circle
            let fnDistances = [
                distanceToCircle(fnPosition1.x, fnPosition1.y),
                distanceToCircle(fnPosition2.x, fnPosition2.y),
                distanceToCircle(fnPosition3.x, fnPosition3.y)
            ];

            // Select the position with the maximum distance from circle
            let fnMaxDistanceIndex = fnDistances.indexOf(Math.max(...fnDistances));

            if (fnMaxDistanceIndex === 0) {
                fnX = fnPosition1.x;
                fnY = fnPosition1.y;
            } else if (fnMaxDistanceIndex === 1) {
                fnX = fnPosition2.x;
                fnY = fnPosition2.y;
            } else {
                fnX = fnPosition3.x;
                fnY = fnPosition3.y;
            }

            // Ensure it&#39;s within bounds and outside the circle
            fnX = Math.max(midX + padding, Math.min(canvas.width - labelWidth - padding, fnX));
            fnY = Math.max(padding, Math.min(canvas.height - labelHeight - padding, fnY));

            // Additional check to ensure the label is outside the circle
            while (isInsideCircle(fnX + labelWidth / 2, fnY + labelHeight / 2)) {
                fnX += 10; // Move right
                fnY -= 10; // Move up
            }

            quadrantLabels[3].style.display = &#39;block&#39;;
            quadrantLabels[3].style.left = fnX + &#39;px&#39;;
            quadrantLabels[3].style.top = fnY + &#39;px&#39;;
            quadrantLabels[3].style.right = &#39;auto&#39;;
            quadrantLabels[3].innerHTML = &#34;False&lt;br&gt;Negatives&#34;;
            quadrantLabels[3].style.backgroundColor = &#39;rgba(0, 0, 0,1)&#39;;
        }
        
        // Calculate distance from a point to the circle
        function distanceToCircle(x, y) {
            const dx = x - centerX;
            const dy = y - centerY;
            const distance = Math.sqrt(dx * dx + dy * dy);
            return Math.max(0, distance - circleRadius);
        }
        
        // Draw base canvas with vertical line and circle
        function drawBase() {
            // Draw dividing line
            ctx.beginPath();
            ctx.moveTo(canvas.width / 2, 0);
            ctx.lineTo(canvas.width / 2, canvas.height);
            ctx.strokeStyle = &#39;black&#39;;
            ctx.lineWidth = 2;
            ctx.stroke();
            
            // Draw circle
            ctx.beginPath();
            ctx.arc(centerX, centerY, circleRadius, 0, Math.PI * 2);
            ctx.fillStyle = &#39;rgba(0, 0, 255, 0.15)&#39;;
            ctx.fill();
            ctx.strokeStyle = &#39;dark&#39;;
            ctx.lineWidth = 3;
            ctx.stroke();
            
            // Draw border
            ctx.strokeStyle = &#39;#ddd&#39;;
            ctx.lineWidth = 2;
            ctx.strokeRect(0, 0, canvas.width, canvas.height);
            
            // Add coordinate text
            ctx.fillStyle = &#39;rgba(0, 0, 0, 0.7)&#39;;
            ctx.font = &#39;12px Arial&#39;;
            // ctx.fillText(`Center: (${Math.round(circleCenter.x * 100)}%, ${Math.round(circleCenter.y * 100)}%)`, 10, 20);
        }
        
        // Draw all points
        function drawPoints() {
            ctx.save();
            points.forEach(point =&gt; {
                const isRight = point.x &gt;= canvas.width / 2;
                
                // Choose color based on actual class (left/right side)
                if (isRight) {
                    ctx.fillStyle = &#39;blue&#39;; // Actual Positive (right side)
                } else {
                    ctx.fillStyle = &#39;red&#39;; // Actual Negative (left side)
                }
                
                ctx.beginPath();
                ctx.arc(point.x, point.y, 3, 0, Math.PI * 2);
                ctx.fill();
            });
            ctx.restore();
        }
        
        // Check if a point is inside the classification circle
        function isInsideCircle(x, y) {
            const dx = x - centerX;
            const dy = y - centerY;
            return (dx * dx + dy * dy) &lt;= (circleRadius * circleRadius);
        }
        
        // Update the metric display based on the current selected metric
        function updateMetricDisplay() {
            // Skip if no points
            if (totalPoints === 0) {
                metricFormula.textContent = getMetricFormula(currentMetric, true);
                renderKatex();
                return;
            }
            
            // Calculate metrics
            const tpr = truePositives / (truePositives + falseNegatives) || 0;
            const fpr = falsePositives / (falsePositives + trueNegatives) || 0;
            const tnr = trueNegatives / (trueNegatives + falsePositives) || 0;
            const fnr = falseNegatives / (falseNegatives + truePositives) || 0;
            const precision = truePositives / (truePositives + falsePositives) || 0;
            const accuracy = (truePositives + trueNegatives) / totalPoints || 0;
            const f1 = 2 * (precision * tpr) / (precision + tpr) || 0;
            
            // Update formula display based on current metric with properly aligned equations
            switch (currentMetric) {
                case &#39;recall&#39;:
                    metricFormula.textContent = `
                    \\begin{aligned}
                    &amp;= \\frac{\\text{TP}}{\\text{TP} + \\text{FN}} \\\\[12pt]
                    &amp;= \\frac{${truePositives}}{${truePositives} + ${falseNegatives}} \\\\[12pt]
                    &amp;= ${tpr.toFixed(3)}
                    \\end{aligned}
                    `;
                    break;
                case &#39;fpr&#39;:
                    metricFormula.textContent = `
                    \\begin{aligned}
                    &amp;= \\frac{\\text{FP}}{\\text{FP} + \\text{TN}} \\\\[12pt]
                    &amp;= \\frac{${falsePositives}}{${falsePositives} + ${trueNegatives}} \\\\[12pt]
                    &amp;= ${fpr.toFixed(3)}
                    \\end{aligned}
                    `;
                    break;
                case &#39;specificity&#39;:
                    metricFormula.textContent = `
                    \\begin{aligned}
                    &amp;= \\frac{\\text{TN}}{\\text{TN} + \\text{FP}} \\\\[12pt]
                    &amp;= \\frac{${trueNegatives}}{${trueNegatives} + ${falsePositives}} \\\\[12pt]
                    &amp;= ${tnr.toFixed(3)}
                    \\end{aligned}
                    `;
                    break;
                case &#39;fnr&#39;:
                    metricFormula.textContent = `
                    \\begin{aligned}
                    &amp;= \\frac{\\text{FN}}{\\text{FN} + \\text{TP}} \\\\[12pt]
                    &amp;= \\frac{${falseNegatives}}{${falseNegatives} + ${truePositives}} \\\\[12pt]
                    &amp;= ${fnr.toFixed(3)}
                    \\end{aligned}
                    `;
                    break;
                case &#39;precision&#39;:
                    metricFormula.textContent = `
                    \\begin{aligned}
                    &amp;= \\frac{\\text{TP}}{\\text{TP} + \\text{FP}} \\\\[12pt]
                    &amp;= \\frac{${truePositives}}{${truePositives} + ${falsePositives}} \\\\[12pt]
                    &amp;= ${precision.toFixed(3)}
                    \\end{aligned}
                    `;
                    break;
                case &#39;accuracy&#39;:
                    metricFormula.textContent = `
                    \\begin{aligned}
                    &amp;= \\frac{\\text{TP} + \\text{TN}}{\\text{Total}} \\\\[12pt]
                    &amp;= \\frac{${truePositives} + ${trueNegatives}}{${totalPoints}} \\\\[12pt]
                    &amp;= ${accuracy.toFixed(3)}
                    \\end{aligned}
                    `;
                    break;
                case &#39;f1&#39;:
                    metricFormula.textContent = `
                    \\begin{aligned}
                    &amp;= \\frac{2 \\times \\text{Precision} \\times \\text{Recall}}{\\text{Precision} + \\text{Recall}} \\\\[12pt]
                    &amp;= \\frac{2 \\times ${precision.toFixed(3)} \\times ${tpr.toFixed(3)}}{${precision.toFixed(3)} + ${tpr.toFixed(3)}} \\\\[12pt]
                    &amp;= ${f1.toFixed(3)}
                    \\end{aligned}
                    `;
                    break;
            }
            
            // Render formula with KaTeX
            renderKatex();
        }
        
        // Get formula template for a metric
        function getMetricFormula(metric, withZeros = false) {
            if (withZeros) {
                switch (metric) {
                    case &#39;recall&#39;:
                        return `
                        \\begin{aligned}
                        &amp;\\frac{\\text{TP}}{\\text{TP} + \\text{FN}} \\\\[12pt]
                        &amp;= \\frac{0}{0 + 0} \\\\[12pt]
                        &amp;= 0
                        \\end{aligned}
                        `;
                    case &#39;fpr&#39;:
                        return `
                        \\begin{aligned}
                        &amp;\\frac{\\text{FP}}{\\text{FP} + \\text{TN}} \\\\[12pt]
                        &amp;= \\frac{0}{0 + 0} \\\\[12pt]
                        &amp;= 0
                        \\end{aligned}
                        `;
                    case &#39;specificity&#39;:
                        return `
                        \\begin{aligned}
                        &amp;\\frac{\\text{TN}}{\\text{TN} + \\text{FP}} \\\\[12pt]
                        &amp;= \\frac{0}{0 + 0} \\\\[12pt]
                        &amp;= 0
                        \\end{aligned}
                        `;
                    case &#39;fnr&#39;:
                        return `
                        \\begin{aligned}
                        &amp;\\frac{\\text{FN}}{\\text{FN} + \\text{TP}} \\\\[12pt]
                        &amp;= \\frac{0}{0 + 0} \\\\[12pt]
                        &amp;= 0
                        \\end{aligned}
                        `;
                    case &#39;precision&#39;:
                        return `
                        \\begin{aligned}
                        &amp;\\frac{\\text{TP}}{\\text{TP} + \\text{FP}} \\\\[12pt]
                        &amp;= \\frac{0}{0 + 0} \\\\[12pt]
                        &amp;= 0
                        \\end{aligned}
                        `;
                    case &#39;accuracy&#39;:
                        return `
                        \\begin{aligned}
                        &amp;\\frac{\\text{TP} + \\text{TN}}{\\text{Total}} \\\\[12pt]
                        &amp;= \\frac{0 + 0}{0} \\\\[12pt]
                        &amp;= 0
                        \\end{aligned}
                        `;
                    case &#39;f1&#39;:
                        return `
                        \\begin{aligned}
                        &amp;\\frac{2 \\times \\text{Precision} \\times \\text{Recall}}{\\text{Precision} + \\text{Recall}} \\\\[12pt]
                        &amp;= \\frac{2 \\times 0 \\times 0}{0 + 0} \\\\[12pt]
                        &amp;= 0
                        \\end{aligned}
                        `;
                }
            }
            return &#39;&#39;;
        }
        
        // Render KaTeX formulas
        function renderKatex() {
            try {
                if (window.katex) {
                    katex.render(metricFormula.textContent, metricFormula, {
                        displayMode: true,
                        throwOnError: false,
                        output: &#34;html&#34;,
                        trust: true    // Allow newline commands
                    });
                }
            } catch (error) {
                console.error(&#34;KaTeX rendering error:&#34;, error);
            }
        }
        
        // Setup metric buttons
        function setupMetricButtons() {
            const allButtons = [btnRecall, btnFPR, btnSpecificity, btnFNR, btnPrecision, btnAccuracy, btnF1];
            
            // Update button styles when a metric is selected
            function updateButtonStyles(selectedButton) {
                allButtons.forEach(btn =&gt; {
                    btn.classList.remove(&#39;active&#39;);
                });
                selectedButton.classList.add(&#39;active&#39;);
            }
            
            btnRecall.addEventListener(&#39;click&#39;, function() {
                currentMetric = &#39;recall&#39;;
                updateButtonStyles(btnRecall);
                metricTitle.textContent = &#39;Recall/Sensitivity (TPR):&#39;;
                updateMetricDisplay();
            });
            
            btnFPR.addEventListener(&#39;click&#39;, function() {
                currentMetric = &#39;fpr&#39;;
                updateButtonStyles(btnFPR);
                metricTitle.textContent = &#39;False Positive Rate (FPR):&#39;;
                updateMetricDisplay();
            });
            
            btnSpecificity.addEventListener(&#39;click&#39;, function() {
                currentMetric = &#39;specificity&#39;;
                updateButtonStyles(btnSpecificity);
                metricTitle.textContent = &#39;Specificity (TNR):&#39;;
                updateMetricDisplay();
            });
            
            btnFNR.addEventListener(&#39;click&#39;, function() {
                currentMetric = &#39;fnr&#39;;
                updateButtonStyles(btnFNR);
                metricTitle.textContent = &#39;False Negative Rate (FNR):&#39;;
                updateMetricDisplay();
            });
            
            btnPrecision.addEventListener(&#39;click&#39;, function() {
                currentMetric = &#39;precision&#39;;
                updateButtonStyles(btnPrecision);
                metricTitle.textContent = &#39;Precision (PPV):&#39;;
                updateMetricDisplay();
            });
            
            btnAccuracy.addEventListener(&#39;click&#39;, function() {
                currentMetric = &#39;accuracy&#39;;
                updateButtonStyles(btnAccuracy);
                metricTitle.textContent = &#39;Accuracy (ACC):&#39;;
                updateMetricDisplay();
            });
            
            btnF1.addEventListener(&#39;click&#39;, function() {
                currentMetric = &#39;f1&#39;;
                updateButtonStyles(btnF1);
                metricTitle.textContent = &#39;F1 Score:&#39;;
                updateMetricDisplay();
            });
        }
        
        // Mouse events for dragging the circle
        function setupDragEvents() {
            canvas.addEventListener(&#39;mousedown&#39;, function(e) {
                const rect = canvas.getBoundingClientRect();
                const mouseX = e.clientX - rect.left;
                const mouseY = e.clientY - rect.top;
                
                // Check if click is near the circle center
                const dx = mouseX - centerX;
                const dy = mouseY - centerY;
                const distance = Math.sqrt(dx * dx + dy * dy);
                
                if (distance &lt;= circleRadius) {
                    isDragging = true;
                    dragStartPos = { x: mouseX, y: mouseY };
                    dragStartCenter = { x: circleCenter.x, y: circleCenter.y };
                    canvas.style.cursor = &#39;grabbing&#39;;
                }
            });
            
            canvas.addEventListener(&#39;mousemove&#39;, function(e) {
                if (!isDragging) return;
                
                const rect = canvas.getBoundingClientRect();
                const mouseX = e.clientX - rect.left;
                const mouseY = e.clientY - rect.top;
                
                // Calculate new center position
                const dx = (mouseX - dragStartPos.x) / canvas.width;
                const dy = (mouseY - dragStartPos.y) / canvas.height;
                
                circleCenter.x = Math.max(0.1, Math.min(0.9, dragStartCenter.x + dx));
                circleCenter.y = Math.max(0.1, Math.min(0.9, dragStartCenter.y + dy));
                
                calculateDimensions();
                redrawCanvas();
                recalculateMetrics();
                updateLabels();
            });
            
            canvas.addEventListener(&#39;mouseup&#39;, function() {
                if (isDragging) {
                    isDragging = false;
                    canvas.style.cursor = &#39;move&#39;;
                }
            });
            
            canvas.addEventListener(&#39;mouseleave&#39;, function() {
                if (isDragging) {
                    isDragging = false;
                    canvas.style.cursor = &#39;move&#39;;
                }
            });
            
            // Set initial cursor
            canvas.style.cursor = &#39;move&#39;;
        }
        
        // Touch events for mobile
        function setupTouchEvents() {
            canvas.addEventListener(&#39;touchstart&#39;, function(e) {
                e.preventDefault();
                const rect = canvas.getBoundingClientRect();
                const touch = e.touches[0];
                const touchX = touch.clientX - rect.left;
                const touchY = touch.clientY - rect.top;
                
                // Check if touch is near the circle center
                const dx = touchX - centerX;
                const dy = touchY - centerY;
                const distance = Math.sqrt(dx * dx + dy * dy);
                
                if (distance &lt;= circleRadius) {
                    isDragging = true;
                    dragStartPos = { x: touchX, y: touchY };
                    dragStartCenter = { x: circleCenter.x, y: circleCenter.y };
                }
            });
            
            canvas.addEventListener(&#39;touchmove&#39;, function(e) {
                if (!isDragging) return;
                e.preventDefault();
                
                const rect = canvas.getBoundingClientRect();
                const touch = e.touches[0];
                const touchX = touch.clientX - rect.left;
                const touchY = touch.clientY - rect.top;
                
                // Calculate new center position
                const dx = (touchX - dragStartPos.x) / canvas.width;
                const dy = (touchY - dragStartPos.y) / canvas.height;
                
                circleCenter.x = Math.max(0.1, Math.min(0.9, dragStartCenter.x + dx));
                circleCenter.y = Math.max(0.1, Math.min(0.9, dragStartCenter.y + dy));
                
                calculateDimensions();
                redrawCanvas();
                recalculateMetrics();
                updateLabels();
            });
            
            canvas.addEventListener(&#39;touchend&#39;, function(e) {
                e.preventDefault();
                isDragging = false;
            });
        }
        
        // Initialize
        window.addEventListener(&#39;load&#39;, function() {
            resizeCanvas();
            setupMetricButtons();
            setupDragEvents();
            setupTouchEvents();
            
            // Generate 5,000 points immediately
            generatePoints(10000);
            
            // Initial render
            redrawCanvas();
            updateLabels();
            updateMetricDisplay();
        });
        
        window.addEventListener(&#39;resize&#39;, function() {
            resizeCanvas();
        });
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;p&gt;Ao interagir com a simulação&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, você poderá observar alguns casos interessantes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Precisão 50%&lt;/strong&gt;: Ocorre quando o círculo está exatamente no centro.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Baixo recall mas precisão de 100%&lt;/strong&gt;: Um círculo pequeno está inteiramente no lado direito.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Recall máximo com FPR máximo&lt;/strong&gt;: O círculo cobre toda a área de simulação, e portanto o modelo classifica tudo como positivo. Obtemos apenas TP e FP; recall máximo, FPR máximo e nenhuma especificidade.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sem recall nem precisão&lt;/strong&gt;: Se reduzirmos o tamanho do círculo a zero, o modelo classificará tudo como negativo, resultando em ausência de recall, precisão e FPR. Mesmo assim, temos uma acurácia de 50% e especificidade de 100%.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;O cenário ideal&lt;/strong&gt;: Um grande círculo que tenta cobrir todo o lado direito e, ao mesmo tempo, possuir a menor área possível no lado esquerdo.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Essa visualização interativa é útil porque permite relacionar conceitos abstratos com representações visuais concretas. Por exemplo, quando alguém diz que “o modelo tem alta precisão, mas baixo recall”, você pode visualizar isso como um círculo pequeno, posicionado quase totalmente no lado direito. Já no caso de “alta especificidade, mas baixa sensibilidade”, uma possível representação seria um círculo centralizado, dividido igualmente entre os dois lados.&lt;/p&gt;
&lt;h1 id=&#34;entendendo-a-curva-roc&#34;&gt;Entendendo a curva ROC&lt;/h1&gt;
&lt;p&gt;Modelos de classificação, como a regressão logística, geralmente não retornam apenas uma resposta binária (sim/não), mas sim uma probabilidade associada a cada classe. Ou seja, ao invés de dizer diretamente &amp;ldquo;positivo&amp;rdquo; ou &amp;ldquo;negativo&amp;rdquo;, o modelo indica quão confiante está de que determinada observação pertence à classe positiva — atribuindo um valor entre 0 e 1.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Para transformar essa probabilidade em uma decisão binária, é necessário definir um limiar (threshold). Por exemplo: se a probabilidade for maior que 0,5, classificamos como positivo; caso contrário, como negativo. Mas o que acontece se alterarmos esse valor de 0,5? Como o desempenho do modelo muda com diferentes limiares? É justamente aí que entra a &lt;strong&gt;curva ROC&lt;/strong&gt;&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;. Em vez de avaliar o modelo com base em um único ponto de corte, a curva ROC mostra como o modelo equilibra acertos e erros à medida que o limiar varia. Para construí-la, plotamos TPR (eixo y) versus FPR (eixo x) para todos os limiares de 0 a 1.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;o-cenário-baseline&#34;&gt;O cenário baseline&lt;/h2&gt;
&lt;p&gt;Para entender melhor a curva ROC, vamos considerar a simulação anterior mas com um círculo estático que cresce exatamente do centro. Uma vez que os pontos estão uniformemente distribuidos no plano, para qualquer limiar, o modelo classifica corretamente os positivos (TPR) na mesma proporção que classifica incorretamente os negativos (FPR).&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Quando plotamos a curva ROC para este modelo, obtemos uma reta diagonal do tipo $y = x$. Em outras palavras, se o modelo identifica 60% dos positivos corretamente, ele também classifica erroneamente 60% dos negativos como positivos. Varie o tamanho do círculo na simulação abaixo para observar esse comportamento.&lt;/p&gt;
&lt;br&gt;

&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;
&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.15.3/katex.min.css&#34;&gt;
    &lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.15.3/katex.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.15.3/contrib/auto-render.min.js&#34;&gt;&lt;/script&gt;
    &lt;script&gt;
        // Ensure KaTeX is fully loaded before page initialization
        document.addEventListener(&#39;DOMContentLoaded&#39;, function() {
            if (typeof katex !== &#39;undefined&#39;) {
                console.log(&#34;KaTeX loaded successfully&#34;);
            } else {
                console.error(&#34;KaTeX failed to load&#34;);
            }
        });
    &lt;/script&gt;
    &lt;style&gt;
        
        .roc_simulation-container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .roc_control-panel {
            width: 100%;
            max-width: 80%;
            margin: 0 auto 20px;
        }
        
        .roc_slider-container {
            display: flex;
            align-items: center;
            gap: 10px;
            flex-wrap: wrap;
            margin-bottom: 10px;
            position: relative;
            width: 100%;
            max-width: 350px;
        }
        
        .roc_slider-container label {
            font-weight: bold;
            min-width: 100px;
            color: #333;
            margin-bottom: 1px;
        }
        
        .roc_range-slider {
            width: 100%;
            position: relative;
        }
        
        .roc_range-slider-track {
            height: 8px;
            width: 100%;
            background-color: #ddd;
            border-radius: 4px;
            position: relative;
        }
        
        .roc_range-slider-fill {
            height: 100%;
            background-color: #3b82f6;
            border-radius: 4px;
            position: absolute;
            top: 0;
            left: 0;
            pointer-events: none;
            transition: width 0.1s ease;
        }
        
        input[type=&#34;range&#34;] {
            -webkit-appearance: none;
            appearance: none;
            width: 100%;
            height: 8px;
            background: transparent;
            position: absolute;
            top: 0;
            left: 0;
            margin: 0;
            z-index: 10;
        }

        input[type=&#34;range&#34;]::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 22px;
            height: 22px;
            background: #3b82f6;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            transition: all 0.2s ease;
        }

        input[type=&#34;range&#34;]::-webkit-slider-thumb:hover {
            background: #2563eb;
            transform: scale(1.1);
        }

        input[type=&#34;range&#34;]::-moz-range-thumb {
            width: 22px;
            height: 22px;
            background: #3b82f6;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            transition: all 0.2s ease;
        }

        input[type=&#34;range&#34;]::-moz-range-thumb:hover {
            background: #2563eb;
            transform: scale(1.1);
        }

        .roc_slider-value {
            min-width: 50px;
            text-align: center;
            font-weight: bold;
            color: #3b82f6;
            background-color: #f0f4ff;
            padding: 4px 8px;
            border-radius: 12px;
            margin-left: 10px;
            border: 1px solid #d1d5db;
        }
        
        .roc_flex-container {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            gap: 3%; /* Increased from 20px */
        }
        
        .roc_visualization-area {
            flex: 1;
            min-width: 300px;
        }
        
        .roc_roc-area {
            flex: 1;
            min-width: 300px;
        }
        
        .roc_canvas-container {
            position: relative;
            width: 100%;
            padding-bottom: 85%;
            border: 1px solid #ddd;
            overflow: hidden;
            background-color: white;
        }

        #roc_canvas, #roc_rocCanvas {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            cursor: move;
        }
        
        .roc_quadrant-label {
            position: absolute;
            white-space: nowrap;
            font-size: 17px;
            text-align: center;
            color: #fff;
            background-color: rgba(0, 0, 0, 1);
            padding: 1px 5px;
            border-radius: 10px;
            z-index: 10;
            pointer-events: none;
            transition: all 0.3s ease;
        }
        
        .roc_metrics-display {
            margin-top: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f8f9fa;
        }
        
        .roc_metrics-title {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 15px;
            color: #333;
            text-align: center;
        }
        
        .roc_metrics-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }
        
        .roc_metric-card {
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
        }
        
        .roc_metric-name {
            font-weight: bold;
            font-size: 16px;
            margin-bottom: 10px;
            color: #333;
        }
        
        .roc_metric-formula {
            text-align: center;
            min-height: 80px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .roc_metric-value {
            text-align: center;
            font-weight: bold;
            font-size: 18px;
            color: #3b82f6;
            margin-top: 10px;
        }
        
        @media (max-width: 768px) {
            .roc_flex-container {
                flex-direction: column;
            }
            
            .roc_metrics-grid {
                grid-template-columns: 1fr;
            }
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&#34;roc_simulation-container&#34;&gt;
        
        &lt;div class=&#34;roc_control-panel&#34;&gt;
            &lt;div class=&#34;roc_slider-container&#34;&gt;
                &lt;label for=&#34;roc_circleSize&#34;&gt;Tamanho do círculo&lt;/label&gt;
                &lt;div class=&#34;roc_range-slider&#34;&gt;
                    &lt;div class=&#34;roc_range-slider-track&#34;&gt;
                        &lt;div class=&#34;roc_range-slider-fill&#34; id=&#34;roc_circleSizeFill&#34;&gt;&lt;/div&gt;
                    &lt;/div&gt;
                    &lt;input type=&#34;range&#34; id=&#34;roc_circleSize&#34; min=&#34;0&#34; max=&#34;100&#34; value=&#34;0&#34; step=&#34;1&#34;&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;roc_flex-container&#34;&gt;
            &lt;!-- Visualization Area --&gt;
            &lt;div class=&#34;roc_visualization-area&#34;&gt;
                &lt;div class=&#34;roc_canvas-container&#34;&gt;
                    &lt;canvas id=&#34;roc_canvas&#34;&gt;&lt;/canvas&gt;
                    &lt;div id=&#34;roc_quadrant0&#34; class=&#34;roc_quadrant-label&#34;&gt;False&lt;br&gt;Positives&lt;/div&gt;
                    &lt;div id=&#34;roc_quadrant1&#34; class=&#34;roc_quadrant-label&#34;&gt;True&lt;br&gt;Positives&lt;/div&gt;
                    &lt;div id=&#34;roc_quadrant2&#34; class=&#34;roc_quadrant-label&#34;&gt;True&lt;br&gt;Negatives&lt;/div&gt;
                    &lt;div id=&#34;roc_quadrant3&#34; class=&#34;roc_quadrant-label&#34;&gt;False&lt;br&gt;Negatives&lt;/div&gt;
                &lt;/div&gt;
                
                &lt;div style=&#34;display: flex; justify-content: space-between; width: 100%; font-weight: bold; margin-top: 5px;&#34;&gt;
                    &lt;span&gt;Negatives&lt;/span&gt;
                    &lt;span&gt;Positives&lt;/span&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            
            &lt;!-- Right side: ROC Curve and Metrics --&gt;
            &lt;div class=&#34;roc_roc-area&#34;&gt;
            &lt;!-- ROC Curve with Y-axis labels --&gt;
            &lt;div style=&#34;display: flex; align-items: stretch; margin-bottom: 0px;&#34;&gt;
                &lt;!-- Y-axis labels --&gt;
                &lt;div style=&#34;display: flex; flex-direction: column; font-weight: bold; width: 40px; position: relative; height: 300px;&#34;&gt;
                    &lt;span style=&#34;position: absolute; top: 0; right: 0;&#34;&gt;1.0&lt;/span&gt;
                    &lt;span style=&#34;position: absolute; writing-mode: vertical-rl; transform: rotate(180deg); left: 10px; top: 50%;&#34;&gt;TPR&lt;/span&gt;
                &lt;/div&gt;
                
                &lt;!-- ROC Curve canvas --&gt;
                &lt;div style=&#34;flex-grow: 1;&#34;&gt;
                    &lt;div class=&#34;roc_canvas-container&#34; style=&#34;padding-bottom: 50%;&#34;&gt;
                        &lt;canvas id=&#34;roc_rocCanvas&#34;&gt;&lt;/canvas&gt;
                    &lt;/div&gt;
                    
                    &lt;!-- X-axis labels --&gt;
                    &lt;div style=&#34;display: flex; justify-content: space-between; width: 100%; font-weight: bold; margin: 5px 0 10px 0;&#34;&gt;
                        &lt;span&gt;0.0&lt;/span&gt;
                        &lt;span style=&#34;text-align: center; flex-grow: 1;&#34;&gt;FPR&lt;/span&gt;
                        &lt;span&gt;1.0&lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;/div&gt;
                
                &lt;!-- Compact Metrics Display --&gt;
                &lt;div class=&#34;roc_metrics-display&#34; style=&#34;margin-top: 0; padding: 10px;&#34;&gt;
                    &lt;div class=&#34;roc_metrics-grid&#34; style=&#34;grid-template-columns: 1fr 1fr; gap: 10px;&#34;&gt;
                        &lt;div class=&#34;roc_metric-card&#34; style=&#34;padding: 8px;&#34;&gt;
                            &lt;div class=&#34;roc_metric-name&#34; style=&#34;font-size: 20px; margin-bottom: 5px;text-align: center;&#34;&gt;TPR (True Positive Rate)&lt;/div&gt;
                            &lt;div class=&#34;roc_metric-formula&#34; id=&#34;roc_tprFormula&#34; style=&#34;min-height: 50px; font-size: 18px;&#34;&gt;Loading...&lt;/div&gt;
                            &lt;div class=&#34;roc_metric-value&#34; id=&#34;roc_tprValue&#34; style=&#34;margin-top: 5px; font-size: 22px;&#34;&gt;= 0.000&lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div class=&#34;roc_metric-card&#34; style=&#34;padding: 8px;&#34;&gt;
                            &lt;div class=&#34;roc_metric-name&#34; style=&#34;font-size: 20px; margin-bottom: 5px;text-align: center;&#34;&gt;FPR (False Positive Rate)&lt;/div&gt;
                            &lt;div class=&#34;roc_metric-formula&#34; id=&#34;roc_fprFormula&#34; style=&#34;min-height: 50px; font-size: 18px;&#34;&gt;Loading...&lt;/div&gt;
                            &lt;div class=&#34;roc_metric-value&#34; id=&#34;roc_fprValue&#34; style=&#34;margin-top: 5px; font-size: 22px;&#34;&gt;= 0.000&lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- Ensure KaTeX is loaded completely before page init --&gt;
    &lt;script&gt;
        // Wait for all resources to load, including KaTeX
        window.addEventListener(&#39;load&#39;, function() {
            // Initialize simulation
            roc_init();
        });
        
        function roc_init() {
            // DOM Elements
            const roc_canvas = document.getElementById(&#39;roc_canvas&#39;);
            const roc_ctx = roc_canvas.getContext(&#39;2d&#39;);
            const roc_rocCanvas = document.getElementById(&#39;roc_rocCanvas&#39;);
            const roc_rocCtx = roc_rocCanvas.getContext(&#39;2d&#39;);
            const roc_circleSizeSlider = document.getElementById(&#39;roc_circleSize&#39;);
            const roc_circleSizeFill = document.getElementById(&#39;roc_circleSizeFill&#39;);
            const roc_sizeValue = document.getElementById(&#39;roc_sizeValue&#39;);
        
            // Quadrant labels
            const roc_quadrantLabels = [
                document.getElementById(&#39;roc_quadrant0&#39;),
                document.getElementById(&#39;roc_quadrant1&#39;),
                document.getElementById(&#39;roc_quadrant2&#39;),
                document.getElementById(&#39;roc_quadrant3&#39;)
            ];
            
            // Metric displays
            const roc_tprFormula = document.getElementById(&#39;roc_tprFormula&#39;);
            const roc_tprValue = document.getElementById(&#39;roc_tprValue&#39;);
            const roc_fprFormula = document.getElementById(&#39;roc_fprFormula&#39;);
            const roc_fprValue = document.getElementById(&#39;roc_fprValue&#39;);
            
            // Variables
            let roc_isDragging = false;
            let roc_truePositives = 0;
            let roc_falsePositives = 0;
            let roc_trueNegatives = 0;
            let roc_falseNegatives = 0;
            let roc_totalPoints = 0;
            let roc_points = [];
            let roc_rocPoints = [];
            let roc_currentSize = 0; // Track current circle size
            
            // Circle properties
            let roc_circleRadius;
            let roc_centerX;
            let roc_centerY;
            let roc_circleCenter = { x: 0.5, y: 0.5 }; // Normalized position (0-1)
            let roc_circleSizePercent = 0; // Percentage of min dimension
            let roc_dragStartPos = { x: 0, y: 0 };
            let roc_dragStartCenter = { x: 0, y: 0 };
            
            // Update slider fill
            function roc_updateSliderFill() {
                const percent = (roc_circleSizeSlider.value - roc_circleSizeSlider.min) / (roc_circleSizeSlider.max - roc_circleSizeSlider.min) * 100;
                roc_circleSizeFill.style.width = percent + &#39;%&#39;;
            }
            
            // Initial slider fill update
            roc_updateSliderFill();
            
            // Setup slider events for changing circle size only
            function roc_setupSliderEvents() {
                // Update slider fill and add event listener
                roc_updateSliderFill();
                
                roc_circleSizeSlider.addEventListener(&#39;input&#39;, function() {
                    // Store previous and current size for ROC curve updating
                    const prevSize = roc_circleSizePercent;
                    roc_circleSizePercent = parseInt(this.value);
                    roc_currentSize = roc_circleSizePercent;
                    
                    roc_updateSliderFill();
                    roc_calculateDimensions();
                    roc_redrawCanvas();
                    roc_recalculateMetrics();
                    roc_updateLabels();
                    
                    // Update ROC curve based on whether size increased or decreased
                    if (roc_circleSizePercent &gt; prevSize) {
                        roc_addROCPoint();
                    } else if (roc_circleSizePercent &lt; prevSize) {
                        roc_removeROCPointsAboveSize(roc_circleSizePercent);
                    }
                    
                    roc_drawROCCurve();
                });
            }
            
            // Resize canvas to fit container
            function roc_resizeCanvas() {
                const container = roc_canvas.parentElement;
                roc_canvas.width = container.clientWidth;
                roc_canvas.height = container.clientHeight;
                
                const rocContainer = roc_rocCanvas.parentElement;
                roc_rocCanvas.width = rocContainer.clientWidth;
                roc_rocCanvas.height = rocContainer.clientHeight;
                
                roc_calculateDimensions();
                roc_redrawCanvas();
                roc_drawROCCurve();
                roc_updateLabels();
            }
            
            // Calculate circle dimensions based on canvas size and current settings
            function roc_calculateDimensions() {
                // Fixed center position (prevent dragging)
                roc_centerX = roc_canvas.width * 0.5;
                roc_centerY = roc_canvas.height * 0.5;
                const minDimension = Math.min(roc_canvas.width, roc_canvas.height);
                roc_circleRadius = minDimension * (roc_circleSizePercent / 100);
            }
            
            // Generate points
            function roc_generatePoints(count) {
                roc_points = [];
                
                // Generate half the points on the left side and half on the right
                for (let i = 0; i &lt; count / 2; i++) {
                    // Left side point (Negatives)
                    roc_points.push({
                        x: Math.random() * (roc_canvas.width / 2 - 5),
                        y: Math.random() * roc_canvas.height
                    });
                    
                    // Right side point (Positives)
                    roc_points.push({
                        x: (roc_canvas.width / 2 + 5) + Math.random() * (roc_canvas.width / 2 - 10),
                        y: Math.random() * roc_canvas.height
                    });
                }
                
                roc_recalculateMetrics();
            }
            
            // Update the class metrics based on the points
            function roc_recalculateMetrics() {
                // Reset counts
                roc_truePositives = 0;
                roc_falsePositives = 0;
                roc_trueNegatives = 0;
                roc_falseNegatives = 0;
                
                // Recalculate counts for each point
                roc_points.forEach(point =&gt; {
                    const isRight = point.x &gt;= roc_canvas.width / 2;
                    const isPredictedPositive = roc_isInsideCircle(point.x, point.y);
                    
                    if (isRight &amp;&amp; isPredictedPositive) roc_truePositives++;
                    else if (!isRight &amp;&amp; isPredictedPositive) roc_falsePositives++;
                    else if (!isRight &amp;&amp; !isPredictedPositive) roc_trueNegatives++;
                    else if (isRight &amp;&amp; !isPredictedPositive) roc_falseNegatives++;
                });
                
                roc_totalPoints = roc_points.length;
                
                // Update the metric displays
                roc_updateMetricDisplay();
            }
            
            // Update metric display
            function roc_updateMetricDisplay() {
                // Calculate TPR and FPR
                const tpr = roc_truePositives / (roc_truePositives + roc_falseNegatives) || 0;
                const fpr = roc_falsePositives / (roc_falsePositives + roc_trueNegatives) || 0;
                
                // Update display values with equal sign
                roc_tprValue.textContent = &#34;= &#34; + tpr.toFixed(3);
                roc_fprValue.textContent = &#34;= &#34; + fpr.toFixed(3);
                
                // Properly format the equations for KaTeX
                const tprFormulaText = `\\frac{TP}{TP + FN} = \\frac{${roc_truePositives}}{${roc_truePositives} + ${roc_falseNegatives}}`;
                const fprFormulaText = `\\frac{FP}{FP + TN} = \\frac{${roc_falsePositives}}{${roc_falsePositives} + ${roc_trueNegatives}}`;
                
                // Set the text content for later rendering
                roc_tprFormula.setAttribute(&#39;data-formula&#39;, tprFormulaText);
                roc_fprFormula.setAttribute(&#39;data-formula&#39;, fprFormulaText);
                
                // Render with KaTeX
                roc_renderFormulas();
            }
            
            // Properly format the equations for KaTeX with larger font
            function roc_renderFormulas() {
                try {
                    if (typeof katex !== &#39;undefined&#39;) {
                        const tprFormulaText = roc_tprFormula.getAttribute(&#39;data-formula&#39;);
                        const fprFormulaText = roc_fprFormula.getAttribute(&#39;data-formula&#39;);
                        
                        katex.render(tprFormulaText, roc_tprFormula, {
                            displayMode: true,
                            throwOnError: false,
                            fontSize: &#39;1.2em&#39; // Larger font size
                        });
                        
                        katex.render(fprFormulaText, roc_fprFormula, {
                            displayMode: true,
                            throwOnError: false,
                            fontSize: &#39;1.2em&#39; // Larger font size
                        });
                    } else {
                        console.error(&#34;KaTeX not available for rendering&#34;);
                        // Fallback to plain text if rendering fails
                        roc_tprFormula.textContent = roc_tprFormula.getAttribute(&#39;data-formula&#39;);
                        roc_fprFormula.textContent = roc_fprFormula.getAttribute(&#39;data-formula&#39;);
                    }
                } catch (error) {
                    console.error(&#34;KaTeX rendering error:&#34;, error);
                }
            }
            
            // Draw all points
            function roc_drawPoints() {
                roc_points.forEach(point =&gt; {
                    const isRight = point.x &gt;= roc_canvas.width / 2;
                    
                    // Choose color based on actual class (left/right side)
                    if (isRight) {
                        roc_ctx.fillStyle = &#39;blue&#39;; // Actual Positive (right side)
                    } else {
                        roc_ctx.fillStyle = &#39;red&#39;; // Actual Negative (left side)
                    }
                    
                    roc_ctx.beginPath();
                    roc_ctx.arc(point.x, point.y, 3, 0, Math.PI * 2);
                    roc_ctx.fill();
                });
            }
            
            // Redraw canvas with all points and current circle position
            function roc_redrawCanvas() {
                roc_ctx.clearRect(0, 0, roc_canvas.width, roc_canvas.height);
                
                // Draw points
                roc_drawPoints();
                
                // Draw dividing line
                roc_ctx.beginPath();
                roc_ctx.moveTo(roc_canvas.width / 2, 0);
                roc_ctx.lineTo(roc_canvas.width / 2, roc_canvas.height);
                roc_ctx.strokeStyle = &#39;black&#39;;
                roc_ctx.lineWidth = 2;
                roc_ctx.stroke();
                
                // Draw circle
                roc_ctx.beginPath();
                roc_ctx.arc(roc_centerX, roc_centerY, roc_circleRadius, 0, Math.PI * 2);
                roc_ctx.fillStyle = &#39;rgba(0, 0, 255, 0.15)&#39;;
                roc_ctx.fill();
                roc_ctx.strokeStyle = &#39;black&#39;; // Changed to black for better visibility
                roc_ctx.lineWidth = 3;
                roc_ctx.stroke();
                
                // Draw border
                roc_ctx.strokeStyle = &#39;#ddd&#39;;
                roc_ctx.lineWidth = 1;
                roc_ctx.strokeRect(0, 0, roc_canvas.width, roc_canvas.height);
            }
            
            // Draw the ROC curve
            function roc_drawROCCurve() {
                roc_rocCtx.clearRect(0, 0, roc_rocCanvas.width, roc_rocCanvas.height);
                
                            // Draw axes
            roc_rocCtx.beginPath();
            // Y-axis (left)
            roc_rocCtx.moveTo(0, roc_rocCanvas.height);
            roc_rocCtx.lineTo(0, 0);
            // X-axis (bottom)
            roc_rocCtx.moveTo(0, roc_rocCanvas.height);
            roc_rocCtx.lineTo(roc_rocCanvas.width, roc_rocCanvas.height);
            roc_rocCtx.stroke();

            // Y-axis label
            roc_rocCtx.save();
            roc_rocCtx.translate(20, roc_rocCanvas.height/2); // Adjust left position
            roc_rocCtx.rotate(-Math.PI/2);
            roc_rocCtx.restore();

            // Y-ticks (only 0 and 1)
            [0, 1].forEach(t =&gt; {
                const y = roc_rocCanvas.height - (t * roc_rocCanvas.height);
                // Tick
                roc_rocCtx.beginPath();
                roc_rocCtx.moveTo(0, y);
                roc_rocCtx.lineTo(5, y);
                roc_rocCtx.stroke();
                // Label
                roc_rocCtx.textAlign = &#34;right&#34;;
                roc_rocCtx.fillText(t.toFixed(0), -8, y + 4);
            });

            // X-ticks (only 0 and 1)
            [0, 1].forEach(t =&gt; {
                const x = t * roc_rocCanvas.width;
                // Tick
                roc_rocCtx.beginPath();
                roc_rocCtx.moveTo(x, roc_rocCanvas.height);
                roc_rocCtx.lineTo(x, roc_rocCanvas.height - 5);
                roc_rocCtx.stroke();
                // Label
                roc_rocCtx.textAlign = &#34;center&#34;;
                roc_rocCtx.fillText(t.toFixed(0), x, roc_rocCanvas.height + 20);
            });

            // X-axis label
                // Draw reference line (random classifier)
                roc_rocCtx.beginPath();
                roc_rocCtx.moveTo(0, roc_rocCanvas.height);
                roc_rocCtx.lineTo(roc_rocCanvas.width, 0);
                roc_rocCtx.strokeStyle = &#39;gray&#39;;
                roc_rocCtx.lineWidth = 1;
                roc_rocCtx.setLineDash([5, 5]);
                roc_rocCtx.stroke();
                roc_rocCtx.setLineDash([]);
                
                // Draw ROC curve points if we have any
                if (roc_rocPoints.length &gt; 0) {
                    // Only draw line if there are multiple points (after user has moved the slider)
                    if (roc_rocPoints.length &gt; 1) {
                        // Draw the curve connecting the points
                        roc_rocCtx.beginPath();
                        roc_rocCtx.moveTo(0, roc_rocCanvas.height); // Start at origin (0,1)
                        
                        // Sort points to ensure proper curve
                        const sortedPoints = [...roc_rocPoints].sort((a, b) =&gt; a.fpr - b.fpr);
                        
                        sortedPoints.forEach(point =&gt; {
                            const x = point.fpr * roc_rocCanvas.width;
                            const y = roc_rocCanvas.height - (point.tpr * roc_rocCanvas.height);
                            roc_rocCtx.lineTo(x, y);
                        });
                        
                        roc_rocCtx.strokeStyle = &#39;gray&#39;; // Changed from blue to gray
                        roc_rocCtx.lineWidth = 2;
                        roc_rocCtx.stroke();
                        
                        // Draw points
                        sortedPoints.forEach(point =&gt; {
                            const x = point.fpr * roc_rocCanvas.width;
                            const y = roc_rocCanvas.height - (point.tpr * roc_rocCanvas.height);
                            
                            roc_rocCtx.beginPath();
                            roc_rocCtx.arc(x, y, 3, 0, Math.PI * 2);
                            roc_rocCtx.fillStyle = &#39;gray&#39;; // Changed from blue to gray
                            roc_rocCtx.fill();
                        });
                    }
                    
                    // Draw current operating point
                    const tpr = roc_truePositives / (roc_truePositives + roc_falseNegatives) || 0;
                    const fpr = roc_falsePositives / (roc_falsePositives + roc_trueNegatives) || 0;
                    
                    const currentX = fpr * roc_rocCanvas.width;
                    const currentY = roc_rocCanvas.height - (tpr * roc_rocCanvas.height);
                    
                    roc_rocCtx.beginPath();
                    roc_rocCtx.arc(currentX, currentY, 6, 0, Math.PI * 2);
                    roc_rocCtx.fillStyle = &#39;gray&#39;; // Changed from red to gray
                    roc_rocCtx.fill();
                    roc_rocCtx.strokeStyle = &#39;black&#39;;
                    roc_rocCtx.lineWidth = 1;
                    roc_rocCtx.stroke();
                }
            }
            
            // Add a new ROC point for current size
            function roc_addROCPoint() {
                const tpr = roc_truePositives / (roc_truePositives + roc_falseNegatives) || 0;
                const fpr = roc_falsePositives / (roc_falsePositives + roc_trueNegatives) || 0;
                
                // Check if we already have a point with the exact same size
                const existingPoint = roc_rocPoints.find(p =&gt; p.size === roc_circleSizePercent);
                
                if (existingPoint) {
                    // Update existing point
                    existingPoint.tpr = tpr;
                    existingPoint.fpr = fpr;
                } else {
                    // Add new point
                    roc_rocPoints.push({
                        tpr,
                        fpr,
                        size: roc_circleSizePercent
                    });
                }
                
                // Sort points by size
                roc_rocPoints.sort((a, b) =&gt; a.size - b.size);
            }
            
            // Remove ROC points above a certain size
            function roc_removeROCPointsAboveSize(size) {
                roc_rocPoints = roc_rocPoints.filter(point =&gt; point.size &lt;= size);
            }
            
            // Update quadrant labels dynamically based on circle position
            function roc_updateLabels() {
                // Get vertical dividing line position
                const midX = roc_canvas.width / 2;
                
                // Check if circle overlaps with left or right half
                const leftEdge = roc_centerX - roc_circleRadius;
                const rightEdge = roc_centerX + roc_circleRadius;
                const topEdge = roc_centerY - roc_circleRadius;
                const bottomEdge = roc_centerY + roc_circleRadius;
                const overlapsLeft = leftEdge &lt; midX;
                const overlapsRight = rightEdge &gt; midX;
                
                // Padding to ensure labels stay within canvas
                const padding = 20;
                const labelWidth = 70;
                const labelHeight = 40;
                
                // 1. False Positives (inside circle, left side)
                if (overlapsLeft &amp;&amp; roc_falsePositives &gt; 0) {
                    const fpX = Math.max(padding, Math.min(midX - labelWidth - padding, roc_centerX - roc_circleRadius / 2));
                    const fpY = roc_centerY;
                    roc_quadrantLabels[0].style.display = &#39;block&#39;;
                    roc_quadrantLabels[0].style.left = fpX + &#39;px&#39;;
                    roc_quadrantLabels[0].style.top = fpY + &#39;px&#39;;
                } else {
                    roc_quadrantLabels[0].style.display = &#39;none&#39;;
                }
                
                // 2. True Positives (inside circle, right side)
                if (overlapsRight &amp;&amp; roc_truePositives &gt; 0) {
                    const tpX = Math.min(roc_canvas.width - labelWidth - padding, Math.max(midX + padding, roc_centerX + roc_circleRadius / 3));
                    const tpY = roc_centerY;
                    roc_quadrantLabels[1].style.display = &#39;block&#39;;
                    roc_quadrantLabels[1].style.left = tpX + &#39;px&#39;;
                    roc_quadrantLabels[1].style.top = tpY + &#39;px&#39;;
                } else {
                    roc_quadrantLabels[1].style.display = &#39;none&#39;;
                }
                
                // 3. True Negatives (outside circle, left side)
                // Only show if there&#39;s sufficient space between the circle and the edge
                const safeDistanceFromCircle = 50; // Minimum distance needed
                const distanceLeftEdge = leftEdge;
                
                if (roc_trueNegatives &gt; 0 &amp;&amp; distanceLeftEdge &gt; safeDistanceFromCircle) {
                    const tnX = padding;
                    const tnY = padding;
                    roc_quadrantLabels[2].style.display = &#39;block&#39;;
                    roc_quadrantLabels[2].style.left = tnX + &#39;px&#39;;
                    roc_quadrantLabels[2].style.top = tnY + &#39;px&#39;;
                } else {
                    // Hide when circle gets too close
                    roc_quadrantLabels[2].style.display = &#39;none&#39;;
                }
                
                // 4. False Negatives (outside circle, right side)
                // Only show if there&#39;s sufficient space between the circle and right edge
                const distanceRightEdge = roc_canvas.width - rightEdge;
                
                if (roc_falseNegatives &gt; 0 &amp;&amp; distanceRightEdge &gt; safeDistanceFromCircle) {
                    const fnX = roc_canvas.width - labelWidth - padding;
                    const fnY = padding;
                    roc_quadrantLabels[3].style.display = &#39;block&#39;;
                    roc_quadrantLabels[3].style.left = fnX + &#39;px&#39;;
                    roc_quadrantLabels[3].style.top = fnY + &#39;px&#39;;
                } else {
                    // Hide when circle gets too close
                    roc_quadrantLabels[3].style.display = &#39;none&#39;;
                }
            }
            
            // Check if a point is inside the circle
            function roc_isInsideCircle(x, y) {
                const dx = x - roc_centerX;
                const dy = y - roc_centerY;
                return (dx * dx + dy * dy) &lt;= (roc_circleRadius * roc_circleRadius);
            }
            
            // Calculate distance from a point to the circle
            function roc_distanceToCircle(x, y) {
                const dx = x - roc_centerX;
                const dy = y - roc_centerY;
                const distance = Math.sqrt(dx * dx + dy * dy);
                return Math.max(0, distance - roc_circleRadius);
            }
            
            // Initialize the first ROC point for the starting size
            function roc_initROCPoint() {
                roc_rocPoints = [];
                roc_addROCPoint();
            }
            
            // Mouse events for dragging the circle
            function roc_setupDragEvents() {
                roc_canvas.addEventListener(&#39;mousedown&#39;, function(e) {
                    const rect = roc_canvas.getBoundingClientRect();
                    const mouseX = e.clientX - rect.left;
                    const mouseY = e.clientY - rect.top;
                    
                    // Check if click is near the circle center
                    const dx = mouseX - roc_centerX;
                    const dy = mouseY - roc_centerY;
                    const distance = Math.sqrt(dx * dx + dy * dy);
                    
                    if (distance &lt;= roc_circleRadius) {
                        roc_isDragging = true;
                        roc_dragStartPos = { x: mouseX, y: mouseY };
                        roc_dragStartCenter = { x: roc_circleCenter.x, y: roc_circleCenter.y };
                        roc_canvas.style.cursor = &#39;grabbing&#39;;
                    }
                });
                
                roc_canvas.addEventListener(&#39;mousemove&#39;, function(e) {
                    if (!roc_isDragging) return;
                    
                    const rect = roc_canvas.getBoundingClientRect();
                    const mouseX = e.clientX - rect.left;
                    const mouseY = e.clientY - rect.top;
                    
                    // Calculate new center position
                    const dx = (mouseX - roc_dragStartPos.x) / roc_canvas.width;
                    const dy = (mouseY - roc_dragStartPos.y) / roc_canvas.height;
                    
                    roc_circleCenter.x = Math.max(0.1, Math.min(0.9, roc_dragStartCenter.x + dx));
                    roc_circleCenter.y = Math.max(0.1, Math.min(0.9, roc_dragStartCenter.y + dy));
                    
                    roc_calculateDimensions();
                    roc_redrawCanvas();
                    roc_recalculateMetrics();
                    roc_updateLabels();
                    roc_updateROCCurve();
                });
                
                roc_canvas.addEventListener(&#39;mouseup&#39;, function() {
                    if (roc_isDragging) {
                        roc_isDragging = false;
                        roc_canvas.style.cursor = &#39;move&#39;;
                    }
                });
                
                roc_canvas.addEventListener(&#39;mouseleave&#39;, function() {
                    if (roc_isDragging) {
                        roc_isDragging = false;
                        roc_canvas.style.cursor = &#39;move&#39;;
                    }
                });
                
                // Set initial cursor
                roc_canvas.style.cursor = &#39;move&#39;;
            }
            
            // Touch events for mobile
            function roc_setupTouchEvents() {
                roc_canvas.addEventListener(&#39;touchstart&#39;, function(e) {
                    e.preventDefault();
                    const rect = roc_canvas.getBoundingClientRect();
                    const touch = e.touches[0];
                    const touchX = touch.clientX - rect.left;
                    const touchY = touch.clientY - rect.top;
                    
                    // Check if touch is near the circle center
                    const dx = touchX - roc_centerX;
                    const dy = touchY - roc_centerY;
                    const distance = Math.sqrt(dx * dx + dy * dy);
                    
                    if (distance &lt;= roc_circleRadius) {
                        roc_isDragging = true;
                        roc_dragStartPos = { x: touchX, y: touchY };
                        roc_dragStartCenter = { x: roc_circleCenter.x, y: roc_circleCenter.y };
                    }
                });
                
                roc_canvas.addEventListener(&#39;touchmove&#39;, function(e) {
                    if (!roc_isDragging) return;
                    e.preventDefault();
                    
                    const rect = roc_canvas.getBoundingClientRect();
                    const touch = e.touches[0];
                    const touchX = touch.clientX - rect.left;
                    const touchY = touch.clientY - rect.top;
                    
                    // Calculate new center position
                    const dx = (touchX - roc_dragStartPos.x) / roc_canvas.width;
                    const dy = (touchY - roc_dragStartPos.y) / roc_canvas.height;
                    
                    roc_circleCenter.x = Math.max(0.1, Math.min(0.9, roc_dragStartCenter.x + dx));
                    roc_circleCenter.y = Math.max(0.1, Math.min(0.9, roc_dragStartCenter.y + dy));
                    
                    roc_calculateDimensions();
                    roc_redrawCanvas();
                    roc_recalculateMetrics();
                    roc_updateLabels();
                    roc_updateROCCurve();
                });
                
                roc_canvas.addEventListener(&#39;touchend&#39;, function(e) {
                    e.preventDefault();
                    roc_isDragging = false;
                });
            }
            
            // Set canvas dimensions
            roc_resizeCanvas();
            
            // Setup events
            roc_setupSliderEvents();
            roc_setupTouchEvents(); // Simple touch events for slider only
            
            // Generate many more points
            roc_generatePoints(10000);
            
            // Initial calculations and rendering
            roc_calculateDimensions();
            roc_recalculateMetrics();
            roc_redrawCanvas();
            roc_updateLabels();
            
            // Initialize the ROC point for current size
            roc_initROCPoint();
            
            // Draw ROC curve
            roc_drawROCCurve();
            
            // Render formulas
            roc_renderFormulas();
            
            // Handle window resize
            window.addEventListener(&#39;resize&#39;, function() {
                roc_resizeCanvas();
                roc_redrawCanvas();
                roc_drawROCCurve();
                roc_updateLabels();
            });
        }
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;br&gt;
&lt;p&gt;Isso seria equivalente a um modelo que faz previsões aleatórias, como jogar uma moeda para decidir entre positivo e negativo. Ou seja, um modelo sem poder preditivo.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;um-modelo-melhor-que-o-baseline&#34;&gt;Um modelo melhor que o baseline&lt;/h2&gt;
&lt;p&gt;Um bom modelo de classificação consegue obter uma sensibilidade alta sem produzir muitos falsos positivos. Utilizando a mesma simulação, uma possibilidade seria um círculo que cresce com início inteiramente no lado direito (captando mais positivos inicialmente). Aumente o tamanho do círculo na visualização abaixo e observe o que acontece.&lt;/p&gt;
&lt;br&gt;

&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;
&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.15.3/katex.min.css&#34;&gt;
    &lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.15.3/katex.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.15.3/contrib/auto-render.min.js&#34;&gt;&lt;/script&gt;
    &lt;script&gt;
        // Ensure KaTeX is fully loaded before page initialization
        document.addEventListener(&#39;DOMContentLoaded&#39;, function() {
            if (typeof katex !== &#39;undefined&#39;) {
                console.log(&#34;KaTeX loaded successfully&#34;);
            } else {
                console.error(&#34;KaTeX failed to load&#34;);
            }
        });
    &lt;/script&gt;
    &lt;style&gt;
        
        .roc2_simulation-container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .roc2_control-panel {
            width: 100%;
            max-width: 80%;
            margin: 0 auto 20px;
        }
        
        .roc2_slider-container {
            display: flex;
            align-items: center;
            gap: 10px;
            flex-wrap: wrap;
            margin-bottom: 10px;
            position: relative;
            width: 100%;
            max-width: 350px;
        }
        
        .roc2_slider-container label {
            font-weight: bold;
            min-width: 100px;
            color: #333;
            margin-bottom: 1px;
        }
        
        .roc2_range-slider {
            width: 100%;
            position: relative;
        }
        
        .roc2_range-slider-track {
            height: 8px;
            width: 100%;
            background-color: #ddd;
            border-radius: 4px;
            position: relative;
        }
        
        .roc2_range-slider-fill {
            height: 100%;
            background-color: #3b82f6;
            border-radius: 4px;
            position: absolute;
            top: 0;
            left: 0;
            pointer-events: none;
            transition: width 0.1s ease;
        }
        
        input[type=&#34;range&#34;] {
            -webkit-appearance: none;
            appearance: none;
            width: 100%;
            height: 8px;
            background: transparent;
            position: absolute;
            top: 0;
            left: 0;
            margin: 0;
            z-index: 10;
        }

        input[type=&#34;range&#34;]::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 22px;
            height: 22px;
            background: #3b82f6;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            transition: all 0.2s ease;
        }

        input[type=&#34;range&#34;]::-webkit-slider-thumb:hover {
            background: #2563eb;
            transform: scale(1.1);
        }

        input[type=&#34;range&#34;]::-moz-range-thumb {
            width: 22px;
            height: 22px;
            background: #3b82f6;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            transition: all 0.2s ease;
        }

        input[type=&#34;range&#34;]::-moz-range-thumb:hover {
            background: #2563eb;
            transform: scale(1.1);
        }

        .roc2_slider-value {
            min-width: 50px;
            text-align: center;
            font-weight: bold;
            color: #3b82f6;
            background-color: #f0f4ff;
            padding: 4px 8px;
            border-radius: 12px;
            margin-left: 10px;
            border: 1px solid #d1d5db;
        }
        
        .roc2_flex-container {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            gap: 3%; /* Increased from 20px */
        }
        
        .roc2_visualization-area {
            flex: 1;
            min-width: 300px;
        }
        
        .roc2_roc-area {
            flex: 1;
            min-width: 300px;
        }
        
        .roc2_canvas-container {
            position: relative;
            width: 100%;
            padding-bottom: 85%;
            border: 1px solid #ddd;
            overflow: hidden;
            background-color: white;
        }

        #roc2_canvas, #roc2_rocCanvas {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            cursor: move;
        }
        
        .roc2_quadrant-label {
            position: absolute;
            white-space: nowrap;
            font-size: 17px;
            text-align: center;
            color: #fff;
            background-color: rgba(0, 0, 0, 1);
            padding: 1px 5px;
            border-radius: 10px;
            z-index: 10;
            pointer-events: none;
            transition: all 0.3s ease;
        }
        
        .roc2_metrics-display {
            margin-top: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f8f9fa;
        }
        
        .roc2_metrics-title {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 15px;
            color: #333;
            text-align: center;
        }
        
        .roc2_metrics-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }
        
        .roc2_metric-card {
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
        }
        
        .roc2_metric-name {
            font-weight: bold;
            font-size: 16px;
            margin-bottom: 10px;
            color: #333;
        }
        
        .roc2_metric-formula {
            text-align: center;
            min-height: 80px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .roc2_metric-value {
            text-align: center;
            font-weight: bold;
            font-size: 18px;
            color: #3b82f6;
            margin-top: 10px;
        }
        
        @media (max-width: 768px) {
            .roc2_flex-container {
                flex-direction: column;
            }
            
            .roc2_metrics-grid {
                grid-template-columns: 1fr;
            }
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&#34;roc2_simulation-container&#34;&gt;
        
        &lt;div class=&#34;roc2_control-panel&#34;&gt;
            &lt;div class=&#34;roc2_slider-container&#34;&gt;
                &lt;label for=&#34;roc2_circleSize&#34;&gt;Tamanho do círculo&lt;/label&gt;
                &lt;div class=&#34;roc2_range-slider&#34;&gt;
                    &lt;div class=&#34;roc2_range-slider-track&#34;&gt;
                        &lt;div class=&#34;roc2_range-slider-fill&#34; id=&#34;roc2_circleSizeFill&#34;&gt;&lt;/div&gt;
                    &lt;/div&gt;
                    &lt;input type=&#34;range&#34; id=&#34;roc2_circleSize&#34; min=&#34;0&#34; max=&#34;100&#34; value=&#34;0&#34; step=&#34;1&#34;&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        
        &lt;div class=&#34;roc2_flex-container&#34;&gt;
            &lt;!-- Visualization Area --&gt;
            &lt;div class=&#34;roc2_visualization-area&#34;&gt;
                &lt;div class=&#34;roc2_canvas-container&#34;&gt;
                    &lt;canvas id=&#34;roc2_canvas&#34;&gt;&lt;/canvas&gt;
                    &lt;div id=&#34;roc2_quadrant0&#34; class=&#34;roc2_quadrant-label&#34;&gt;False&lt;br&gt;Positives&lt;/div&gt;
                    &lt;div id=&#34;roc2_quadrant1&#34; class=&#34;roc2_quadrant-label&#34;&gt;True&lt;br&gt;Positives&lt;/div&gt;
                    &lt;div id=&#34;roc2_quadrant2&#34; class=&#34;roc2_quadrant-label&#34;&gt;True&lt;br&gt;Negatives&lt;/div&gt;
                    &lt;div id=&#34;roc2_quadrant3&#34; class=&#34;roc2_quadrant-label&#34;&gt;False&lt;br&gt;Negatives&lt;/div&gt;
                &lt;/div&gt;
                
                &lt;div style=&#34;display: flex; justify-content: space-between; width: 100%; font-weight: bold; margin-top: 5px;&#34;&gt;
                    &lt;span&gt;Negatives&lt;/span&gt;
                    &lt;span&gt;Positives&lt;/span&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            
            &lt;!-- Right side: ROC Curve and Metrics --&gt;
            &lt;div class=&#34;roc2_roc-area&#34;&gt;
            &lt;!-- ROC Curve with Y-axis labels --&gt;
            &lt;div style=&#34;display: flex; align-items: stretch; margin-bottom: 0px;&#34;&gt;
                &lt;!-- Y-axis labels --&gt;
                &lt;div style=&#34;display: flex; flex-direction: column; font-weight: bold; width: 40px; position: relative; height: 300px;&#34;&gt;
                    &lt;span style=&#34;position: absolute; top: 0; right: 0;&#34;&gt;1.0&lt;/span&gt;
                    &lt;span style=&#34;position: absolute; writing-mode: vertical-rl; transform: rotate(180deg); left: 10px; top: 50%;&#34;&gt;TPR&lt;/span&gt;
                &lt;/div&gt;
                
                &lt;!-- ROC Curve canvas --&gt;
                &lt;div style=&#34;flex-grow: 1;&#34;&gt;
                    &lt;div class=&#34;roc2_canvas-container&#34; style=&#34;padding-bottom: 50%;&#34;&gt;
                        &lt;canvas id=&#34;roc2_rocCanvas&#34;&gt;&lt;/canvas&gt;
                    &lt;/div&gt;
                    
                    &lt;!-- X-axis labels --&gt;
                    &lt;div style=&#34;display: flex; justify-content: space-between; width: 100%; font-weight: bold; margin: 5px 0 10px 0;&#34;&gt;
                        &lt;span&gt;0.0&lt;/span&gt;
                        &lt;span style=&#34;text-align: center; flex-grow: 1;&#34;&gt;FPR&lt;/span&gt;
                        &lt;span&gt;1.0&lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;/div&gt;
                
                &lt;!-- Compact Metrics Display --&gt;
                &lt;div class=&#34;roc2_metrics-display&#34; style=&#34;margin-top: 0; padding: 10px;&#34;&gt;
                    &lt;div class=&#34;roc2_metrics-grid&#34; style=&#34;grid-template-columns: 1fr 1fr; gap: 10px;&#34;&gt;
                        &lt;div class=&#34;roc2_metric-card&#34; style=&#34;padding: 8px;&#34;&gt;
                            &lt;div class=&#34;roc2_metric-name&#34; style=&#34;font-size: 20px; margin-bottom: 5px;text-align: center;&#34;&gt;TPR (True Positive Rate)&lt;/div&gt;
                            &lt;div class=&#34;roc2_metric-formula&#34; id=&#34;roc2_tprFormula&#34; style=&#34;min-height: 50px; font-size: 18px;&#34;&gt;Loading...&lt;/div&gt;
                            &lt;div class=&#34;roc2_metric-value&#34; id=&#34;roc2_tprValue&#34; style=&#34;margin-top: 5px; font-size: 22px;&#34;&gt;= 0.000&lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div class=&#34;roc2_metric-card&#34; style=&#34;padding: 8px;&#34;&gt;
                            &lt;div class=&#34;roc2_metric-name&#34; style=&#34;font-size: 20px; margin-bottom: 5px;text-align: center;&#34;&gt;FPR (False Positive Rate)&lt;/div&gt;
                            &lt;div class=&#34;roc2_metric-formula&#34; id=&#34;roc2_fprFormula&#34; style=&#34;min-height: 50px; font-size: 18px;&#34;&gt;Loading...&lt;/div&gt;
                            &lt;div class=&#34;roc2_metric-value&#34; id=&#34;roc2_fprValue&#34; style=&#34;margin-top: 5px; font-size: 22px;&#34;&gt;= 0.000&lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- Ensure KaTeX is loaded completely before page init --&gt;
    &lt;script&gt;
        // Wait for all resources to load, including KaTeX
        window.addEventListener(&#39;load&#39;, function() {
            // Initialize simulation
            roc2_init();
        });
        
        function roc2_init() {
            // DOM Elements
            const roc2_canvas = document.getElementById(&#39;roc2_canvas&#39;);
            const roc2_ctx = roc2_canvas.getContext(&#39;2d&#39;);
            const roc2_rocCanvas = document.getElementById(&#39;roc2_rocCanvas&#39;);
            const roc2_rocCtx = roc2_rocCanvas.getContext(&#39;2d&#39;);
            const roc2_circleSizeSlider = document.getElementById(&#39;roc2_circleSize&#39;);
            const roc2_circleSizeFill = document.getElementById(&#39;roc2_circleSizeFill&#39;);
            const roc2_sizeValue = document.getElementById(&#39;roc2_sizeValue&#39;);
        
            // Quadrant labels
            const roc2_quadrantLabels = [
                document.getElementById(&#39;roc2_quadrant0&#39;),
                document.getElementById(&#39;roc2_quadrant1&#39;),
                document.getElementById(&#39;roc2_quadrant2&#39;),
                document.getElementById(&#39;roc2_quadrant3&#39;)
            ];
            
            // Metric displays
            const roc2_tprFormula = document.getElementById(&#39;roc2_tprFormula&#39;);
            const roc2_tprValue = document.getElementById(&#39;roc2_tprValue&#39;);
            const roc2_fprFormula = document.getElementById(&#39;roc2_fprFormula&#39;);
            const roc2_fprValue = document.getElementById(&#39;roc2_fprValue&#39;);
            
            // Variables
            let roc2_isDragging = false;
            let roc2_truePositives = 0;
            let roc2_falsePositives = 0;
            let roc2_trueNegatives = 0;
            let roc2_falseNegatives = 0;
            let roc2_totalPoints = 0;
            let roc2_points = [];
            let roc2_rocPoints = [];
            let roc2_currentSize = 0; // Track current circle size
            
            // Circle properties
            let roc2_circleRadius;
            let roc2_centerX;
            let roc2_centerY;
            let roc2_circleCenter = { x: 0.65, y: 0.5 }; // Normalized position (0-1) - CHANGED X FROM 0.5 TO 0.65
            let roc2_circleSizePercent = 0; // Percentage of min dimension
            let roc2_dragStartPos = { x: 0, y: 0 };
            let roc2_dragStartCenter = { x: 0, y: 0 };
            
            // Update slider fill
            function roc2_updateSliderFill() {
                const percent = (roc2_circleSizeSlider.value - roc2_circleSizeSlider.min) / (roc2_circleSizeSlider.max - roc2_circleSizeSlider.min) * 100;
                roc2_circleSizeFill.style.width = percent + &#39;%&#39;;
            }
            
            // Initial slider fill update
            roc2_updateSliderFill();
            
            // Setup slider events for changing circle size only
            function roc2_setupSliderEvents() {
                // Update slider fill and add event listener
                roc2_updateSliderFill();
                
                roc2_circleSizeSlider.addEventListener(&#39;input&#39;, function() {
                    // Store previous and current size for ROC curve updating
                    const prevSize = roc2_circleSizePercent;
                    roc2_circleSizePercent = parseInt(this.value);
                    roc2_currentSize = roc2_circleSizePercent;
                    
                    roc2_updateSliderFill();
                    roc2_calculateDimensions();
                    roc2_redrawCanvas();
                    roc2_recalculateMetrics();
                    roc2_updateLabels();
                    
                    // Update ROC curve based on whether size increased or decreased
                    if (roc2_circleSizePercent &gt; prevSize) {
                        roc2_addROCPoint();
                    } else if (roc2_circleSizePercent &lt; prevSize) {
                        roc2_removeROCPointsAboveSize(roc2_circleSizePercent);
                    }
                    
                    roc2_drawROCCurve();
                });
            }
            
            // Resize canvas to fit container
            function roc2_resizeCanvas() {
                const container = roc2_canvas.parentElement;
                roc2_canvas.width = container.clientWidth;
                roc2_canvas.height = container.clientHeight;
                
                const rocContainer = roc2_rocCanvas.parentElement;
                roc2_rocCanvas.width = rocContainer.clientWidth;
                roc2_rocCanvas.height = rocContainer.clientHeight;
                
                roc2_calculateDimensions();
                roc2_redrawCanvas();
                roc2_drawROCCurve();
                roc2_updateLabels();
            }
            
            // Calculate circle dimensions based on canvas size and current settings
            function roc2_calculateDimensions() {
                // Fixed center position (prevent dragging)
                roc2_centerX = roc2_canvas.width * roc2_circleCenter.x;
                roc2_centerY = roc2_canvas.height * roc2_circleCenter.y;
                const minDimension = Math.min(roc2_canvas.width, roc2_canvas.height);
                roc2_circleRadius = minDimension * (roc2_circleSizePercent / 100);
            }
            
            // Generate points
            function roc2_generatePoints(count) {
                roc2_points = [];
                
                // Generate half the points on the left side and half on the right
                for (let i = 0; i &lt; count / 2; i++) {
                    // Left side point (Negatives)
                    roc2_points.push({
                        x: Math.random() * (roc2_canvas.width / 2 - 5),
                        y: Math.random() * roc2_canvas.height
                    });
                    
                    // Right side point (Positives)
                    roc2_points.push({
                        x: (roc2_canvas.width / 2 + 5) + Math.random() * (roc2_canvas.width / 2 - 10),
                        y: Math.random() * roc2_canvas.height
                    });
                }
                
                roc2_recalculateMetrics();
            }
            
            // Update the class metrics based on the points
            function roc2_recalculateMetrics() {
                // Reset counts
                roc2_truePositives = 0;
                roc2_falsePositives = 0;
                roc2_trueNegatives = 0;
                roc2_falseNegatives = 0;
                
                // Recalculate counts for each point
                roc2_points.forEach(point =&gt; {
                    const isRight = point.x &gt;= roc2_canvas.width / 2;
                    const isPredictedPositive = roc2_isInsideCircle(point.x, point.y);
                    
                    if (isRight &amp;&amp; isPredictedPositive) roc2_truePositives++;
                    else if (!isRight &amp;&amp; isPredictedPositive) roc2_falsePositives++;
                    else if (!isRight &amp;&amp; !isPredictedPositive) roc2_trueNegatives++;
                    else if (isRight &amp;&amp; !isPredictedPositive) roc2_falseNegatives++;
                });
                
                roc2_totalPoints = roc2_points.length;
                
                // Update the metric displays
                roc2_updateMetricDisplay();
            }
            
            // Update metric display
            function roc2_updateMetricDisplay() {
                // Calculate TPR and FPR
                const tpr = roc2_truePositives / (roc2_truePositives + roc2_falseNegatives) || 0;
                const fpr = roc2_falsePositives / (roc2_falsePositives + roc2_trueNegatives) || 0;
                
                // Update display values with equal sign
                roc2_tprValue.textContent = &#34;= &#34; + tpr.toFixed(3);
                roc2_fprValue.textContent = &#34;= &#34; + fpr.toFixed(3);
                
                // Properly format the equations for KaTeX
                const tprFormulaText = `\\frac{TP}{TP + FN} = \\frac{${roc2_truePositives}}{${roc2_truePositives} + ${roc2_falseNegatives}}`;
                const fprFormulaText = `\\frac{FP}{FP + TN} = \\frac{${roc2_falsePositives}}{${roc2_falsePositives} + ${roc2_trueNegatives}}`;
                
                // Set the text content for later rendering
                roc2_tprFormula.setAttribute(&#39;data-formula&#39;, tprFormulaText);
                roc2_fprFormula.setAttribute(&#39;data-formula&#39;, fprFormulaText);
                
                // Render with KaTeX
                roc2_renderFormulas();
            }
            
            // Properly format the equations for KaTeX with larger font
            function roc2_renderFormulas() {
                try {
                    if (typeof katex !== &#39;undefined&#39;) {
                        const tprFormulaText = roc2_tprFormula.getAttribute(&#39;data-formula&#39;);
                        const fprFormulaText = roc2_fprFormula.getAttribute(&#39;data-formula&#39;);
                        
                        katex.render(tprFormulaText, roc2_tprFormula, {
                            displayMode: true,
                            throwOnError: false,
                            fontSize: &#39;1.2em&#39; // Larger font size
                        });
                        
                        katex.render(fprFormulaText, roc2_fprFormula, {
                            displayMode: true,
                            throwOnError: false,
                            fontSize: &#39;1.2em&#39; // Larger font size
                        });
                    } else {
                        console.error(&#34;KaTeX not available for rendering&#34;);
                        // Fallback to plain text if rendering fails
                        roc2_tprFormula.textContent = roc2_tprFormula.getAttribute(&#39;data-formula&#39;);
                        roc2_fprFormula.textContent = roc2_fprFormula.getAttribute(&#39;data-formula&#39;);
                    }
                } catch (error) {
                    console.error(&#34;KaTeX rendering error:&#34;, error);
                }
            }
            
            // Draw all points
            function roc2_drawPoints() {
                roc2_points.forEach(point =&gt; {
                    const isRight = point.x &gt;= roc2_canvas.width / 2;
                    
                    // Choose color based on actual class (left/right side)
                    if (isRight) {
                        roc2_ctx.fillStyle = &#39;blue&#39;; // Actual Positive (right side)
                    } else {
                        roc2_ctx.fillStyle = &#39;red&#39;; // Actual Negative (left side)
                    }
                    
                    roc2_ctx.beginPath();
                    roc2_ctx.arc(point.x, point.y, 3, 0, Math.PI * 2);
                    roc2_ctx.fill();
                });
            }
            
            // Redraw canvas with all points and current circle position
            function roc2_redrawCanvas() {
                roc2_ctx.clearRect(0, 0, roc2_canvas.width, roc2_canvas.height);
                
                // Draw points
                roc2_drawPoints();
                
                // Draw dividing line
                roc2_ctx.beginPath();
                roc2_ctx.moveTo(roc2_canvas.width / 2, 0);
                roc2_ctx.lineTo(roc2_canvas.width / 2, roc2_canvas.height);
                roc2_ctx.strokeStyle = &#39;black&#39;;
                roc2_ctx.lineWidth = 2;
                roc2_ctx.stroke();
                
                // Draw circle
                roc2_ctx.beginPath();
                roc2_ctx.arc(roc2_centerX, roc2_centerY, roc2_circleRadius, 0, Math.PI * 2);
                roc2_ctx.fillStyle = &#39;rgba(0, 0, 255, 0.15)&#39;;
                roc2_ctx.fill();
                roc2_ctx.strokeStyle = &#39;black&#39;; // Changed to black for better visibility
                roc2_ctx.lineWidth = 3;
                roc2_ctx.stroke();
                
                // Draw border
                roc2_ctx.strokeStyle = &#39;#ddd&#39;;
                roc2_ctx.lineWidth = 1;
                roc2_ctx.strokeRect(0, 0, roc2_canvas.width, roc2_canvas.height);
            }
            
            // Draw the ROC curve
            function roc2_drawROCCurve() {
                roc2_rocCtx.clearRect(0, 0, roc2_rocCanvas.width, roc2_rocCanvas.height);
                
                            // Draw axes
            roc2_rocCtx.beginPath();
            // Y-axis (left)
            roc2_rocCtx.moveTo(0, roc2_rocCanvas.height);
            roc2_rocCtx.lineTo(0, 0);
            // X-axis (bottom)
            roc2_rocCtx.moveTo(0, roc2_rocCanvas.height);
            roc2_rocCtx.lineTo(roc2_rocCanvas.width, roc2_rocCanvas.height);
            roc2_rocCtx.stroke();

            // Y-axis label
            roc2_rocCtx.save();
            roc2_rocCtx.translate(20, roc2_rocCanvas.height/2); // Adjust left position
            roc2_rocCtx.rotate(-Math.PI/2);
            roc2_rocCtx.restore();

            // Y-ticks (only 0 and 1)
            [0, 1].forEach(t =&gt; {
                const y = roc2_rocCanvas.height - (t * roc2_rocCanvas.height);
                // Tick
                roc2_rocCtx.beginPath();
                roc2_rocCtx.moveTo(0, y);
                roc2_rocCtx.lineTo(5, y);
                roc2_rocCtx.stroke();
                // Label
                roc2_rocCtx.textAlign = &#34;right&#34;;
                roc2_rocCtx.fillText(t.toFixed(0), -8, y + 4);
            });

            // X-ticks (only 0 and 1)
            [0, 1].forEach(t =&gt; {
                const x = t * roc2_rocCanvas.width;
                // Tick
                roc2_rocCtx.beginPath();
                roc2_rocCtx.moveTo(x, roc2_rocCanvas.height);
                roc2_rocCtx.lineTo(x, roc2_rocCanvas.height - 5);
                roc2_rocCtx.stroke();
                // Label
                roc2_rocCtx.textAlign = &#34;center&#34;;
                roc2_rocCtx.fillText(t.toFixed(0), x, roc2_rocCanvas.height + 20);
            });

            // X-axis label
                // Draw reference line (random classifier)
                roc2_rocCtx.beginPath();
                roc2_rocCtx.moveTo(0, roc2_rocCanvas.height);
                roc2_rocCtx.lineTo(roc2_rocCanvas.width, 0);
                roc2_rocCtx.strokeStyle = &#39;gray&#39;;
                roc2_rocCtx.lineWidth = 1;
                roc2_rocCtx.setLineDash([5, 5]);
                roc2_rocCtx.stroke();
                roc2_rocCtx.setLineDash([]);
                
                // Draw ROC curve points if we have any
                if (roc2_rocPoints.length &gt; 0) {
                    // Only draw line if there are multiple points (after user has moved the slider)
                    if (roc2_rocPoints.length &gt; 1) {
                        // Draw the curve connecting the points
                        roc2_rocCtx.beginPath();
                        roc2_rocCtx.moveTo(0, roc2_rocCanvas.height); // Start at origin (0,1)
                        
                        // Sort points to ensure proper curve
                        const sortedPoints = [...roc2_rocPoints].sort((a, b) =&gt; a.fpr - b.fpr);
                        
                        sortedPoints.forEach(point =&gt; {
                            const x = point.fpr * roc2_rocCanvas.width;
                            const y = roc2_rocCanvas.height - (point.tpr * roc2_rocCanvas.height);
                            roc2_rocCtx.lineTo(x, y);
                        });
                        
                        roc2_rocCtx.strokeStyle = &#39;gray&#39;; // Changed from blue to gray
                        roc2_rocCtx.lineWidth = 2;
                        roc2_rocCtx.stroke();
                        
                        // Draw points
                        sortedPoints.forEach(point =&gt; {
                            const x = point.fpr * roc2_rocCanvas.width;
                            const y = roc2_rocCanvas.height - (point.tpr * roc2_rocCanvas.height);
                            
                            roc2_rocCtx.beginPath();
                            roc2_rocCtx.arc(x, y, 3, 0, Math.PI * 2);
                            roc2_rocCtx.fillStyle = &#39;gray&#39;; // Changed from blue to gray
                            roc2_rocCtx.fill();
                        });
                    }
                    
                    // Draw current operating point
                    const tpr = roc2_truePositives / (roc2_truePositives + roc2_falseNegatives) || 0;
                    const fpr = roc2_falsePositives / (roc2_falsePositives + roc2_trueNegatives) || 0;
                    
                    const currentX = fpr * roc2_rocCanvas.width;
                    const currentY = roc2_rocCanvas.height - (tpr * roc2_rocCanvas.height);
                    
                    roc2_rocCtx.beginPath();
                    roc2_rocCtx.arc(currentX, currentY, 6, 0, Math.PI * 2);
                    roc2_rocCtx.fillStyle = &#39;gray&#39;; // Changed from red to gray
                    roc2_rocCtx.fill();
                    roc2_rocCtx.strokeStyle = &#39;black&#39;;
                    roc2_rocCtx.lineWidth = 1;
                    roc2_rocCtx.stroke();
                }
            }
            
            // Add a new ROC point for current size
            function roc2_addROCPoint() {
                const tpr = roc2_truePositives / (roc2_truePositives + roc2_falseNegatives) || 0;
                const fpr = roc2_falsePositives / (roc2_falsePositives + roc2_trueNegatives) || 0;
                
                // Check if we already have a point with the exact same size
                const existingPoint = roc2_rocPoints.find(p =&gt; p.size === roc2_circleSizePercent);
                
                if (existingPoint) {
                    // Update existing point
                    existingPoint.tpr = tpr;
                    existingPoint.fpr = fpr;
                } else {
                    // Add new point
                    roc2_rocPoints.push({
                        tpr,
                        fpr,
                        size: roc2_circleSizePercent
                    });
                }
                
                // Sort points by size
                roc2_rocPoints.sort((a, b) =&gt; a.size - b.size);
            }
            
            // Remove ROC points above a certain size
            function roc2_removeROCPointsAboveSize(size) {
                roc2_rocPoints = roc2_rocPoints.filter(point =&gt; point.size &lt;= size);
            }
            
            // Update quadrant labels dynamically based on circle position
            function roc2_updateLabels() {
                // Get vertical dividing line position
                const midX = roc2_canvas.width / 2;
                
                // Check if circle overlaps with left or right half
                const leftEdge = roc2_centerX - roc2_circleRadius;
                const rightEdge = roc2_centerX + roc2_circleRadius;
                const topEdge = roc2_centerY - roc2_circleRadius;
                const bottomEdge = roc2_centerY + roc2_circleRadius;
                const overlapsLeft = leftEdge &lt; midX;
                const overlapsRight = rightEdge &gt; midX;
                
                // Padding to ensure labels stay within canvas
                const padding = 20;
                const labelWidth = 70;
                const labelHeight = 40;
                
                // 1. False Positives (inside circle, left side)
                if (overlapsLeft &amp;&amp; roc2_falsePositives &gt; 0) {
                    const fpX = Math.max(padding, Math.min(midX - labelWidth - padding, roc2_centerX - roc2_circleRadius / 2));
                    const fpY = roc2_centerY;
                    roc2_quadrantLabels[0].style.display = &#39;block&#39;;
                    roc2_quadrantLabels[0].style.left = fpX + &#39;px&#39;;
                    roc2_quadrantLabels[0].style.top = fpY + &#39;px&#39;;
                } else {
                    roc2_quadrantLabels[0].style.display = &#39;none&#39;;
                }
                
                // 2. True Positives (inside circle, right side)
                if (overlapsRight &amp;&amp; roc2_truePositives &gt; 0) {
                    const tpX = Math.min(roc2_canvas.width - labelWidth - padding, Math.max(midX + padding, roc2_centerX + roc2_circleRadius / 3));
                    const tpY = roc2_centerY;
                    roc2_quadrantLabels[1].style.display = &#39;block&#39;;
                    roc2_quadrantLabels[1].style.left = tpX + &#39;px&#39;;
                    roc2_quadrantLabels[1].style.top = tpY + &#39;px&#39;;
                } else {
                    roc2_quadrantLabels[1].style.display = &#39;none&#39;;
                }
                
                // 3. True Negatives (outside circle, left side)
                // Only show if there&#39;s sufficient space between the circle and the edge
                const safeDistanceFromCircle = 5; // Minimum distance needed
                const distanceLeftEdge = leftEdge;
                
                if (roc2_trueNegatives &gt; 0 &amp;&amp; distanceLeftEdge &gt; safeDistanceFromCircle) {
                    const tnX = padding;
                    const tnY = padding;
                    roc2_quadrantLabels[2].style.display = &#39;block&#39;;
                    roc2_quadrantLabels[2].style.left = tnX + &#39;px&#39;;
                    roc2_quadrantLabels[2].style.top = tnY + &#39;px&#39;;
                } else {
                    // Hide when circle gets too close
                    roc2_quadrantLabels[2].style.display = &#39;none&#39;;
                }
                
                // 4. False Negatives (outside circle, right side)
                // Only show if there&#39;s sufficient space between the circle and right edge
                const distanceRightEdge = roc2_canvas.width - rightEdge;
                
                if (roc2_falseNegatives &gt; 0 &amp;&amp; distanceRightEdge &gt; safeDistanceFromCircle) {
                    const fnX = roc2_canvas.width - labelWidth - padding;
                    const fnY = padding;
                    roc2_quadrantLabels[3].style.display = &#39;block&#39;;
                    roc2_quadrantLabels[3].style.left = fnX + &#39;px&#39;;
                    roc2_quadrantLabels[3].style.top = fnY + &#39;px&#39;;
                } else {
                    // Hide when circle gets too close
                    roc2_quadrantLabels[3].style.display = &#39;none&#39;;
                }
            }
            
            // Check if a point is inside the circle
            function roc2_isInsideCircle(x, y) {
                const dx = x - roc2_centerX;
                const dy = y - roc2_centerY;
                return (dx * dx + dy * dy) &lt;= (roc2_circleRadius * roc2_circleRadius);
            }
            
            // Calculate distance from a point to the circle
            function roc2_distanceToCircle(x, y) {
                const dx = x - roc2_centerX;
                const dy = y - roc2_centerY;
                const distance = Math.sqrt(dx * dx + dy * dy);
                return Math.max(0, distance - roc2_circleRadius);
            }
            
            // Initialize the first ROC point for the starting size
            function roc2_initROCPoint() {
                roc2_rocPoints = [];
                roc2_addROCPoint();
            }
            
            // Mouse events for dragging the circle
            function roc2_setupDragEvents() {
                roc2_canvas.addEventListener(&#39;mousedown&#39;, function(e) {
                    const rect = roc2_canvas.getBoundingClientRect();
                    const mouseX = e.clientX - rect.left;
                    const mouseY = e.clientY - rect.top;
                    
                    // Check if click is near the circle center
                    const dx = mouseX - roc2_centerX;
                    const dy = mouseY - roc2_centerY;
                    const distance = Math.sqrt(dx * dx + dy * dy);
                    
                    if (distance &lt;= roc2_circleRadius) {
                        roc2_isDragging = true;
                        roc2_dragStartPos = { x: mouseX, y: mouseY };
                        roc2_dragStartCenter = { x: roc2_circleCenter.x, y: roc2_circleCenter.y };
                        roc2_canvas.style.cursor = &#39;grabbing&#39;;
                    }
                });
                
                roc2_canvas.addEventListener(&#39;mousemove&#39;, function(e) {
                    if (!roc2_isDragging) return;
                    
                    const rect = roc2_canvas.getBoundingClientRect();
                    const mouseX = e.clientX - rect.left;
                    const mouseY = e.clientY - rect.top;
                    
                    // Calculate new center position
                    const dx = (mouseX - roc2_dragStartPos.x) / roc2_canvas.width;
                    const dy = (mouseY - roc2_dragStartPos.y) / roc2_canvas.height;
                    
                    roc2_circleCenter.x = Math.max(0.1, Math.min(0.9, roc2_dragStartCenter.x + dx));
                    roc2_circleCenter.y = Math.max(0.1, Math.min(0.9, roc2_dragStartCenter.y + dy));
                    
                    roc2_calculateDimensions();
                    roc2_redrawCanvas();
                    roc2_recalculateMetrics();
                    roc2_updateLabels();
                    roc2_updateROCCurve();
                });
                
                roc2_canvas.addEventListener(&#39;mouseup&#39;, function() {
                    if (roc2_isDragging) {
                        roc2_isDragging = false;
                        roc2_canvas.style.cursor = &#39;move&#39;;
                    }
                });
                
                roc2_canvas.addEventListener(&#39;mouseleave&#39;, function() {
                    if (roc2_isDragging) {
                        roc2_isDragging = false;
                        roc2_canvas.style.cursor = &#39;move&#39;;
                    }
                });
                
                // Set initial cursor
                roc2_canvas.style.cursor = &#39;move&#39;;
            }
            
            // Touch events for mobile
            function roc2_setupTouchEvents() {
                roc2_canvas.addEventListener(&#39;touchstart&#39;, function(e) {
                    e.preventDefault();
                    const rect = roc2_canvas.getBoundingClientRect();
                    const touch = e.touches[0];
                    const touchX = touch.clientX - rect.left;
                    const touchY = touch.clientY - rect.top;
                    
                    // Check if touch is near the circle center
                    const dx = touchX - roc2_centerX;
                    const dy = touchY - roc2_centerY;
                    const distance = Math.sqrt(dx * dx + dy * dy);
                    
                    if (distance &lt;= roc2_circleRadius) {
                        roc2_isDragging = true;
                        roc2_dragStartPos = { x: touchX, y: touchY };
                        roc2_dragStartCenter = { x: roc2_circleCenter.x, y: roc2_circleCenter.y };
                    }
                });
                
                roc2_canvas.addEventListener(&#39;touchmove&#39;, function(e) {
                    if (!roc2_isDragging) return;
                    e.preventDefault();
                    
                    const rect = roc2_canvas.getBoundingClientRect();
                    const touch = e.touches[0];
                    const touchX = touch.clientX - rect.left;
                    const touchY = touch.clientY - rect.top;
                    
                    // Calculate new center position
                    const dx = (touchX - roc2_dragStartPos.x) / roc2_canvas.width;
                    const dy = (touchY - roc2_dragStartPos.y) / roc2_canvas.height;
                    
                    roc2_circleCenter.x = Math.max(0.1, Math.min(0.9, roc2_dragStartCenter.x + dx));
                    roc2_circleCenter.y = Math.max(0.1, Math.min(0.9, roc2_dragStartCenter.y + dy));
                    
                    roc2_calculateDimensions();
                    roc2_redrawCanvas();
                    roc2_recalculateMetrics();
                    roc2_updateLabels();
                    roc2_updateROCCurve();
                });
                
                roc2_canvas.addEventListener(&#39;touchend&#39;, function(e) {
                    e.preventDefault();
                    roc2_isDragging = false;
                });
            }
            
            // Set canvas dimensions
            roc2_resizeCanvas();
            
            // Setup events
            roc2_setupSliderEvents();
            roc2_setupTouchEvents(); // Simple touch events for slider only
            
            // Generate many more points
            roc2_generatePoints(10000);
            
            // Initial calculations and rendering
            roc2_calculateDimensions();
            roc2_recalculateMetrics();
            roc2_redrawCanvas();
            roc2_updateLabels();
            
            // Initialize the ROC point for current size
            roc2_initROCPoint();
            
            // Draw ROC curve
            roc2_drawROCCurve();
            
            // Render formulas
            roc2_renderFormulas();
            
            // Handle window resize
            window.addEventListener(&#39;resize&#39;, function() {
                roc2_resizeCanvas();
                roc2_redrawCanvas();
                roc2_drawROCCurve();
                roc2_updateLabels();
            });
        }
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;br&gt;
&lt;p&gt;Como observamos, após certa medida, o círculo começa a captar parte do lado esquerdo, gerando falsos positivos. Quando plotamos a curva ROC nesse caso, obtemos uma curva que se arqueia para o canto superior esquerdo do gráfico&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Vale a pena destacar que a curva ROC pode ser enganosa para conjuntos de dados muito desbalanceados. Como um último exemplo, vamos observar o que acontece com a curva nesse cenário.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;dados-desbalanceados&#34;&gt;Dados Desbalanceados&lt;/h2&gt;
&lt;p&gt;Quando os dados são altamente desbalanceados (por exemplo, fraude bancária onde menos de 0,1% das transações são fraudulentas), a curva ROC pode mascarar problemas de desempenho. Na curva ROC, os falsos positivos são medidos em relação ao número total de negativos (FPR = FP/N). Com muitos exemplos negativos, cada falso positivo tem um impacto pequeno na taxa de falsos positivos. Isso pode fazer com que um modelo pareça melhor do que realmente é. Para dados desbalanceados, considere usar a curva &lt;strong&gt;Precisão-Recall (PR)&lt;/strong&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;A simulação abaixo mostra na prática a diferença entre as curvas ROC e PR. É possível alterar tanto o tamanho do círculo quanto a porcentagem da classe positiva no conjunto de dados. Varie primeiramente o tamanho do círculo e veja as duas curvas surgindo.&lt;/p&gt;
&lt;br&gt;

&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;
&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;style&gt;
        
        .dual_simulation-container {
            max-width: 1200px;
            margin: 0 auto;
            /* You can adjust this min-height to increase simulation height */
            min-height: 600px;
        }
        
        .dual_dataset-info {
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 10px;
            margin-bottom: 15px;
            text-align: center;
            font-weight: bold;
        }
        
        .dual_flex-container {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            gap: 3%;
        }
        
        .dual_side {
            flex: 1;
            min-width: 300px;
            display: flex;
            flex-direction: column;
        }
        
        .dual_slider-container {
            display: flex;
            align-items: center;
            gap: 10px;
            flex-wrap: wrap;
            margin-bottom: 10px;
            position: relative;
            width: 100%;
            margin-bottom: 20px;
        }
        
        .dual_slider-container label {
            font-weight: bold;
            min-width: 120px;
            color: #333;
            margin-bottom: 1px;
        }
        
        .dual_range-slider {
            flex: 1;
            position: relative;
        }
        
        .dual_range-slider-track {
            height: 8px;
            width: 100%;
            background-color: #ddd;
            border-radius: 4px;
            position: relative;
        }
        
        .dual_range-slider-fill {
            height: 100%;
            background-color: #3b82f6;
            border-radius: 4px;
            position: absolute;
            top: 0;
            left: 0;
            pointer-events: none;
            transition: width 0.1s ease;
        }
        
        input[type=&#34;range&#34;] {
            -webkit-appearance: none;
            appearance: none;
            width: 100%;
            height: 8px;
            background: transparent;
            position: absolute;
            top: 0;
            left: 0;
            margin: 0;
            z-index: 10;
        }

        input[type=&#34;range&#34;]::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 22px;
            height: 22px;
            background: #3b82f6;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            transition: all 0.2s ease;
        }

        input[type=&#34;range&#34;]::-webkit-slider-thumb:hover {
            background: #2563eb;
            transform: scale(1.1);
        }

        input[type=&#34;range&#34;]::-moz-range-thumb {
            width: 22px;
            height: 22px;
            background: #3b82f6;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            transition: all 0.2s ease;
        }

        input[type=&#34;range&#34;]::-moz-range-thumb:hover {
            background: #2563eb;
            transform: scale(1.1);
        }
        
        .dual_value-display {
            min-width: 60px;
            text-align: center;
            font-weight: bold;
            color: #3b82f6;
            background-color: #f0f4ff;
            padding: 4px 8px;
            border-radius: 12px;
            border: 1px solid #d1d5db;
            margin-left: 10px;
        }
        
        .dual_canvas-container {
            position: relative;
            width: 100%;
            padding-bottom: 100%;
            border: 1px solid #ddd;
            overflow: hidden;
            background-color: white;
        }

        .dual_curves-area {
            display: flex;
            flex-direction: column;
        }
        
        .dual_curve-container {
            position: relative;
            width: 100%;
            padding-bottom: 40%;
            border: 1px solid #ddd;
            background-color: white;
        }

        #dual_canvas, #dual_rocCanvas, #dual_prCanvas {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
        
        .dual_quadrant-label {
            position: absolute;
            white-space: nowrap;
            font-size: 17px;
            text-align: center;
            color: #fff;
            background-color: rgba(0, 0, 0, 1);
            padding: 1px 5px;
            border-radius: 10px;
            z-index: 10;
            pointer-events: none;
            transition: all 0.3s ease;
        }
        
        .dual_curve-title {
            font-weight: bold;
            text-align: center;
            margin-bottom: 5px;
        }
        
        .dual_instructions {
            background-color: #e9f5ff;
            border: 1px solid #b8daff;
            border-radius: 5px;
            padding: 10px;
            margin-top: 15px;
            font-size: 14px;
        }
        
        .dual_axis-container {
            display: flex;
            align-items: stretch;
            position: relative;
            margin-bottom: 5px;
        }
        
        .dual_y-axis-label {
            width: 30px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            font-weight: bold;
            font-size: 14px;
            margin-right: 5px;
            text-align: center;
        }
        
        .dual_y-axis-label span {
            transform: rotate(-90deg);
            white-space: nowrap;
            display: block;
            width: 40px;
            font-size: 18px;
            position: absolute;
            left: -10px;
        }
        
        .dual_graph-container {
            flex-grow: 1;
            position: relative;
        }
        
        .dual_tick-label {
            position: absolute;
            font-size: 18px;
            font-weight: bold;
        }
        
        @media (max-width: 768px) {
            .dual_flex-container {
                flex-direction: column;
            }
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class=&#34;dual_simulation-container&#34;&gt;
        &lt;div class=&#34;dual_flex-container&#34;&gt;
            &lt;!-- Left Side - Visualization --&gt;
            &lt;div class=&#34;dual_side&#34;&gt;
                &lt;!-- Slider for Positive Class Ratio --&gt;
                &lt;div class=&#34;dual_slider-container&#34;&gt;
                    &lt;label for=&#34;dual_positiveRatio&#34;&gt;Classe positiva:&lt;/label&gt;
                    &lt;div class=&#34;dual_range-slider&#34;&gt;
                        &lt;div class=&#34;dual_range-slider-track&#34;&gt;
                            &lt;div class=&#34;dual_range-slider-fill&#34; id=&#34;dual_positiveRatioFill&#34;&gt;&lt;/div&gt;
                        &lt;/div&gt;
                        &lt;input type=&#34;range&#34; id=&#34;dual_positiveRatio&#34; min=&#34;1&#34; max=&#34;50&#34; value=&#34;1&#34; step=&#34;1&#34;&gt;
                    &lt;/div&gt;
                    &lt;div class=&#34;dual_value-display&#34; id=&#34;dual_positiveRatioValue&#34;&gt;1%&lt;/div&gt;
                &lt;/div&gt;
                
                &lt;!-- Visualization Area --&gt;
                &lt;div class=&#34;dual_canvas-container&#34;&gt;
                    &lt;canvas id=&#34;dual_canvas&#34;&gt;&lt;/canvas&gt;
                    &lt;div id=&#34;dual_quadrant0&#34; class=&#34;dual_quadrant-label&#34;&gt;False&lt;br&gt;Positives&lt;/div&gt;
                    &lt;div id=&#34;dual_quadrant1&#34; class=&#34;dual_quadrant-label&#34;&gt;True&lt;br&gt;Positives&lt;/div&gt;
                    &lt;div id=&#34;dual_quadrant2&#34; class=&#34;dual_quadrant-label&#34;&gt;True&lt;br&gt;Negatives&lt;/div&gt;
                    &lt;div id=&#34;dual_quadrant3&#34; class=&#34;dual_quadrant-label&#34;&gt;False&lt;br&gt;Negatives&lt;/div&gt;
                &lt;/div&gt;
                
                &lt;div style=&#34;display: flex; justify-content: space-between; width: 100%; font-weight: bold; margin-top: 5px;&#34;&gt;
                    &lt;span id=&#34;dual_negativeLabel&#34;&gt;Negatives (99%)&lt;/span&gt;
                    &lt;span id=&#34;dual_positiveLabel&#34;&gt;Positives (1%)&lt;/span&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            
            &lt;!-- Right side - ROC and PR Curves --&gt;
            &lt;div class=&#34;dual_side&#34;&gt;
                &lt;!-- Slider for Circle Size --&gt;
                &lt;div class=&#34;dual_slider-container&#34;&gt;
                    &lt;label for=&#34;dual_circleSize&#34;&gt;Tamanho do círculo&lt;/label&gt;
                    &lt;div class=&#34;dual_range-slider&#34;&gt;
                        &lt;div class=&#34;dual_range-slider-track&#34;&gt;
                            &lt;div class=&#34;dual_range-slider-fill&#34; id=&#34;dual_circleSizeFill&#34;&gt;&lt;/div&gt;
                        &lt;/div&gt;
                        &lt;input type=&#34;range&#34; id=&#34;dual_circleSize&#34; min=&#34;0&#34; max=&#34;100&#34; value=&#34;0&#34; step=&#34;1&#34;&gt;
                    &lt;/div&gt;
                    &lt;div class=&#34;dual_value-display&#34; id=&#34;dual_circleSizeValue&#34;&gt;0&lt;/div&gt;
                &lt;/div&gt;
                
                &lt;!-- Curves Area --&gt;
                &lt;div class=&#34;dual_curves-area&#34;&gt;
                    &lt;!-- ROC Curve --&gt;
                    &lt;div&gt;
                        &lt;div class=&#34;dual_curve-title&#34;&gt;ROC Curve&lt;/div&gt;
                        &lt;div class=&#34;dual_axis-container&#34;&gt;
                            &lt;div class=&#34;dual_y-axis-label&#34;&gt;
                                &lt;span&gt;TPR&lt;/span&gt;
                            &lt;/div&gt;
                            &lt;div class=&#34;dual_graph-container&#34;&gt;
                                &lt;div class=&#34;dual_curve-container&#34;&gt;
                                    &lt;canvas id=&#34;dual_rocCanvas&#34;&gt;&lt;/canvas&gt;
                                    &lt;!-- Fixed tick labels positioned over canvas --&gt;
                                    &lt;div class=&#34;dual_tick-label&#34; style=&#34;left: -30px; top: 0;&#34;&gt;1.0&lt;/div&gt;
                                    &lt;div class=&#34;dual_tick-label&#34; style=&#34;bottom: -30px; left: 0;&#34;&gt;0.0&lt;/div&gt;
                                    &lt;div class=&#34;dual_tick-label&#34; style=&#34;bottom: -30px; right: 0;&#34;&gt;1.0&lt;/div&gt;
                                &lt;/div&gt;
                                
                                &lt;!-- X-axis label --&gt;
                                &lt;div style=&#34;text-align: center; font-weight: bold; margin: 20px 0 10px 0;&#34;&gt;
                                    FPR
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                    
                    &lt;!-- PR Curve --&gt;
                    &lt;div&gt;
                        &lt;div class=&#34;dual_curve-title&#34;&gt;Precision-Recall Curve&lt;/div&gt;
                        &lt;div class=&#34;dual_axis-container&#34;&gt;
                            &lt;div class=&#34;dual_y-axis-label&#34;&gt;
                                &lt;span&gt;Precision&lt;/span&gt;
                            &lt;/div&gt;
                            &lt;div class=&#34;dual_graph-container&#34;&gt;
                                &lt;div class=&#34;dual_curve-container&#34;&gt;
                                    &lt;canvas id=&#34;dual_prCanvas&#34;&gt;&lt;/canvas&gt;
                                    &lt;!-- Fixed tick labels positioned over canvas --&gt;
                                    &lt;div class=&#34;dual_tick-label&#34; style=&#34;left: -30px; top: 0;&#34;&gt;1.0&lt;/div&gt;
                                    &lt;div class=&#34;dual_tick-label&#34; style=&#34;bottom: -30px; left: 0;&#34;&gt;0.0&lt;/div&gt;
                                    &lt;div class=&#34;dual_tick-label&#34; style=&#34;bottom: -30px; right: 0;&#34;&gt;1.0&lt;/div&gt;
                                &lt;/div&gt;
                                
                                &lt;!-- X-axis label --&gt;
                                &lt;div style=&#34;text-align: center; font-weight: bold; margin: 20px 0 10px 0;&#34;&gt;
                                    Recall
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
        
    &lt;script&gt;
        // Wait for all resources to load
        window.addEventListener(&#39;load&#39;, function() {
            // Initialize simulation
            dual_init();
        });
        
        function dual_init() {
            // DOM Elements
            const dual_canvas = document.getElementById(&#39;dual_canvas&#39;);
            const dual_ctx = dual_canvas.getContext(&#39;2d&#39;);
            const dual_rocCanvas = document.getElementById(&#39;dual_rocCanvas&#39;);
            const dual_rocCtx = dual_rocCanvas.getContext(&#39;2d&#39;);
            const dual_prCanvas = document.getElementById(&#39;dual_prCanvas&#39;);
            const dual_prCtx = dual_prCanvas.getContext(&#39;2d&#39;);
            const dual_circleSizeSlider = document.getElementById(&#39;dual_circleSize&#39;);
            const dual_circleSizeFill = document.getElementById(&#39;dual_circleSizeFill&#39;);
            const dual_circleSizeValue = document.getElementById(&#39;dual_circleSizeValue&#39;);
            const dual_positiveRatioSlider = document.getElementById(&#39;dual_positiveRatio&#39;);
            const dual_positiveRatioFill = document.getElementById(&#39;dual_positiveRatioFill&#39;);
            const dual_positiveRatioValue = document.getElementById(&#39;dual_positiveRatioValue&#39;);
            const dual_positiveLabel = document.getElementById(&#39;dual_positiveLabel&#39;);
            const dual_negativeLabel = document.getElementById(&#39;dual_negativeLabel&#39;);
        
            // Quadrant labels
            const dual_quadrantLabels = [
                document.getElementById(&#39;dual_quadrant0&#39;),
                document.getElementById(&#39;dual_quadrant1&#39;),
                document.getElementById(&#39;dual_quadrant2&#39;),
                document.getElementById(&#39;dual_quadrant3&#39;)
            ];
            
            // Variables
            let dual_truePositives = 0;
            let dual_falsePositives = 0;
            let dual_trueNegatives = 0;
            let dual_falseNegatives = 0;
            let dual_totalPoints = 0;
            let dual_points = [];
            let dual_rocPoints = [];
            let dual_prPoints = [];
            let dual_currentSize = 0; // Track current circle size
            let dual_positiveClassRatio = 0.01; // Starting point: 1%
            
            // Set extra space above y=1 for visibility (expressed as a fraction of canvas height)
            const dual_extraSpace = 0.05; // 5% extra space above y=1.0
            
            // Circle properties - fixed center at 0.65, 0.5
            let dual_circleRadius;
            let dual_centerX;
            let dual_centerY;
            let dual_circleCenter = { x: 0.65, y: 0.5 }; // Fixed position
            let dual_circleSizePercent = 0; // Percentage of min dimension
            
            // Update positive ratio slider fill and label
            function dual_updatePositiveRatioSlider() {
                const percent = (dual_positiveRatioSlider.value - dual_positiveRatioSlider.min) / 
                                (dual_positiveRatioSlider.max - dual_positiveRatioSlider.min) * 100;
                dual_positiveRatioFill.style.width = percent + &#39;%&#39;;
                
                // Update the display value
                const ratioValue = parseInt(dual_positiveRatioSlider.value);
                dual_positiveRatioValue.textContent = ratioValue + &#39;%&#39;;
                
                // Convert to decimal
                dual_positiveClassRatio = ratioValue / 100;
                
                // Update dataset info text and labels
                dual_positiveLabel.textContent = `Positives (${ratioValue}%)`;
                dual_negativeLabel.textContent = `Negatives (${100-ratioValue}%)`;
            }
            
            // Update circle size slider fill and value
            function dual_updateCircleSizeSlider() {
                const percent = (dual_circleSizeSlider.value - dual_circleSizeSlider.min) / 
                               (dual_circleSizeSlider.max - dual_circleSizeSlider.min) * 100;
                dual_circleSizeFill.style.width = percent;
                dual_circleSizeValue.textContent = dual_circleSizeSlider.value;
            }
            
            // Initial slider fill updates
            dual_updateCircleSizeSlider();
            dual_updatePositiveRatioSlider();
            
            // Setup slider events
            function dual_setupSliderEvents() {
                // Circle size slider
                dual_circleSizeSlider.addEventListener(&#39;input&#39;, function() {
                    // Store previous and current size for curve updating
                    const prevSize = dual_circleSizePercent;
                    dual_circleSizePercent = parseInt(this.value);
                    dual_currentSize = dual_circleSizePercent;
                    
                    dual_updateCircleSizeSlider();
                    dual_calculateDimensions();
                    dual_redrawCanvas();
                    dual_recalculateMetrics();
                    dual_updateQuadrantLabels();
                    
                    // Update curve points based on whether size increased or decreased
                    if (dual_circleSizePercent &gt; prevSize) {
                        dual_addCurvePoints();
                    } else if (dual_circleSizePercent &lt; prevSize) {
                        dual_removeCurvePointsAboveSize(dual_circleSizePercent);
                    }
                    
                    dual_drawROCCurve();
                    dual_drawPRCurve();
                });
                
                // Positive class ratio slider
                dual_positiveRatioSlider.addEventListener(&#39;input&#39;, function() {
                    dual_updatePositiveRatioSlider();
                    
                    // Clear previous points and regenerate with new ratio
                    dual_generatePoints(10000);
                    
                    // Reset curves for the new distribution
                    dual_rocPoints = [];
                    dual_prPoints = [];
                    dual_addCurvePoints();
                    
                    // Redraw everything
                    dual_redrawCanvas();
                    dual_drawROCCurve();
                    dual_drawPRCurve();
                    dual_updateQuadrantLabels();
                });
            }
            
            // Resize canvas to fit container
            function dual_resizeCanvas() {
                const container = dual_canvas.parentElement;
                dual_canvas.width = container.clientWidth;
                dual_canvas.height = container.clientHeight;
                
                const rocContainer = dual_rocCanvas.parentElement;
                dual_rocCanvas.width = rocContainer.clientWidth;
                dual_rocCanvas.height = rocContainer.clientHeight;
                
                const prContainer = dual_prCanvas.parentElement;
                dual_prCanvas.width = prContainer.clientWidth;
                dual_prCanvas.height = prContainer.clientHeight;
                
                dual_calculateDimensions();
                dual_redrawCanvas();
                dual_drawROCCurve();
                dual_drawPRCurve();
                dual_updateQuadrantLabels();
            }
            
            // Calculate circle dimensions based on canvas size and current settings
            function dual_calculateDimensions() {
                // Fixed center position (no dragging)
                dual_centerX = dual_canvas.width * dual_circleCenter.x;
                dual_centerY = dual_canvas.height * dual_circleCenter.y;
                const minDimension = Math.min(dual_canvas.width, dual_canvas.height);
                dual_circleRadius = minDimension * (dual_circleSizePercent / 100);
            }
            
            // Generate points with adjustable positive class ratio
            function dual_generatePoints(count) {
                dual_points = [];
                
                // Calculate number of points for each class
                const positiveCount = Math.round(count * dual_positiveClassRatio);
                const negativeCount = count - positiveCount;
                
                // Generate negative points (left side)
                for (let i = 0; i &lt; negativeCount; i++) {
                    dual_points.push({
                        x: Math.random() * (dual_canvas.width / 2 - 5),
                        y: Math.random() * dual_canvas.height
                    });
                }
                
                // Generate positive points (right side)
                for (let i = 0; i &lt; positiveCount; i++) {
                    dual_points.push({
                        x: (dual_canvas.width / 2 + 5) + Math.random() * (dual_canvas.width / 2 - 10),
                        y: Math.random() * dual_canvas.height
                    });
                }
                
                dual_recalculateMetrics();
            }
            
            // Update the class metrics based on the points
            function dual_recalculateMetrics() {
                // Reset counts
                dual_truePositives = 0;
                dual_falsePositives = 0;
                dual_trueNegatives = 0;
                dual_falseNegatives = 0;
                
                // Recalculate counts for each point
                dual_points.forEach(point =&gt; {
                    const isRight = point.x &gt;= dual_canvas.width / 2;
                    const isPredictedPositive = dual_isInsideCircle(point.x, point.y);
                    
                    if (isRight &amp;&amp; isPredictedPositive) dual_truePositives++;
                    else if (!isRight &amp;&amp; isPredictedPositive) dual_falsePositives++;
                    else if (!isRight &amp;&amp; !isPredictedPositive) dual_trueNegatives++;
                    else if (isRight &amp;&amp; !isPredictedPositive) dual_falseNegatives++;
                });
                
                dual_totalPoints = dual_points.length;
            }
            
            // Draw all points
            function dual_drawPoints() {
                dual_points.forEach(point =&gt; {
                    const isRight = point.x &gt;= dual_canvas.width / 2;
                    
                    // Choose color based on actual class (left/right side)
                    if (isRight) {
                        dual_ctx.fillStyle = &#39;blue&#39;; // Actual Positive (right side)
                    } else {
                        dual_ctx.fillStyle = &#39;red&#39;; // Actual Negative (left side)
                    }
                    
                    dual_ctx.beginPath();
                    dual_ctx.arc(point.x, point.y, 3, 0, Math.PI * 2);
                    dual_ctx.fill();
                });
            }
            
            // Redraw canvas with all points and current circle position
            function dual_redrawCanvas() {
                dual_ctx.clearRect(0, 0, dual_canvas.width, dual_canvas.height);
                
                // Draw points
                dual_drawPoints();
                
                // Draw dividing line
                dual_ctx.beginPath();
                dual_ctx.moveTo(dual_canvas.width / 2, 0);
                dual_ctx.lineTo(dual_canvas.width / 2, dual_canvas.height);
                dual_ctx.strokeStyle = &#39;black&#39;;
                dual_ctx.lineWidth = 2;
                dual_ctx.stroke();
                
                // Draw circle
                dual_ctx.beginPath();
                dual_ctx.arc(dual_centerX, dual_centerY, dual_circleRadius, 0, Math.PI * 2);
                dual_ctx.fillStyle = &#39;rgba(0, 0, 255, 0.15)&#39;;
                dual_ctx.fill();
                dual_ctx.strokeStyle = &#39;black&#39;;
                dual_ctx.lineWidth = 3;
                dual_ctx.stroke();
                
                // Draw border
                dual_ctx.strokeStyle = &#39;#ddd&#39;;
                dual_ctx.lineWidth = 1;
                dual_ctx.strokeRect(0, 0, dual_canvas.width, dual_canvas.height);
            }
            
            // Draw the ROC curve with corrected y-coordinate calculation
            function dual_drawROCCurve() {
                dual_rocCtx.clearRect(0, 0, dual_rocCanvas.width, dual_rocCanvas.height);
                
                // Calculate the actual data area height (reduced to make room for the extra space)
                const dataAreaHeight = dual_rocCanvas.height / (1 + dual_extraSpace);
                
                // Draw axes
                dual_rocCtx.beginPath();
                // Y-axis (left)
                dual_rocCtx.moveTo(0, dual_rocCanvas.height);
                dual_rocCtx.lineTo(0, 0);
                // X-axis (bottom)
                dual_rocCtx.moveTo(0, dual_rocCanvas.height);
                dual_rocCtx.lineTo(dual_rocCanvas.width, dual_rocCanvas.height);
                dual_rocCtx.stroke();

                // Draw reference line (random classifier)
                dual_rocCtx.beginPath();
                dual_rocCtx.moveTo(0, dual_rocCanvas.height); // (0,0) in canvas coordinates
                dual_rocCtx.lineTo(dual_rocCanvas.width, dual_rocCanvas.height - dataAreaHeight); // (1,1) in canvas coordinates
                dual_rocCtx.strokeStyle = &#39;gray&#39;;
                dual_rocCtx.lineWidth = 1;
                dual_rocCtx.setLineDash([5, 5]);
                dual_rocCtx.stroke();
                dual_rocCtx.setLineDash([]);
                
                // Draw ROC curve points if we have any
                if (dual_rocPoints.length &gt; 0) {
                    // Only draw line if there are multiple points
                    if (dual_rocPoints.length &gt; 1) {
                        // Draw the curve connecting the points
                        dual_rocCtx.beginPath();
                        dual_rocCtx.moveTo(0, dual_rocCanvas.height); // Start at origin (0,0)
                        
                        // Sort points to ensure proper curve
                        const sortedPoints = [...dual_rocPoints].sort((a, b) =&gt; a.fpr - b.fpr);
                        
                        sortedPoints.forEach(point =&gt; {
                            const x = point.fpr * dual_rocCanvas.width;
                            // Corrected y-coordinate calculation
                            const y = dual_rocCanvas.height - (point.tpr * dataAreaHeight);
                            dual_rocCtx.lineTo(x, y);
                        });
                        
                        dual_rocCtx.strokeStyle = &#39;grey&#39;;
                        dual_rocCtx.lineWidth = 2;
                        dual_rocCtx.stroke();
                        
                        // Draw points
                        sortedPoints.forEach(point =&gt; {
                            const x = point.fpr * dual_rocCanvas.width;
                            // Corrected y-coordinate calculation
                            const y = dual_rocCanvas.height - (point.tpr * dataAreaHeight);
                            
                            dual_rocCtx.beginPath();
                            dual_rocCtx.arc(x, y, 3, 0, Math.PI * 2);
                            dual_rocCtx.fillStyle = &#39;grey&#39;;
                            dual_rocCtx.fill();
                        });
                    }
                    
                    // Draw current operating point
                    const tpr = dual_truePositives / (dual_truePositives + dual_falseNegatives) || 0;
                    const fpr = dual_falsePositives / (dual_falsePositives + dual_trueNegatives) || 0;
                    
                    const currentX = fpr * dual_rocCanvas.width;
                    // Corrected y-coordinate calculation
                    const currentY = dual_rocCanvas.height - (tpr * dataAreaHeight);
                    
                    dual_rocCtx.beginPath();
                    dual_rocCtx.arc(currentX, currentY, 6, 0, Math.PI * 2);
                    dual_rocCtx.fillStyle = &#39;red&#39;;
                    dual_rocCtx.fill();
                    dual_rocCtx.strokeStyle = &#39;black&#39;;
                    dual_rocCtx.lineWidth = 1;
                    dual_rocCtx.stroke();
                }
            }
            
            // Draw the PR curve with corrected y-coordinate calculation
            function dual_drawPRCurve() {
                dual_prCtx.clearRect(0, 0, dual_prCanvas.width, dual_prCanvas.height);
                
                // Calculate the actual data area height (reduced to make room for the extra space)
                const dataAreaHeight = dual_prCanvas.height / (1 + dual_extraSpace);
                
                // Draw axes
                dual_prCtx.beginPath();
                // Y-axis (left)
                dual_prCtx.moveTo(0, dual_prCanvas.height);
                dual_prCtx.lineTo(0, 0);
                // X-axis (bottom)
                dual_prCtx.moveTo(0, dual_prCanvas.height);
                dual_prCtx.lineTo(dual_prCanvas.width, dual_prCanvas.height);
                dual_prCtx.stroke();
                
                // Baseline removed as requested
                
                // Draw PR curve points if we have any
                if (dual_prPoints.length &gt; 0) {
                    // Only draw line if there are multiple points
                    if (dual_prPoints.length &gt; 1) {
                        // Draw the curve connecting the points
                        dual_prCtx.beginPath();
                        
                        // Sort points to ensure proper curve - for PR curve, we sort by recall (x-axis)
                        const sortedPoints = [...dual_prPoints].sort((a, b) =&gt; a.recall - b.recall);
                        
                        // Start point - unlike ROC, PR curves don&#39;t start at origin
                        const firstPoint = sortedPoints[0];
                        const firstX = firstPoint.recall * dual_prCanvas.width;
                        // Corrected y-coordinate calculation
                        const firstY = dual_prCanvas.height - (firstPoint.precision * dataAreaHeight);
                        dual_prCtx.moveTo(firstX, firstY);
                        
                        // Connect the rest of the points
                        for (let i = 1; i &lt; sortedPoints.length; i++) {
                            const point = sortedPoints[i];
                            const x = point.recall * dual_prCanvas.width;
                            // Corrected y-coordinate calculation
                            const y = dual_prCanvas.height - (point.precision * dataAreaHeight);
                            dual_prCtx.lineTo(x, y);
                        }
                        
                        dual_prCtx.strokeStyle = &#39;grey&#39;;
                        dual_prCtx.lineWidth = 2;
                        dual_prCtx.stroke();
                        
                        // Draw points
                        sortedPoints.forEach(point =&gt; {
                            const x = point.recall * dual_prCanvas.width;
                            // Corrected y-coordinate calculation
                            const y = dual_prCanvas.height - (point.precision * dataAreaHeight);
                            
                            dual_prCtx.beginPath();
                            dual_prCtx.arc(x, y, 3, 0, Math.PI * 2);
                            dual_prCtx.fillStyle = &#39;grey&#39;;
                            dual_prCtx.fill();
                        });
                    }
                    
                    // Draw current operating point
                    const precision = dual_truePositives / (dual_truePositives + dual_falsePositives) || 0;
                    const recall = dual_truePositives / (dual_truePositives + dual_falseNegatives) || 0;
                    
                    const currentX = recall * dual_prCanvas.width;
                    // Corrected y-coordinate calculation
                    const currentY = dual_prCanvas.height - (precision * dataAreaHeight);
                    
                    dual_prCtx.beginPath();
                    dual_prCtx.arc(currentX, currentY, 6, 0, Math.PI * 2);
                    dual_prCtx.fillStyle = &#39;red&#39;;
                    dual_prCtx.fill();
                    dual_prCtx.strokeStyle = &#39;black&#39;;
                    dual_prCtx.lineWidth = 1;
                    dual_prCtx.stroke();
                }
            }
            
            // Add new curve points for current size
            function dual_addCurvePoints() {
                const tpr = dual_truePositives / (dual_truePositives + dual_falseNegatives) || 0;
                const fpr = dual_falsePositives / (dual_falsePositives + dual_trueNegatives) || 0;
                const precision = dual_truePositives / (dual_truePositives + dual_falsePositives) || 0;
                const recall = tpr; // Recall is the same as TPR
                
                // Check if we already have points with the exact same size
                const existingRocPoint = dual_rocPoints.find(p =&gt; p.size === dual_circleSizePercent);
                const existingPrPoint = dual_prPoints.find(p =&gt; p.size === dual_circleSizePercent);
                
                // Update ROC point
                if (existingRocPoint) {
                    existingRocPoint.tpr = tpr;
                    existingRocPoint.fpr = fpr;
                } else {
                    dual_rocPoints.push({
                        tpr,
                        fpr,
                        size: dual_circleSizePercent
                    });
                }
                
                // Update PR point
                if (existingPrPoint) {
                    existingPrPoint.precision = precision;
                    existingPrPoint.recall = recall;
                } else {
                    dual_prPoints.push({
                        precision,
                        recall,
                        size: dual_circleSizePercent
                    });
                }
                
                // Sort points by size
                dual_rocPoints.sort((a, b) =&gt; a.size - b.size);
                dual_prPoints.sort((a, b) =&gt; a.size - b.size);
            }
            
            // Remove curve points above a certain size
            function dual_removeCurvePointsAboveSize(size) {
                dual_rocPoints = dual_rocPoints.filter(point =&gt; point.size &lt;= size);
                dual_prPoints = dual_prPoints.filter(point =&gt; point.size &lt;= size);
            }
            
            // Update quadrant labels dynamically based on circle position
            function dual_updateQuadrantLabels() {
                // Get vertical dividing line position
                const midX = dual_canvas.width / 2;
                
                // Check if circle overlaps with left or right half
                const leftEdge = dual_centerX - dual_circleRadius;
                const rightEdge = dual_centerX + dual_circleRadius;
                const topEdge = dual_centerY - dual_circleRadius;
                const bottomEdge = dual_centerY + dual_circleRadius;
                const overlapsLeft = leftEdge &lt; midX;
                const overlapsRight = rightEdge &gt; midX;
                
                // Padding to ensure labels stay within canvas
                const padding = 20;
                const labelWidth = 70;
                const labelHeight = 40;
                
                // 1. False Positives (inside circle, left side)
                if (overlapsLeft &amp;&amp; dual_falsePositives &gt; 0) {
                    const fpX = Math.max(padding, Math.min(midX - labelWidth - padding, dual_centerX - dual_circleRadius / 2));
                    const fpY = dual_centerY;
                    dual_quadrantLabels[0].style.display = &#39;block&#39;;
                    dual_quadrantLabels[0].style.left = fpX + &#39;px&#39;;
                    dual_quadrantLabels[0].style.top = fpY + &#39;px&#39;;
                } else {
                    dual_quadrantLabels[0].style.display = &#39;none&#39;;
                }
                
                // 2. True Positives (inside circle, right side)
                if (overlapsRight &amp;&amp; dual_truePositives &gt; 0) {
                    const tpX = Math.min(dual_canvas.width - labelWidth - padding, Math.max(midX + padding, dual_centerX + dual_circleRadius / 3));
                    const tpY = dual_centerY;
                    dual_quadrantLabels[1].style.display = &#39;block&#39;;
                    dual_quadrantLabels[1].style.left = tpX + &#39;px&#39;;
                    dual_quadrantLabels[1].style.top = tpY + &#39;px&#39;;
                } else {
                    dual_quadrantLabels[1].style.display = &#39;none&#39;;
                }
                
                // 3. True Negatives (outside circle, left side)
                // Only show if there&#39;s sufficient space between the circle and the edge
                const safeDistanceFromCircle = 5; // Minimum distance needed
                const distanceLeftEdge = leftEdge;
                
                if (dual_trueNegatives &gt; 0 &amp;&amp; distanceLeftEdge &gt; safeDistanceFromCircle) {
                    const tnX = padding;
                    const tnY = padding;
                    dual_quadrantLabels[2].style.display = &#39;block&#39;;
                    dual_quadrantLabels[2].style.left = tnX + &#39;px&#39;;
                    dual_quadrantLabels[2].style.top = tnY + &#39;px&#39;;
                } else {
                    // Hide when circle gets too close
                    dual_quadrantLabels[2].style.display = &#39;none&#39;;
                }
                
                // 4. False Negatives (outside circle, right side)
                // Only show if there&#39;s sufficient space between the circle and right edge
                const distanceRightEdge = dual_canvas.width - rightEdge;
                
                if (dual_falseNegatives &gt; 0 &amp;&amp; distanceRightEdge &gt; safeDistanceFromCircle) {
                    const fnX = dual_canvas.width - labelWidth - padding;
                    const fnY = padding;
                    dual_quadrantLabels[3].style.display = &#39;block&#39;;
                    dual_quadrantLabels[3].style.left = fnX + &#39;px&#39;;
                    dual_quadrantLabels[3].style.top = fnY + &#39;px&#39;;
                } else {
                    // Hide when circle gets too close
                    dual_quadrantLabels[3].style.display = &#39;none&#39;;
                }
            }
            
            // Check if a point is inside the circle
            function dual_isInsideCircle(x, y) {
                const dx = x - dual_centerX;
                const dy = y - dual_centerY;
                return (dx * dx + dy * dy) &lt;= (dual_circleRadius * dual_circleRadius);
            }
            
            // Initialize the first curve points for the starting size
            function dual_initCurvePoints() {
                dual_rocPoints = [];
                dual_prPoints = [];
                dual_addCurvePoints();
            }
            
            // Set canvas dimensions
            dual_resizeCanvas();
            
            // Setup slider events
            dual_setupSliderEvents();
            
            // Generate points with imbalanced distribution
            dual_generatePoints(10000);
            
            // Initial calculations and rendering
            dual_calculateDimensions();
            dual_recalculateMetrics();
            dual_redrawCanvas();
            dual_updateQuadrantLabels();
            
            // Initialize the curve points for current size
            dual_initCurvePoints();
            
            // Draw curves
            dual_drawROCCurve();
            dual_drawPRCurve();
            
            // Handle window resize
            window.addEventListener(&#39;resize&#39;, function() {
                dual_resizeCanvas();
                dual_redrawCanvas();
                dual_drawROCCurve();
                dual_drawPRCurve();
                dual_updateQuadrantLabels();
            });
        }
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;p&gt;Repare que, com apenas 1% de exemplos positivos, aumentar o tamanho do círculo faz com que a curva PR sofra uma queda acentuada na precisão — já que o número de falsos positivos aumenta muito mais do que o de verdadeiros positivos. Esse efeito, porém, não é capturado pela curva ROC, que permanece praticamente inalterada.&lt;/p&gt;
&lt;br&gt;
&lt;div style=&#34;display: flex; align-items: center;&#34;&gt;
&lt;div style=&#34;flex: 1; padding-right: 20px;&#34;&gt;
&lt;p&gt;Outro efeito interessante pode ser observado com a seguinte configuração: defina o tamanho do círculo em 40 e varie a porcentagem da classe positiva de 1% até 100%, e depois retorne a 1%. Você notará que o ponto correspondente na curva ROC praticamente não se move — a taxa de falsos positivos (FPR) permanece quase constante. Por outro lado, na curva PR, a precisão cai drasticamente à medida que a proporção de positivos se torna menor.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&#34;flex: 1;&#34;&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Mvm8sIyaBoU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Em geral, com precisão e recall estamos mais focados na classe minoritária (positiva, nesse caso), o que torna essas métricas mais informativas para dados desbalanceados. Um falso positivo não tem muito peso na curva ROC se temos muitos exemplos negativos. Porém, o mesmo falso positivo terá um impacto maior na curva PR porque FP está no denominador da precisão.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Um modelo ideal seria representado por um retângulo idêntico ao lado direito, posicionado exatamente sobre ele.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Os dois tipos de erros possuem nomes conhecidos. Falsos positivos (FP) são erros tipo I e falsos negativos (FN) são erros tipo II.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Nas simulações desta postagem, os pontos estão distribuídos uniformemente no plano. Essa escolha tem fins didáticos, pois facilita a explicação dos conceitos. No entanto, vale lembrar que, na vida real, os dados não necessariamente seguem essa distribuição.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;A abordagem dessa postagem se aplica a casos binários (por exemplo, positivo/negativo). Para problemas multiclasse, teríamos uma curva ROC para cada classe (one-vs-all).&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Quanto mais próxima a curva ROC estiver do canto superior esquerdo, melhor é o desempenho do modelo. Para quantificar o desempenho, calculamos a área sob a curva (AUC), que representa a performance geral do modelo: AUC = 1,0: modelo perfeito. AUC = 0,5: modelo aleatório (sem poder preditivo). AUC &amp;lt; 0,5: pior que aleatório (inverta suas previsões).&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>I let two AIs talk about my PhD thesis</title>
      <link>https://alvarofrancomartins.com/post/ai-talk/</link>
      <pubDate>Fri, 20 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://alvarofrancomartins.com/post/ai-talk/</guid>
      <description>&lt;script type=&#34;text/javascript&#34; src=&#34;https://d3js.org/d3.v6.min.js&#34;&gt;&lt;/script&gt;
&lt;!-- &lt;script type=&#34;text/javascript&#34; src=&#34;js/formatter.js&#34;&gt; &lt;/script&gt; --&gt;
&lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;css/style.css&#34;&gt;
&lt;h1 id=&#34;ai-talk&#34;&gt;AI Talk&lt;/h1&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/wSjqrdXyGBk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;transcript&#34;&gt;Transcript&lt;/h2&gt;
&lt;p&gt;This was automatically transcripted by Youtube and then I used chatgpt for fine tuning the text. It&amp;rsquo;s not 100% correct.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Do you ever get kind of sucked into those huge corruption cases in the news? Like, how does it even get that big, you know? Oh, it feels like a whole other world sometimes. It is kind of wild, right? But here&amp;rsquo;s the thing: there are actually patterns to it. Oh really? Yeah, it&amp;rsquo;s not just totally random chaos, which is kind of cool.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;This PhD thesis we&amp;rsquo;re diving into today went deep, looking at scandals in Spain and Brazil—two totally different places. So, scandals across the globe, and get this: it turns out there are consistent patterns in how these corruption networks actually form. Even with different cultures and different continents, it&amp;rsquo;s like there&amp;rsquo;s an underlying structure. Whoa, that&amp;rsquo;s kind of mind-blowing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;So, was there one thing that really jumped out at you from all this research? Like, what surprised you the most? Honestly, it was the size—or maybe more like the smallness of it all. Smallness? Yeah, we think of these huge scandals, right? Like it&amp;rsquo;s got to be this massive conspiracy with tons of people involved. But this research found that the average scandal, both in Spain and Brazil, only involved about seven people. Seven people, seriously? That&amp;rsquo;s it? I figured it&amp;rsquo;d be way more to pull off something big enough to make the news. It is counterintuitive, isn&amp;rsquo;t it? Totally. But it seems like smaller groups are actually behind a lot of this stuff. Makes you think maybe going after these smaller networks would be smarter than chasing the idea of some giant complex web, which might not even exist the way we picture it, you know?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;No, that&amp;rsquo;s a really good point. It&amp;rsquo;s like too many cooks in the kitchen, kind of thing. Totally. Maybe with corruption, smaller is actually more efficient and harder to catch. And it gets even more interesting because the thesis goes beyond just the size of these networks. Okay, so what else did they find? They started looking at the actual people involved and found a pattern there too. Oh, interesting! Like, what kind of people were they? Was there anything common about them?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;So, get this: in both the Spanish and Brazilian cases, they found the same people popping up over and over again in multiple scandals. Wait, really? Yeah, and not just similar scandals in the same industry either. We&amp;rsquo;re talking totally different schemes in different sectors, but the same faces kept showing up. So it&amp;rsquo;s like, you know, those people who just seem to know everyone at a party, even if they&amp;rsquo;re from totally different walks of life? Exactly! The research actually calls these folks &amp;ldquo;recidivist agents.&amp;rdquo; Recidivist agents, huh? Sounds kind of ominous. It kind of is when you think about it—they&amp;rsquo;re like the glue, the connective tissue that holds these corruption networks together. And they make the networks way more resilient and harder to dismantle because even if you manage to break up one corrupt group, these recidivists are already connected to other people. They&amp;rsquo;re ready to start a whole new scheme somewhere else. Exactly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;To figure out just how important these recidivists are, the researcher simulated the growth of these networks. Wait, hold on, how do you even simulate something like that? Yeah, it gets pretty wild. It involved a lot of complex math, computer modeling, all that. But basically, they created this system where they could create these virtual agents, right? And these agents could interact and make connections based on certain rules. So, like a corruption simulator, basically? Exactly. And one of the things they could control in the simulator was the rate of recidivism. Recidivism rate meaning like how likely these agents were to, I don’t know, go back to their corrupt ways? Exactly—how likely they were to get involved in another scheme after the first one. Fascinating. So, what happened in this corruption simulator? What did they learn when they started messing with this recidivism rate?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Well, it turned out the higher the recidivism rate—meaning the more likely these virtual agents were to get involved in corruption again—the faster the whole network grew and the more resistant it became to any attempts to break it up. So, it&amp;rsquo;s kind of like the more people you have in a group who are constantly introducing their friends to everyone else, the faster that group is going to expand, right? Right, and these recidivist agents, they&amp;rsquo;re like the ultimate connectors. Oh, so they&amp;rsquo;re not just repeat offenders, they&amp;rsquo;re spreading it around too? Exactly, they&amp;rsquo;re like super-spreaders of corrupt behavior. Whoa, that&amp;rsquo;s huge.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;So it&amp;rsquo;s not enough to just go after people involved in one specific scandal, right? You’ve got to focus on these recidivists, these super-spreaders, to actually make a dent. That&amp;rsquo;s a key takeaway from all of this, for sure. That&amp;rsquo;s fascinating! And you know, you mentioned earlier that there were these really interesting visuals in the thesis, and we&amp;rsquo;ve been talking about networks this whole time, so I’ve got to ask—what do these corruption networks actually look like? See, I knew this is where the math stuff would come in handy, right? And it&amp;rsquo;s not even boring math, I promise—no spreadsheets. No way! This is the fun part—the researcher actually visualized these networks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Okay, now that I’ve got to see. They’re in the thesis—figures 1.2 A and B. Figure A is the Spanish network, and it’s wild. It&amp;rsquo;s huge, this dense web, almost like a spiderweb—all these connections overlapping. So it&amp;rsquo;s literally like you&amp;rsquo;re seeing who&amp;rsquo;s connected to who? Exactly! Makes it way more real than just talking about it, you know? Totally. But why is the Spanish one so much bigger than the Brazilian one? So, the Spanish research covered a lot more scandals over a longer time period, so naturally, the network’s going to be bigger and messier. Makes sense. But the Brazilian one still has the same basic patterns we talked about, right? Exactly. Figure 1.2 B, the Brazilian network, is smaller, but you still see those clusters of recidivist agents. Right, like little hubs. Exactly, holding the whole thing together. And that&amp;rsquo;s what&amp;rsquo;s crazy—these visuals prove the similarities are there no matter how big or small the network is. It&amp;rsquo;s kind of beautiful in a weird way, you know? Like, you can pack so much info into one image. They&amp;rsquo;re not just random scandals—it&amp;rsquo;s all connected, and those connections are key if we want to understand how to actually fight corruption.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Seeing the data like this helps us see the weak points, the patterns, in a way we couldn’t before. This has been wild, honestly. We started with these massive scandals seeming impossible to grasp, and now we&amp;rsquo;re seeing the patterns, the common threads, even across different countries. So, what&amp;rsquo;s the big takeaway here? What should we carry with us from all this?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I think first off, size isn’t everything. A big scandal doesn’t automatically equal a huge network. It could be these smaller, tighter groups that are even more effective at being corrupt. And we can’t forget those recidivists, man—they&amp;rsquo;re like the VIPs of corruption, right? And maybe most importantly, this whole thing shows us how powerful these tools are—network science, data visualization—they can help us untangle problems that seem impossible. Makes you think, something that starts with, what, seven people can snowball so fast, creating these whole networks of corruption that are way more resilient than you’d expect. But by understanding them, by actually seeing them, we can start to fight back more effectively. And that’s what this deep dive is all about, right? Absolutely—knowledge is power, even when it comes to something like corruption.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Computational model of political corruption networks</title>
      <link>https://alvarofrancomartins.com/post/corruption-networks-model/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate>
      <guid>https://alvarofrancomartins.com/post/corruption-networks-model/</guid>
      <description>&lt;p&gt;In our &lt;a href=&#34;https://alvarofrancomartins.com/publication/universality-of-political-corruption-networks/&#34;&gt;latest paper&lt;/a&gt;, the findings of universal characteristics in political corruption networks allowed us to propose a model to simulate the growth of corruption networks. Among other results, our research revealed the prominent role of recidivist agents on corruption networks. For instance, we discover that recidivists act as bridges among minor corrupt groups and coordinate peripheral criminals to perform more extensive and often much more harmful corruption processes.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Motivated by these insights, we have used the recidivism rate (&lt;em&gt;i.e&lt;/em&gt;, the fraction of corrupt agents recurring in the criminal activity), as the main parameter of the model. The simulations not only produce networks with features very similar to those observed in the empirical data, but also indicates that corruption networks operate around a critical recidivism rate. More specifically, corruption networks simulated below this critical recidivism rate are completely fragmented, while networks generated above this critical value become overly connected.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;In this post, I will&lt;/p&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;Describe the model  &lt;a href=&#34;#model&#34;&gt;
  &lt;i class=&#34;fas fa-fas fa-link  pr-1 fa-fw&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Display an interactive demonstration &lt;a href=&#34;#play&#34;&gt;
  &lt;i class=&#34;fas fa-fas fa-link  pr-1 fa-fw&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Present the algorithm of the model in Python &lt;a href=&#34;#algorithm&#34;&gt;
  &lt;i class=&#34;fas fa-fas fa-link  pr-1 fa-fw&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h1 id=&#34;model&#34;&gt;The model&lt;/h1&gt;
&lt;br&gt;
&lt;p&gt;We have proposed the model based on two of our main findings about political corruption networks. In particular, we have found that the size distribution of scandals is roughly approximated by an exponential distribution with a characteristic number of people around seven people. This result shows that political corruption runs in small groups that rarely exceed more than ten people (only 20% and 17% of corruption cases in Spain and Brazil, respectively). The surprising similarity in the size distribution of scandals in both countries suggests a universal pattern related to political corruption processes.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;The second finding came from investigating the dynamics of repeat offenders. We have found that the number of recidivist agents is linearly associated with the number of people in the network over the entire network growth process. The recidivism rates (number of repeat offenders divided by the total number of offenders) are 9% for Spain and 14.2% for Brazil. Therefore, the number of recidivists ($r$) can be modeled by the following equation.&lt;/p&gt;
&lt;p&gt;$$r(n) = \alpha n + \beta,$$&lt;/p&gt;
&lt;p&gt;where $n$ is the total number of people and the parameters are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$\alpha$: The recidivism rate (number of repeat offenders / total number of offenders). $\in [0, 1]$.&lt;/li&gt;
&lt;li&gt;$\beta$: The regression coefficient. It controls the minimal number of people necessary for the emergence of the first recidivist agents. $\in [-\infty, 0)$.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The model works as follows. It first starts with an empty network that grows by including complete graphs representing political scandals at each iteration. The size of these complete graphs ($s$) is randomly drawn from an exponential distribution ($P$) to mimic the empirical behavior given by $P(s)\sim e^{-s/s_c}$, where $s_c$ represents the characteristic size of corruption scandals (empirically, $s_c\approx 7$ people). We consider that part of the agents added to the network at each iteration are recidivists. We assume the number of recidivists to increase linearly according with the equation of $r(n)$. We keep track of the number of recidivists during the network growth process, and when new recidivists emerge, we randomly select nodes already present in the network to become recidivists and make them belong to the next scandal (complete graph) added to the network.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;In addition, when selecting nodes for representing recidivist agents, we can select nodes that were already recidivists with a small probability $p$ or nodes that will become recidivists for the first time with probability $1-p$. This last procedure allows us to control the number of agents involved in more than two corruption scandals and reproduce the empirical behavior (about 2.5% of all agents of both Spanish and Brazilian networks fit this condition).&lt;/p&gt;
&lt;br&gt;
&lt;h1 id=&#34;play&#34;&gt;Interact with the model simulations&lt;/h1&gt;
&lt;br&gt;
&lt;p&gt;The application below allows you to interact with the network&amp;rsquo;s simulations and see how they evolve as you add new scandals. To play with it, first click in the &lt;strong&gt;Start new network&lt;/strong&gt; button and then add as many scandals as you want using the &lt;strong&gt;Add new scandal&lt;/strong&gt; button. Please note that, initially, only complete graphs will appear. After a while, however, the recidivists will show up and they will connect different parts of the network.&lt;/p&gt;
&lt;br&gt;

&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;en&#34;&gt;

  &lt;head&gt;
    &lt;title&gt;Network Corruption Model&lt;/title&gt;

    &lt;style&gt;
      #mynetwork {
        display: inline-block;
        height: 620px;
        width: 100%;
        border: 1px solid #444444;
        background-color: #222222;
      }

      .input-group {
        width: 100%;
        padding:  0px;

      }

      .my_input {
        border: solid 1px #ccc;

        padding-left: 20px;

        border-radius: 5px;
        margin-bottom: 5px;
        }

      .btn-primary{
        font-size: 20px;
        margin-left: 10px;
        margin-bottom: 5px;
      }

      .btn-outline-primary{
        font-size: 20px;
        margin-left: 10px;
        margin-bottom: 5px;
      }

      .row {
        margin-left:2px;
      }

    &lt;/style&gt;

    &lt;script type=&#34;text/javascript&#34; src=&#34;https://unpkg.com/vis-network/standalone/umd/vis-network.min.js&#34;&gt;&lt;/script&gt;
    &lt;script src=&#34;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&#34;&gt;&lt;/script&gt;
  &lt;/head&gt;

  &lt;body&gt;
    &lt;div class=&#34;input-group&#34;&gt;
      &lt;label style=&#34;font-size:28px;padding-top:5px;&#34;&gt;$\alpha$ &amp;nbsp&lt;/label&gt;&lt;input class = &#34;my_input&#34; type=&#34;number&#34; name=&#34;recidivism_rate&#34; min=0 max=1 step=0.001 value=0.142 id=&#34;recidivism_rate&#34; oninput= &#34;(!validity.rangeOverflow||(value=1)) &amp;&amp; (!validity.rangeUnderflow||(value=0)) &amp;&amp;
(!validity.stepMismatch||(value=parseInt(this.value)));&#34;/&gt;

      &lt;label style=&#34;font-size:28px;padding-top:5px;&#34;&gt;&amp;nbsp&amp;nbsp $\beta$ &amp;nbsp&lt;/label&gt;&lt;input class = &#34;my_input&#34; type=&#34;number&#34; name=&#34;beta_parameter&#34; min=-100 max=-1 step=-1 value=-11 id=&#34;beta_parameter&#34; oninput= &#34;(!validity.rangeOverflow||(value=-1)) &amp;&amp; 
(!validity.stepMismatch||(value=parseInt(this.value)));&#34; /&gt;

      &lt;div class=&#34;row&#34;&gt;
        &lt;button id=&#34;startNewNetwork&#34; class=&#34;btn btn-primary&#34; onclick=&#34;startNewNetwork();addCompleteGraph();enableAddGraph();&#34;&gt;Start new network&lt;/button&gt;
        &lt;button id=&#34;add_new_scandal&#34; class=&#34;btn btn-outline-primary&#34; onclick=&#34;addCompleteGraph();&#34; disabled&gt;Add new scandal&lt;/button&gt;
      &lt;/div&gt;

    &lt;/div&gt;

    &lt;div id=&#34;mynetwork&#34;&gt;&lt;/div&gt;

    &lt;script type=&#34;text/javascript&#34;&gt;
      var container = document.getElementById(&#34;mynetwork&#34;);

      proba = 0.024;
      lambda = 7.33;

      const options = {
        &#34;autoResize&#34;: true,
        &#34;height&#34;: &#39;100%&#39;,
        &#34;width&#34;: &#39;100%&#39;,
        &#34;physics&#34;: {
          &#34;enabled&#34;: true,
          &#34;forceAtlas2Based&#34;: {
            &#34;theta&#34;: 0.9,
            &#34;gravitationalConstant&#34;: -100,
            &#34;centralGravity&#34;: 0.01,
            &#34;springConstant&#34;: 0.08,
            &#34;springLength&#34;: 100,
            &#34;damping&#34;: 0.7,
            &#34;avoidOverlap&#34;: 0
          },
          &#34;maxVelocity&#34;: 50,
          &#34;minVelocity&#34;: 0.1,
          &#34;solver&#34;: &#39;forceAtlas2Based&#39;,
          &#34;stabilization&#34;: {
            &#34;enabled&#34;: false
          },
          &#34;timestep&#34;: 0.2,
          &#34;adaptiveTimestep&#34;: true,
        },
        &#34;edges&#34;: {
          &#34;smooth&#34;: false
        },
        &#34;nodes&#34;: {
          &#34;shape&#34;: &#34;dot&#34;,
          &#34;size&#34;: 10,
        },
        &#34;interaction&#34;: {
          &#34;dragNodes&#34;: false,
          &#34;dragView&#34;: true
        }
      }

      function startNewNetwork() {
        a = parseFloat(document.getElementById(&#34;recidivism_rate&#34;).value);
        b = parseFloat(document.getElementById(&#34;beta_parameter&#34;).value);

        last_agent_index = 0;
        total_repeated_agents = 0;

        repeated_agent_names = [];
        agent_names = [];

        nodes = new vis.DataSet();
        edges = new vis.DataSet();

        data = {
          nodes: nodes,
          edges: edges,
        };

        return network = new vis.Network(container, data, options);
      }

      function expoSampling(scale) {
        return Math.round(-scale * Math.log(1.0 - Math.random()));
      }

      function addCompleteGraph() {
        // calculate the size of the complete graph to enter the network
        var n_new_agents = expoSampling(lambda);

        while (n_new_agents &lt;= 1) {
          var n_new_agents = expoSampling(lambda);
        }

        // get index from new nodes
        var new_agent_names = [];
        for (let n = last_agent_index; n &lt; last_agent_index + n_new_agents; n++) {
          new_agent_names.push(n);
        }
        last_agent_index += n_new_agents;

        size_network = agent_names.length;

        // apply model
        var new_repeated_agents = Math.round(a * (size_network) + b - total_repeated_agents);

        if (new_repeated_agents &gt; 0) {

          var minimo = Math.min(new_repeated_agents, new_agent_names.length);

          for (let i = 0; i &lt; minimo; i++) {

            if ((Math.random() &lt;= proba) &amp;&amp; (repeated_agent_names.length &gt; 0)) {

              id_old = repeated_agent_names[Math.floor(Math.random() * repeated_agent_names.length)];

            } else {

              let difference = agent_names.filter(x =&gt; !repeated_agent_names.includes(x));

              id_old = difference[Math.floor(Math.random() * difference.length)];

              total_repeated_agents += 1;
            }

            new_agent_names[i] = id_old;
            repeated_agent_names.push(id_old);
          }
        }

        for (let i = 0; i &lt; new_agent_names.length; i++) {
          if (!agent_names.includes(new_agent_names[i])) {
            agent_names.push(new_agent_names[i])
          }
        }

        // add complete graph to the network
        for (let n = 0; n &lt; new_agent_names.length; n++) {
          nodes.update({
            id: new_agent_names[n]
          })
        }

        for (let i = 0; i &lt; new_agent_names.length; i++) {
          for (let j = i + 1; j &lt; new_agent_names.length; j++) {
            let i_ = new_agent_names[i];
            let j_ = new_agent_names[j];

            if (i_ != j_) {
              edges.update({
                from: i_,
                to: j_
              });
            }
          }
        }
        network.fit({
                    &#34;minZoomLevel&#34;: 0.1,
                    &#34;maxZoomLevel&#34;: 0.35,
                    });
      }

      // button dynamics
      const numSeconds = 1
      document.querySelector(&#39;#add_new_scandal&#39;).addEventListener(&#39;click&#39;, (e) =&gt; {
        e.target.disabled = true
        setTimeout(() =&gt; {
          e.target.disabled = false
        }, numSeconds * 500)
      })

      function enableAddGraph() {
        document.getElementById(&#34;add_new_scandal&#34;).disabled = false;
      }

    &lt;/script&gt;

  &lt;/body&gt;

&lt;/html&gt;
&lt;p&gt;This interactive visualization was made using &lt;a href=&#34;https://visjs.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;visjs&lt;/a&gt;, a browser based visualization library. The figures below show a visual comparison between simulated and empirical networks. Figure 1 is a simulation of the Brazilian corruption network using its recidivism rate, and Figure 2 shows the empirical network.&lt;/p&gt;
&lt;div class=&#34;parent&#34; style = &#34;display:flex&#34;&gt;
&lt;figure&gt;
&lt;img style = &#34;width: 100%;display: inline-block;padding-left: 5px;&#34; class=&#34;half-page-image&#34; src=&#34;figs/model.png&#34;&gt;
&lt;figcaption&gt;Figure 1: A network simulation with $\alpha = 0.142$.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img style = &#34;width: 100%;display: inline-block; padding-left: 5px;&#34; class=&#34;half-page-image&#34; src=&#34;figs/brazil.png&#34;&gt;
&lt;figcaption &gt;Figure 2: The Brazilian corruption network. &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;For more comparisons (both visual and quantitative) between the model and the empirical networks, see the &lt;a href=&#34;https://www.nature.com/articles/s41598-022-10909-2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;paper&lt;/a&gt; or take a look at my other &lt;a href=&#34;https://alvarofrancomartins.com/post/corruption-networks&#34;&gt;post&lt;/a&gt; where I have summarized our results.&lt;/p&gt;
&lt;br&gt;
&lt;h1 id=&#34;algorithm&#34;&gt;The algorithm&lt;/h1&gt;
&lt;br&gt;
&lt;p&gt;In order to run the model, we first need to import the following packages:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt;          &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;graph_tool.all&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;gt&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;itertools&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;combinations&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The function which generate the network links according to our model is written as follows.&lt;/p&gt;
&lt;br&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-4&#34;&gt;
  &lt;summary&gt;Click to view the code&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;generate_net_links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lambda_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;7.33&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.09&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;11.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proba&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    Generate a corruption network based on our model.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    Parameters
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    ---------
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    tmax : int
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;           Number of iteration steps (default: 100).
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    lambda_ : float
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;           Characteristic number of people per scandal (default: 7.33).
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    a, b : float
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;           Parameters defining the number of repeated agents (nr) as a function
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;           of total number of agents (n): nr = a*n + b (default: 0.09, -11.5).
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    proba : float
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;            Probability of selecting a repeated agent that was already involved in
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;            another scandal (default: 0.024).
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    Returns
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    -------
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    links_list : list
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;                 A list of edge lists where each element correspond to
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;                 a particular iteration step.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    
    &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;                          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;links&lt;/span&gt;                      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;links_list&lt;/span&gt;                 &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;agent_names&lt;/span&gt;                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;last_agent_index&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;repeated_agent_names&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;total_repeated_agents&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;n_new_agents&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exponential&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lambda_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
            
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n_new_agents&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        
            &lt;span class=&#34;n&#34;&gt;new_agent_names&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;last_agent_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last_agent_index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n_new_agents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;last_agent_index&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n_new_agents&lt;/span&gt;
            
            &lt;span class=&#34;n&#34;&gt;new_repeated_agents&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;agent_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;total_repeated_agents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
            
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_repeated_agents&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_repeated_agents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_agent_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))):&lt;/span&gt;

                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uniform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repeated_agent_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
                        &lt;span class=&#34;c1&#34;&gt;#select from repeated_agent_names&lt;/span&gt;
                        &lt;span class=&#34;n&#34;&gt;repeated_agent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repeated_agent_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                        &lt;span class=&#34;c1&#34;&gt;#select from agent_names&lt;/span&gt;
                        &lt;span class=&#34;n&#34;&gt;repeated_agent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repeated_agent_names&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;agent_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
                        &lt;span class=&#34;n&#34;&gt;total_repeated_agents&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;

                    &lt;span class=&#34;n&#34;&gt;new_agent_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repeated_agent&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;repeated_agent_names&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repeated_agent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                    
            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;agent_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_agent_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;agent_names&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;agent_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            
            &lt;span class=&#34;n&#34;&gt;new_links&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;combinations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_agent_names&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
            
            &lt;span class=&#34;n&#34;&gt;links_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;links_list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;This function returns a list of edge lists, where each element correspond to a particular iteration step.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;edge_lists&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;generate_net_links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.142&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# e.g, [[(0, 1), (0, 3), ... (5, 6)], [(7, 8), (7, 9) ... (14, 15)], ... ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To create the network until step $t$ we need to concatenate these lists.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;network&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edges_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Graph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;directed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;edge_list_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;concatenate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edges_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    
    &lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_edge_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edge_list_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hashed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# Self loops and parallel edges are not allowed. &lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;gt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remove_self_loops&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;gt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remove_parallel_edges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we can generate the network until $t$ steps (100 in this case).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;final_network&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;network&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edge_lists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;final_network&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;lt;Graph object, undirected, with 767 vertices and 4805 edges, at 0x7f2789007d60&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;h1 id=&#34;closing-thoughts&#34;&gt;Closing thoughts&lt;/h1&gt;
&lt;br&gt;
&lt;p&gt;The most important aspect of this model is that it highlights the relevance of recidivists in criminal contexts. Recidivists are able to connect different parts of networks and function as brokers. In other words, they represent the backbone of criminal networks, sustaining organized crime across time and space. In this sense, the recidivism rate plays an important role in the evolution, structure and dynamics of corruption networks.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;From a practical perspective, our model may have important implications for law enforcement and intelligence activities. In a scenario where we are able to estimate the number of recidivists, we could therefore approximate relevant features regarding the evolution and structure of the underlying network. Moreover, our model can even be used as a benchmark for related corruption network investigations, such as link prediction or efficiency in network dismantling.&lt;/p&gt;
&lt;!-- &lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;https://alvarofrancomartins.com/&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;Do something&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;
 --&gt;
&lt;!-- For now I think that&#39;s about it. Please, do not hesitate to contact me in case you want to talk about my work.  --&gt;
&lt;br&gt;
&lt;p&gt;Main references:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://doi.org/10.1038/s41598-022-10909-2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Martins, A. F., da Cunha, B. R., Hanley, Q. S., Gonçalves, S., Perc, M., &amp;amp; Ribeiro, H. V. (2022). &lt;strong&gt;Universality of political corruption networks&lt;/strong&gt;. Scientific Reports, 12(1), 1-10.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://doi.org/10.1093/comnet/cny002&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ribeiro, H. V., Alves, L. G., Martins, A. F., Lenzi, E. K., &amp;amp; Perc, M. (2018). &lt;strong&gt;The dynamical structure of political corruption networks&lt;/strong&gt;. Journal of Complex Networks, 6(6), 989-1003.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Unveiling the hidden patterns of corruption networks</title>
      <link>https://alvarofrancomartins.com/post/corruption-networks/</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://alvarofrancomartins.com/post/corruption-networks/</guid>
      <description>&lt;p&gt;Political corruption is an inherent problem in our societies. Corrupt behavior is a multifaceted phenomenon responsible for a variety of socioeconomic limitations. In general, isolated agents engaged in criminal acts rarely pose a major threat to society. However, this scenario changes completely when we consider, for example, multiple corruption scandals.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Although the people involved in corruption obviously want to keep it in secrecy, they do not operate without leaving traces. A natural approach to consider this collective behavior can be taken from a combination of scientific fields, such as network science, complexity science, and data science.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Criminal networks are not simply social networks operating in criminal contexts. The interactions within these systems go beyond social norms and are often shaped by trade-offs between concealment and efficiency. Political corruption networks represent an additional layer of complexity. Frequently involving high ranking individuals, a great deal of polarization and many controversies, political corruption weakens democracy, damages political stability and spreads mistrust in the rule of law.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;In our recent paper &lt;a href=&#34;https://www.nature.com/articles/s41598-022-10909-2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Universality of political corruption networks&lt;/a&gt;, we used publicly available data from Brazil and Spain to reveal the underlying patterns of political corruption networks. Our work has revealed fascinating statistical similarities in the growth of these networks. This work include many results I obtained during my master&amp;rsquo;s degree and ongoing PhD. Here I summarize our main findings:&lt;/p&gt;
&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;We have found that, in both countries, the size of corruption scandals is approximately exponentially distributed. These distributions have, on average, roughly 7 people per scandal. Therefore, people tend to act in small groups when they are involved in corruption processes.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;
    &lt;img src=&#34;figs/fig1.png&#34; width=&#34;730px&#34; height=&#34;443px&#34; /&gt;
    &lt;figcaption&gt;Figure 1: Complementary cumulative distribution of scandals sizes in (A) Spain and (B) Brazil.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;The networks consist of nodes representing people listed in the scandals and links indicating that two people were involved in the same corruption scandal. These networks share surprising features, such as high clustering coefficients, moderately high assortativity coefficients, and low average shortest path length.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;
    &lt;img src=&#34;figs/fig2.png&#34; width=&#34;800px&#34; height=&#34;443px&#34; /&gt;
    &lt;figcaption&gt;Figure 2: (A) Spanish and (B) Brazilian political corruption networks.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;The networks&#39; degree distributions are well approximated by exponential distributions. Moreover, the characteristic degrees evolved to a similar plateau, roughly with the same average number of connections.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;
    &lt;img src=&#34;figs/fig3.png&#34; width=&#34;730px&#34; height=&#34;443px&#34; /&gt;
    &lt;figcaption&gt;Figure 3: Changes in the characteristic degree over the years for (A) Spanish and (B) Brazilian corruption networks. The insets show the cumulative distributions of the vertex degree (on a log-linear scale) for the last year of the networks.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;The networks present community structures where the number of modules is linearly associated with the total number of scandals.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;
    &lt;img src=&#34;figs/figa.png&#34; width=&#34;730px&#34; height=&#34;443px&#34; /&gt;
    &lt;figcaption&gt;Figure 4: (A) Spanish and (B) Brazilian number of modules versus number of scandals.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;The time evolution of the networks are characterized by abrupt changes in the size of the largest connected component, which is due to the coalescence (or connection) of different network components. This process is caused by recidivists (&lt;em&gt;i.e.&lt;/em&gt;, individuals involved in at least two scandals).&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;
    &lt;img src=&#34;figs/fig5.png&#34; width=&#34;830px&#34; height=&#34;443px&#34; /&gt;
    &lt;figcaption&gt;Figure 5: Coalescence processes observed in both political corruption networks.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;The number of recidivists is linearly associated with the total number of people. The recidivism rates (number of repeat offenders / total number of offenders) are 9% in Spain and 14.2% in Brazil.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;
    &lt;img src=&#34;figs/fig6.png&#34; width=&#34;730px&#34; height=&#34;443px&#34; /&gt;
    &lt;figcaption&gt;Figure 7: Linear relationships between the number of repeat offenders and the total number of people.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Recidivists are vertices that connect different parts of the network, functioning as brokers (they have the highest betweenness centrality values). In this sense, the recidivism rate plays an important role in the evolution, structure, and dynamics of corruption networks.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;
    &lt;img src=&#34;figs/fig7.png&#34; width=&#34;530px&#34; height=&#34;500px&#34; /&gt;
    &lt;figcaption&gt;Figure 7: Spanish political corruption network showing recidivists nodes in red.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;We have proposed a &lt;a href=&#34;https://alvarofrancomartins.com/post/corruption-networks-model/&#34;&gt;computational model&lt;/a&gt; to simulate corruption networks. The model takes into account two results: the recidivists linear pattern and the size distribution of scandals. We can see below that our model generate networks visually similar to the empirical corruption networks.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;
    &lt;img src=&#34;figs/sfig1.png&#34; width=&#34;830px&#34; height=&#34;443px&#34; /&gt;
    &lt;figcaption&gt;Figure 8: (A) Spanish and (B) Brazilian political corruption networks. Model simulations of the empirical networks using (C) Spanish and (D) Brazilian recidivism rates. &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;More importantly, we have verified that the model is capable of simulating networks with features very similar to those observed in the empirical data.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;
    &lt;img src=&#34;figs/sfig5.png&#34; width=&#34;930px&#34; height=&#34;443px&#34; /&gt;
    &lt;figcaption&gt;Figure 9: The model generates realistic networks that are able to reproduce the empirical network properties. The degree distributions of the model networks can be reasonably described by exponential degree distributions. Furthermore, the network simulations present a linear relationship between the number of modules and the number of complete graphs. &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Overall, we have presented a comprehensive investigation of corruption networks related to political scandals in Spain and Brazil over nearly three decades. It is important to remember that these countries have a long history of political corruption and are known worldwide for having huge corruption scandals.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Our results show that corruption networks share universal characteristics that are independent of social and cultural differences among countries. Ultimately, this work emphasizes the influence of recidivists on organized crime, indicating its susceptibility to interventions targeting these criminals.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;I believe that this work significantly improves the understanding of political corruption networks and organized crime. For more details, please do not hesitate to contact me. I would be happy to talk about my work.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dismantling and modeling cocaine trafficking networks</title>
      <link>https://alvarofrancomartins.com/post/cocaine_smuggling_networks/</link>
      <pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://alvarofrancomartins.com/post/cocaine_smuggling_networks/</guid>
      <description>&lt;script type=&#34;text/javascript&#34; src=&#34;https://d3js.org/d3.v6.min.js&#34;&gt;&lt;/script&gt;
&lt;!-- &lt;script type=&#34;text/javascript&#34; src=&#34;js/formatter.js&#34;&gt; &lt;/script&gt; --&gt;
&lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;css/style.css&#34;&gt;
&lt;p&gt;Criminal networks are a major and ubiquitous problem in modern societies. However, effective and general approaches to interrupt their functioning are still an open problem. In this post, I will apply a method of network dismantling to four cocaine smuggling networks. These networks are the result of operations from 2006 to 2009 and include countries such as Brazil, Colombia, Mexico, Spain, and Uruguay. Additionally, by the end of this post, I will suggest that these networks can be modeled using an extension of the Barabási-Albert model.&lt;/p&gt;
&lt;!-- [^1]: The data used here was downloaded from the [UCINET](https://sites.google.com/site/ucinetsoftware/home?authuser=0) covert datasets. --&gt;
&lt;br&gt;
&lt;p&gt;The United Nations Office on Drugs and Crime (UNODC) &lt;a href=&#34;https://www.unodc.org/unodc/en/drug-trafficking/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;defines&lt;/a&gt; drug trafficking as &amp;ldquo;a global illicit trade involving the cultivation, manufacture, distribution and sale of substances which are subject to drug prohibition laws&amp;rdquo;. A 2021 &lt;a href=&#34;https://www.unodc.org/documents/data-and-analysis/cocaine/Cocaine_Insights_2021.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;report&lt;/a&gt; indicates that the amount of cocaine seized globally reached record levels in 2019, with the majority of cocaine continuing to be seized in the Americas. Despite immense and increasing efforts to interrupt these activities, counterdrug interdictions appear to be &lt;a href=&#34;https://doi.org/10.1073/pnas.1812459116&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;making the situation worse&lt;/a&gt;. Drug trafficking networks are &lt;a href=&#34;https://doi.org/10.1080/17440572.2013.787927&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;flexible, fluid structures&lt;/a&gt; and can respond instantly to attacks. For example, it has been suggested that &lt;a href=&#34;https://doi.org/10.1038/srep04238&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;some&lt;/a&gt; networks can become even more efficient after targeted attacks.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;images/worldwide_cocaine_trafficking_flow.png&#34; width=&#34;1200px&#34; height=&#34;570px&#34; /&gt;
    &lt;figcaption&gt;&lt;b&gt;Figure 1&lt;/b&gt;: Main cocaine trafficking flows, 2015–2019. Source: UNODC, World Drug Report 2021.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;In terms of network dismantling, a naive approach for attacking criminal networks is to target the most connected people (those with a high degree of centrality). But realistically, this does not work. It turns out that the cost of targeting these individuals can be substantially greater than attacking other criminals in the network. Moreover, in times of conflict, these central positions are often replaceable by other criminals. The resilience of a criminal network also depends on its level of &lt;a href=&#34;https://doi.org/10.1371/journal.pone.0236476&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;redundancy&lt;/a&gt;, that is, how easily the individuals are replaceable. These characteristics make dismantling criminal networks an arduous task.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Several approaches have been proposed for the purpose of dismantling networks. These approaches are divided into either link or node removal. &lt;a href=&#34;https://www.nature.com/articles/s41598-018-31902-8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Here&lt;/a&gt; you can see a comparative analysis of the main methods currently used in scientific research. In particular, I will be applying, on four &lt;a href=&#34;https://sites.google.com/site/ucinetsoftware/datasets/covert-networks/cocaine-smuggling?authuser=0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cocaine Smuggling Networks&lt;/a&gt;, a dismantling method proposed in a PNAS paper (&lt;a href=&#34;https://doi.org/10.1073/pnas.1806108116&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Generalized Network Dismantling&lt;/a&gt;). The advantage of this method is that it takes into account the cost of attacking the vertices. The cost of removing a vertex is its degree centrality and the algorithm finds a set of nodes whose removal results in the fragmentation of the network at minimal overall cost.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;To perform the dismantling analysis, I adapted Petter Holme&amp;rsquo;s &lt;a href=&#34;https://github.com/pholme/gnd/blob/master/gnd.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;implementation&lt;/a&gt;. Thanks to him, the method proposed in the paper was converted from &lt;a href=&#34;https://github.com/renxiaolong/Generalized-Network-Dismantling&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;C++&lt;/a&gt; to Python 2. I then converted it to Python 3 and applied it to the networks.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Ultimately, my main goals in this post are&lt;/p&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;Present the Generalized Network Dismantling (GND) method by examining its effectiveness and comparing the costs when the simplest dismantling approach (removing the highest degree vertices) is applied.&lt;/li&gt;
&lt;li&gt;Suggest that cocaine smuggling networks can be modeled via an extension of the Barabási-Albert model.&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h1 id=&#34;cocaine-trafficking-groups&#34;&gt;Cocaine trafficking groups&lt;/h1&gt;
&lt;br&gt;
&lt;p&gt;The &lt;a href=&#34;https://sites.google.com/site/ucinetsoftware/datasets/covert-networks/cocaine-smuggling?authuser=0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dataset&lt;/a&gt; contains information collected during police investigations of four groups involved in cocaine trafficking. These groups form networks in which the vertices represent the individuals and the links indicate their communications. The networks are shown below, with the size of each node proportional to its degree.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Operation &lt;strong&gt;MAMBO&lt;/strong&gt;: The investigation started in 2006 and involved Colombian citizens that were introducing 50 kg of cocaine to be adulterated and distributed in Madrid (Spain). Ultimately, the group was involved in smuggling cocaine from Colombia through Brazil and Uruguay to be distributed in Spain. This is a typical Spanish middle cocaine group acting as wholesale supplier between a South American importer group and retailers in Madrid.&lt;/p&gt;
&lt;div id=&#34;cocaine_smuggling_1&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;js/cocaine_smuggling_1.js&#34;&gt; &lt;/script&gt;
&lt;p style=&#34;text-align: center&#34;&gt;&lt;b&gt;Mambo network&lt;/b&gt;: 31 vertices and 58 edges.&lt;p/&gt;&lt;br&gt;
&lt;p&gt;Operation &lt;strong&gt;ACERO&lt;/strong&gt;: This investigation started in 2007 and involved a smaller family-based group. The group was composed mainly of members of a same family and was led by a female. They distributed cocaine in Madrid (Spain) that was provided to them by other groups based in a northwest region of the country, one of the most active areas in the provision of cocaine from the countries of origin. The group also had their own procedures to launder money.&lt;/p&gt;
&lt;div id=&#34;cocaine_smuggling_2&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;js/cocaine_smuggling_2.js&#34;&gt; &lt;/script&gt;
&lt;p style=&#34;text-align: center&#34;&gt;&lt;b&gt;Acero network&lt;/b&gt;: 25 vertices and 37 edges.&lt;p/&gt;&lt;br&gt;
&lt;p&gt;Operation &lt;strong&gt;JAKE&lt;/strong&gt;: In 2008, the group investigated was operating as a wholesale supplier and retail distributor of cocaine and heroin in a large distribution zone located in Madrid (Spain), where gypsy clans traditionally carry out similar activities. The group was in charge of acquiring, manipulating and selling the drugs in the gypsy quarter.&lt;/p&gt;
&lt;div id=&#34;cocaine_smuggling_3&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;js/cocaine_smuggling_3.js&#34;&gt; &lt;/script&gt;
&lt;p style=&#34;text-align: center&#34;&gt;&lt;b&gt;Jake network&lt;/b&gt;: 38 vertices and 50 edges.&lt;p/&gt;&lt;br&gt;
&lt;p&gt;Operation &lt;strong&gt;JUANES&lt;/strong&gt;: In 2009, the police investigation detected a group involved in the smuggling of cocaine from Mexico to be distributed in Madrid (Spain). In this case, the group operated in close cooperation with another organization that was laundering the illegal income from drug distribution from this and other groups. The cocaine traffickers earned an estimated EUR 60 million.&lt;/p&gt;
&lt;div id=&#34;cocaine_smuggling_4&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;js/cocaine_smuggling_4.js&#34;&gt; &lt;/script&gt;
&lt;p style=&#34;text-align: center&#34;&gt;&lt;b&gt;Juanes network&lt;/b&gt;: 51 vertices and 93 edges.&lt;p/&gt;&lt;br &gt;
&lt;p&gt;In terms of network metrics, these networks exhibit low &lt;a href=&#34;https://bookdown.org/omarlizardo/_main/2-9-density.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;density&lt;/a&gt; (i.e, they are sparse), negative &lt;a href=&#34;https://en.wikipedia.org/wiki/Assortativity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;assortativity&lt;/a&gt; (which means that high degree nodes have a slight tendency to connect to low degree nodes), and relatively low &lt;a href=&#34;https://en.wikipedia.org/wiki/Clustering_coefficient&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;average clustering&lt;/a&gt;. Since these networks are relatively small in size, an analysis of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Degree_distribution&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;degree distribution&lt;/a&gt; would not be so informative. However, a brief preliminary calculation using &lt;a href=&#34;https://pypi.org/project/powerlaw/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Powerlaw&lt;/a&gt;’s Python package showed that power law distributions were in better agreement compared to the exponential distributions. The community structure analysis was also not very helpful. Although I used &lt;a href=&#34;https://www.mapequation.org/infomap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Infomap&lt;/a&gt; to color the nodes according to each module, I was unable to find community structures using the &lt;a href=&#34;https://graph-tool.skewed.de/static/doc/demos/inference/inference.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bayesian SBM&lt;/a&gt;. Below are some of the main metrics I calculated for these networks.&lt;/p&gt;
&lt;br&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-0&#34;&gt;
  &lt;summary&gt;Click to show the density&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;smuggling_networks_density&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.125&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Mambo&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.123&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Acero&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.071&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Jake&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.073&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Juanes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-1&#34;&gt;
  &lt;summary&gt;Click to show the assortativity&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;smuggling_networks_assortativity&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.088&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Mambo&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.160&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Acero&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.173&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Jake &lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.081&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Juanes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-2&#34;&gt;
  &lt;summary&gt;Click to show average clustering&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;smuggling_networks_average_clustering&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.442&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Mambo&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.268&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Acero&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.110&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Jake&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.364&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Juanes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-3&#34;&gt;
  &lt;summary&gt;Click to show network efficiency&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;smuggling_networks_global_efficiency&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.473&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Mambo&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.481&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Acero&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.420&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Jake&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.373&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Juanes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-4&#34;&gt;
  &lt;summary&gt;Click to show average shortest path&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;smuggling_networks_average_shortest_path&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;2.473&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Mambo&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;2.413&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Acero&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;2.705&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Jake&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;3.308&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Juanes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-5&#34;&gt;
  &lt;summary&gt;Click to show the pseudo network diameter&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;smuggling_networks_global_efficiency&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;4.0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Mambo&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;5.0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Acero&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;4.0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Jake&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;7.0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Juanes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;br&gt;
&lt;h1 id=&#34;network-dismantling&#34;&gt;Network dismantling&lt;/h1&gt;
&lt;p&gt;The following video demonstrates a simple dismantling simulation of the Juanes network. For a better visualization, I have applied the basic approach based on degree. The purpose of this video is to show the network changing while the high degree nodes are being removed.&lt;/p&gt;
&lt;br&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/pUi6Qi8tzhA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;In the following figures, I show the (normalized) size of the largest connected component (LCC) as a function of the number of nodes removed. In each figure, pale pink represents the degree-based approach and pale blue represents the GND method&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. Since Petter Holme&amp;rsquo;s implementation comes with a randomness to make the output independent of the labeling of nodes, I have used average values. Moreover, in order to have a baseline, the black line shows the average of a random node removal approach and the shaded region represents a standard deviation band. The insets present the cumulative cost (i.e, the sum of the degrees) of removing the vertices.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;images/mambo.png&#34; width=&#34;900px&#34; height=&#34;563px&#34; /&gt;
    &lt;figcaption&gt;&lt;b&gt;Figure 2&lt;/b&gt;: Mambo network dismantling.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
    &lt;img src=&#34;images/acero.png&#34; width=&#34;900px&#34; height=&#34;563px&#34; /&gt;
    &lt;figcaption&gt;&lt;b&gt;Figure 3&lt;/b&gt;: Acero network dismantling.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
    &lt;img src=&#34;images/jake.png&#34; width=&#34;900px&#34; height=&#34;563px&#34; /&gt;
    &lt;figcaption&gt;&lt;b&gt;Figure 4&lt;/b&gt;: Jake network dismantling.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
    &lt;img src=&#34;images/juanes.png&#34; width=&#34;900px&#34; height=&#34;563px&#34; /&gt;
    &lt;figcaption&gt;&lt;b&gt;Figure 5&lt;/b&gt;: Juanes network dismantling.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;While both methods are better than random node removal, the degree-based dismantling seems to work better. However, this comes at a greater cost. As we can see, although the degree-based dismantling outperforms the GND method, the cost is always higher. Interestingly, we have a slightly different scenario for the Juanes network (&lt;b&gt;Figure 4&lt;/b&gt;). In this case, the GND cost is still lower, but both aproaches seem to perform equally well.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Overall, these two aproaches can also be useful as baselines. Costs curves from other aproaches could be compared against these two and this comparison may present an additional analysis for further consideration between cost and effectiveness.&lt;/p&gt;
&lt;br&gt;
&lt;h1 id=&#34;network-modeling&#34;&gt;Network modeling&lt;/h1&gt;
&lt;br&gt;
&lt;p&gt;Network models represent useful frameworks in which we can study complex real-world networks. Some random graph models and their extensions have been capable of reproducing the evolution and function of real systems and some of their main features. See &lt;a href=&#34;https://arxiv.org/abs/cond-mat/0303516&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; a relatively old but essential review of developments in this field.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Looking more closely at these cocaine smuggling networks, they seem to be based on preferential attachment. Some nodes have many connections to other nodes which, in turn, are not very well connected. This is an indication of preferential attachment, a core property of scale-free networks. Although I have not concluded that their distributions are adequately described by power laws, we could try to simulate these networks with a scale-free model.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;As a first guess, we could try using the well-known &lt;a href=&#34;https://barabasi.com/f/622.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Barabási–Albert model&lt;/a&gt;, since it is also able to generate networks with negative assortativity, low average clustering and low density. In this model, a network of size $n$ is grown by attaching new nodes each with $m$ edges that are preferentially attached to existing nodes with a high degree. However, if $m = 1$ the model networks have clustering coefficients equal to zero, but in the smuggling networks this coefficient is nonzero. We can try setting $m = 2$, but the graphs would (at least visually) clearly differ from the empirical networks. Click &lt;a href=&#34;images/barabasi.png&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; to see an example of this model for three different values of $m$.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;After doing some research, I found a version of the barabasi model called &lt;a href=&#34;https://arxiv.org/abs/1810.10538&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dual Barabási–Albert model&lt;/a&gt; (DBA), implemented in &lt;a href=&#34;https://networkx.org/documentation/stable/reference/generated/networkx.generators.random_graphs.dual_barabasi_albert_graph.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NetworkX&lt;/a&gt;. This model has two parameters that control the attachment probabilities of new nodes, described as follows. A graph of $n$ nodes is grown by attaching new nodes each with either $m_1$ edges (with probability $p$) or $m_2$ edges (with probability $1-p$), which are preferentially attached to existing nodes with a high degree. Moreover, as the authors of the paper explain, &amp;ldquo;the DBA model is not guaranteed to (and will likely not) yield power-law degree distributions&amp;rdquo;. Therefore, our ignorance regarding the degree distributions of the empirical networks is not of great concern.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;The network below is an example of a random network generated by this model. The visual similarity is surprising. If we look closely, we can see some of the connection patterns seen in the empirical networks.&lt;/p&gt;
&lt;br&gt;
&lt;div id=&#34;teste&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;js/teste.js&#34;&gt; &lt;/script&gt;
&lt;p style=&#34;text-align: center&#34;&gt;&lt;b&gt;Random network&lt;/b&gt;: A random network ($n = 38$, $m_1 = 1$, $m_2 = 5$ and $p = 0.7$) generated using the dual Barabási–Albert preferential attachment model. The resulting graph has 65 edges.&lt;p/&gt;&lt;br&gt;
&lt;br&gt;
&lt;p&gt;Of course, this is just one example with specific parameters. We obviously have a lot of room for parameter tuning here. However, in order to obtain the similar pattern of a high degree node connecting to many other nodes that themselves have just one connection, either $m_1$ or $m_2$ must be set equal to 1. The other parameters ($m_2$ and $p$) were chosen arbitrarily.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Naturally, we can examine whether the model networks also produce similar properties to those calculated for the empirical ones. The following values are averages, for every metric, of 1,000 networks grown using the model. Each one of these has the same size as the empirical smuggling networks. Also, in all calculations, I have set $m_1 = 1$, $m_2 = 5$ and $p = 0.7$ fixed. Ultimately, I could vary these parameters and possibly get better results by tuning them. However, as we can see below, the results are already pretty good.&lt;/p&gt;
&lt;br&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-7&#34;&gt;
  &lt;summary&gt;Click to show the density&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;smuggling_networks_density&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.125&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Mambo &lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.130&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.123&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Acero&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.156&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.071&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Jake&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.110&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.073&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Juanes&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.081&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-8&#34;&gt;
  &lt;summary&gt;Click to show the assortativity&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;smuggling_networks_assortativity&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.088&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Mambo&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.090&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.160&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Acero&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.108&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.173&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Jake &lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.082&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.081&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Juanes&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.067&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-9&#34;&gt;
  &lt;summary&gt;Click to show average clustering&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;smuggling_networks_average_clustering&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.442&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Mambo&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.207&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.268&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Acero&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.240&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.110&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Jake&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.180&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.364&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Juanes&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.151&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-10&#34;&gt;
  &lt;summary&gt;Click to show network efficiency&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;smuggling_networks_global_efficiency&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.473&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Mambo&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.473&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.481&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Acero&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.500&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.420&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Jake&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.425&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;0.373&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Juanes&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;0.424&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-11&#34;&gt;
  &lt;summary&gt;Click to show average shortest path&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;smuggling_networks_average_shortest_path&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;2.473&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Mambo&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;2.479&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;2.413&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Acero&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;2.372&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;2.705&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Jake&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;2.601&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;3.308&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Juanes&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;2.740&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-12&#34;&gt;
  &lt;summary&gt;Click to show the pseudo network diameter&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;n&#34;&gt;smuggling_networks_global_efficiency&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;4.0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Mambo&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;4.9&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;5.0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Acero&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;4.7&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;4.0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Jake&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;5.2&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;7.0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Juanes&lt;/span&gt;
&lt;span class=&#34;mf&#34;&gt;5.6&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Model &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;Obviously, even though the metrics are quite close, matching only six coefficients and a visual aspect is not enough to conclude that this model is an appropriate fit for smuggling networks. Also, we must remember that we only have four networks of this type. When more data of this type are available, we may be able to better support or refute this idea.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;whats-next&#34;&gt;What&amp;rsquo;s next?&lt;/h2&gt;
&lt;br&gt;
&lt;p&gt;I also performed a link prediction analysis using &lt;a href=&#34;https://snap.stanford.edu/node2vec/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Node2Vec&lt;/a&gt; and a &lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Random Forest Classifier&lt;/a&gt;. Since there is no information about the evolution of these networks over time, I tried to recreate a graph that might have existed at a previous point in time. To do this, I removed some links that would not completely affect the structure of the graphs. This gave me two snapshots of the networks and allowed me to test the link prediction. In the end, I got an AUC score greater than $0.7$ for all networks. I have not completed this analysis yet, so I may post the details in the future.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;The GND method uses a cascading approach for dismantling a network, meaning that measurements are updated after each deletion. For this reason, the same procedure was applied for the removal of the nodes with the highest degrees. The alternative approach, where the nodes to be removed are obtained only once, is known as &lt;a href=&#34;https://www.nature.com/articles/srep37954&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;simultaneous attack&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Visualizando a CPI da COVID</title>
      <link>https://alvarofrancomartins.com/post/cpi_covid/</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://alvarofrancomartins.com/post/cpi_covid/</guid>
      <description>&lt;script type=&#34;text/javascript&#34; src=&#34;https://d3js.org/d3.v6.min.js&#34;&gt;&lt;/script&gt;
&lt;!-- &lt;script type=&#34;text/javascript&#34; src=&#34;js/formatter.js&#34;&gt; &lt;/script&gt; --&gt;
&lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;css/style.css&#34;&gt;
&lt;p&gt;Nessa postagem apresento uma perspectiva inédita para entender as relações entre os citados pela CPI da COVID-19. Essa comissão parlamentar de inquérito apresenta uma rede de supostos envolvidos em diversos crimes, entre eles &lt;em&gt;corrupção ativa&lt;/em&gt;, &lt;em&gt;charlatanismo&lt;/em&gt;, &lt;em&gt;prevaricação&lt;/em&gt; e &lt;em&gt;fraude&lt;/em&gt;. Todas as informações são de público acesso e foram coletadas do &lt;a href=&#34;https://g1.globo.com/politica/cpi-da-covid/noticia/2021/10/20/cpi-da-covid-crimes-atribuidos-lista.ghtml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;portal G1&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Nossa análise terá o enfoque da &lt;a href=&#34;https://en.wikipedia.org/wiki/Network_science&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ciência de redes&lt;/a&gt;. A representação de dados em grafos fornece uma abordagem poderosa, capaz de revelar padrões e estruturas não triviais entre agentes que possuem alguma relação de conexão. A CPI da COVID apresenta &lt;strong&gt;24 acusações&lt;/strong&gt; e &lt;strong&gt;78 nomes&lt;/strong&gt; citados, resultando em um total de &lt;strong&gt;695 conexões&lt;/strong&gt;. Por meio de ferramentas advindas da teoria dos grafos, elaboramos uma visualização dessa rede, calculamos algumas medidas de centralidade e mostramos que ela possui uma estrutura de comunidades.&lt;/p&gt;
&lt;br&gt;
&lt;h1 id=&#34;a-rede-da-cpi-da-covid&#34;&gt;A rede da CPI da COVID&lt;/h1&gt;
&lt;p&gt;Uma rede (ou grafo) é composta por vértices (pessoas, no nosso caso) e ligações entre esses vértices. Aqui, a ligação entre duas pessoas ocorre se elas foram acusadas de um mesmo crime&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. Abaixo você encontra uma visualização interativa dessa rede, com 75 nomes&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; e 695 conexões. Cada vértice possui um tamanho proporcional ao seu número de ligações e, ao passar ao mouse sobre os vértices, você pode ver suas quantidades de conexões e acusações.&lt;/p&gt;
&lt;div id=&#34;cpi_covid&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;js/cpi_covid.js&#34;&gt; &lt;/script&gt;
&lt;p style=&#34;text-align: center&#34;&gt;&lt;b&gt;Rede da CPI da COVID&lt;/b&gt;: 24 acusações, 75 vértices e 695 conexões.&lt;p/&gt;&lt;br&gt;
&lt;p&gt;O aspecto visual dessa rede oferece algumas pistas. Notamos que possuir muitas acusações nem sempre significa que o vértice realiza um grande número de conexões. Isto é, determinados tipos de acusação englobam poucas pessoas, enquanto outros englobam mais pessoas. Por exemplo, existem diversos vértices com várias acusações e poucas conexões (Francisco Emerson Maximiano, Emanuela Medrades, etc) e diversos vértices com poucas acusações e várias conexões (Osmar Terra, Ernesto Araújo, etc). Por outro lado, os dois maiores vértices da rede, Jair Bolsonaro com 49 conexões possui 9 acusações e Ricardo Barros com 43 conexões possui 4 acusações.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Podemos ser mais quantitativos e calcular algumas medidas dessa rede a fim de caracterizá-la. Essa rede apresenta um &lt;a href=&#34;https://pt.wikipedia.org/wiki/Coeficiente_de_agrupamento&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;coeficiente de agrupamento médio&lt;/a&gt; alto (0,87), uma &lt;a href=&#34;https://bookdown.org/omarlizardo/_main/2-9-density.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;densidade&lt;/a&gt; considerável (0,25) e um valor de &lt;a href=&#34;https://graph-tool.skewed.de/static/doc/topology.html#graph_tool.topology.pseudo_diameter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;diâmetro&lt;/a&gt; relativamente baixo (4,0). Além disso, o &lt;a href=&#34;https://networkx.org/nx-guides/content/algorithms/assortativity/correlation.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;coeficiente de assortividade&lt;/a&gt; dessa rede possui um valor positivo (0,23), nos permitindo concluir que os indivíduos possuem a tendência de se conectar com vértices que possuem importância (em termos de número de conexões) similar. De forma geral, essas medidas sugerem que estamos tratando de uma rede bastante coesa.&lt;/p&gt;
&lt;h1 id=&#34;medidas-de-centralidade&#34;&gt;Medidas de Centralidade&lt;/h1&gt;
&lt;h2 id=&#34;grau&#34;&gt;Grau&lt;/h2&gt;
&lt;p&gt;A centralidade de &lt;strong&gt;grau&lt;/strong&gt; oferece uma das grandezas mais básicas de redes. O grau de um vértice representa simplesmente seu número de conexões. Valores mais altos dessa grandeza indicam &lt;strong&gt;indivíduos populares&lt;/strong&gt; e que possuem uma &lt;strong&gt;posição privilegiada&lt;/strong&gt; na rede. A &lt;b&gt;Figura 1&lt;/b&gt; mostra os nomes dos vértices da rede que possuem os maiores valores de grau. No nosso caso, um grau elevado indica que a pessoa está sendo acusada por crime(s) com grande número de acusados, enquanto um grau reduzido indica que as acusações são por crimes com baixo número de acusados.&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;div id=&#34;barplots_degree&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;js/barplots_degree.js&#34;&gt; &lt;/script&gt;
&lt;p style=&#34;text-align: center&#34;&gt;&lt;b&gt;Figura 1&lt;/b&gt;: Dez nomes da rede que possuem os maiores valores de &lt;b&gt;grau&lt;/b&gt;.&lt;p/&gt;&lt;br&gt;
&lt;h2 id=&#34;intermediação&#34;&gt;Intermediação&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;intermediação&lt;/strong&gt; quantifica o número de vezes que um vértice age como ponte de comunicação entre dois vértices quaisquer da rede. Mais especificamente, para um determinado vértice, essa medida representa a quantidade de vezes que ele atua como intermediário das comunicações. Pessoas com alto valor de intermediação conseguem &lt;strong&gt;transmitir informações com facilidade&lt;/strong&gt; e também têm tendência a serem &lt;strong&gt;bem informadas&lt;/strong&gt;. No nosso caso, esses indivíduos são aqueles que atuam como pontes entre os acusados de diferentes crimes presentes na rede. A &lt;b&gt;Figura 2&lt;/b&gt; mostra os nomes dos vértices da rede que possuem os maiores valores de intermediação.&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;div id=&#34;barplots_bets&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;js/barplots_bets.js&#34;&gt; &lt;/script&gt;
&lt;p style=&#34;text-align: center&#34;&gt;&lt;b&gt;Figura 2&lt;/b&gt;: Dez nomes da rede que possuem os maiores valores de &lt;b&gt;intermediação&lt;/b&gt;.&lt;p/&gt;&lt;br&gt;
&lt;h2 id=&#34;proximidade&#34;&gt;Proximidade&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;proximidade&lt;/strong&gt; de um vértice quantifica sua distância média em relação a todos os outros vértices. Dessa forma, pessoas com maiores valores de proximidade estão, em média, &lt;strong&gt;mais perto de todas&lt;/strong&gt; as outras pessoas. Numa rede social, por exemplo, a pessoa com maior proximidade, assim como para intermediação, consegue &lt;strong&gt;disseminar melhor as informações&lt;/strong&gt;. No nosso caso, pessoas com alta proximidade são aquelas que, por compartilharem acusações com muitas outras, possuem uma distância próxima da maioria dos acusados. A &lt;b&gt;Figura 3&lt;/b&gt; mostra os nomes dos vértices da rede que possuem os maiores valores de proximidade.&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;div id=&#34;barplots_clos&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;js/barplots_clos.js&#34;&gt; &lt;/script&gt;
&lt;p style=&#34;text-align: center&#34;&gt;&lt;b&gt;Figura 3&lt;/b&gt;: Dez nomes da rede que possuem os maiores valores de &lt;b&gt;proximidade&lt;/b&gt;.&lt;p/&gt;&lt;br&gt;
&lt;p&gt;Do ponto de vista técnico, apesar de aparentarem ser medidas parecidas, a intermediação e a proximidade medem características diferentes: a intermediação fornece um quantitativo de &lt;strong&gt;quantos caminhos&lt;/strong&gt; passam por determinado vértice durante a comunicação entre todos os vértices da rede e a proximidade, por outro lado, quantifica a &lt;strong&gt;distância média&lt;/strong&gt; de um vértice em relação aos demais. Podemos dizer que pessoas com maior intermediação (ou proximidade) possuem influência considerável na rede por virtude de seu &lt;strong&gt;controle sobre a informação que circula&lt;/strong&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Considerando os dados da CPI da COVID, a conexão entre duas pessoas significa simplesmente que a elas foi atribuído o mesmo crime. Portanto, as medidas de centralidade acima devem ser interpretadas com cautela. No entanto, caso as acusações e suas conexões sejam comprovadas, as medidas terão a interpretação usual e poderemos destacar com mais certeza os indivíduos importantes na concretização e articulação dos crimes.&lt;/p&gt;
&lt;br&gt;
&lt;h1 id=&#34;estrutura-de-comunidades&#34;&gt;Estrutura de Comunidades&lt;/h1&gt;
&lt;p&gt;A estrutura de comunidades (ou módulos) é uma propriedade encontrada em diversos tipos de redes. De forma simplificada, essas comunidades podem ser pensadas como &lt;strong&gt;grupos de vértices mais densamente conectados&lt;/strong&gt; entre si do que com outros grupos de vértices da rede. A detecção dessas estruturas pode fornecer informações importantes. Em geral, redes e organizações criminosas possuem a tendência de formar comunidades com a finalidade de reduzir o risco de vazamento de informações.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Com o objetivo de encontrar a estrutura de comunidades da rede da CPI, utilizamos um algoritmo de detecção de comunidades conhecido como &lt;em&gt;infomap&lt;/em&gt;&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;. A visualização abaixo apresenta a rede da CPI da COVID com destaque para sua estrutura modular, onde as cores representam as diferentes comunidades encontradas.&lt;/p&gt;
&lt;br&gt;
&lt;div id=&#34;cpi_covid_modulos&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;js/cpi_covid_modulos.js&#34;&gt; &lt;/script&gt;
&lt;p style=&#34;text-align: center&#34;&gt;&lt;b&gt;Rede da CPI da COVID&lt;/b&gt;: Destaque para 5 comunidades encontradas.&lt;p/&gt;&lt;br&gt;
&lt;p&gt;No total, nossa análise retornou 5 comunidades&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;. Portanto, o número de supostos crimes (24) é quase cinco vezes esse valor. Esse resultado surpreende, uma vez que tende-se a imaginar que a maioria dos crimes configurariam suas próprias comunidades. No entanto, o resultado sugere que vários desses supostos crimes podem ser considerados como um só.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Para se ter uma ideia quantitativa dessas comunidades, a &lt;b&gt;Figura 6&lt;/b&gt; mostra o número de pessoas e supostos crimes dentro de cada um dos módulos. Os valores do eixo-x representam cada comunidade, de acordo com os índices mostrados na rede acima. Além disso, as cores das barras também são correspondentes às cores de cada comunidade.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;button class=&#34;btn btn-secondary btn-lg&#34; onclick=&#34;update(&#39;pessoas&#39;)&#34;&gt;Número de pessoas&lt;/button&gt;
&lt;button class=&#34;btn btn-secondary btn-lg&#34; onclick=&#34;update(&#39;crimes&#39;)&#34;&gt; Número de crimes&lt;/button&gt;&lt;/p&gt;
&lt;br&gt;
&lt;div id=&#34;barplots_nc&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;js/barplots_nc.js&#34;&gt; &lt;/script&gt;
&lt;p style=&#34;text-align: center&#34;&gt;&lt;b&gt;Figura 6&lt;/b&gt;: Número de pessoas e seus supostos crimes dentro de cada comunidade.&lt;p/&gt;&lt;br&gt;
&lt;p&gt;Existem outras inúmeras informações desses dados que poderíamos explorar. A próxima análise que, ao meu ver, seria interessante realizar, é verificar se a distribuição de grau da rede apresenta algum padrão. Ou ainda, explorar a informação sobre o número de acusações dos citados: encontrar, por exemplo, se existe alguma relação entre o número de acusações de cada pessoa e suas medidas de centralidade.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Poderíamos ir além e agregar outras informações não contidas nesse conjunto de dados. Um exemplo seria considerar as funções (ou cargos) dos acusados. Isso nos possibilitaria verificar a existência de cargos mais privilegiados na rede. As opções são inúmeras. Entretanto, deixarei essas questões em aberto para o caso de alguma colaboração futura. Caso você tenha interesse em trabalhar com esses dados, não hesite em me &lt;a href=&#34;mailto:alvarought@gmail.com&#34;&gt;contatar&lt;/a&gt;. Também fico à disposição para quaisquer dúvidas.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Por fim, agradeço a contribuição dos colegas &lt;a href=&#34;https://www.linkedin.com/in/diego-domingues-lopes-963a761b9/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diego Domingues Lopes&lt;/a&gt; e &lt;a href=&#34;https://ansesu.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Andre Seiji Sunahara&lt;/a&gt; na elaboração dessa postagem.&lt;/p&gt;
&lt;br&gt;
&lt;h1 id=&#34;informações-gerais&#34;&gt;Informações gerais&lt;/h1&gt;
&lt;p&gt;Abaixo você encontra quatro tabelas contendo os dados da rede da CPI. As duas primeiras oferecem uma checagem rápida dos acusados e de seus supostos crimes, e as duas últimas contém essas informações&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt; para cada comunidade.&lt;/p&gt;
&lt;h2 id=&#34;acusados-e-seus-supostos-crimes&#34;&gt;Acusados e seus supostos crimes&lt;/h2&gt;
&lt;br&gt;

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
* {
  box-sizing: border-box;
}

#myInput {
  padding: 12px 20px 12px 40px;
  border: 1px solid #ddd;
  display: block;
  margin-bottom: 12px;
  margin-left: 2.5%;
}

#myTable {
  border-collapse: collapse;
  width:  95%;
  max-height: 400px;
  overflow-x:auto;
  font-size: 18px;
}

#myTable th, #myTable td {
  text-align: left;
  margin: 0 auto;
  padding: 20px;
}

/* Table Striped */
table &gt; tbody &gt; tr:nth-child(odd) &gt; td,
table &gt; tbody &gt; tr:nth-child(odd) &gt; th {
  background-color: #ffffff; }

table &gt; tbody &gt; tr:hover &gt; td,
table &gt; tbody &gt; tr:hover &gt; th {
  background-color: #f5f5f5; }

&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;input type=&#34;text&#34; id=&#34;myInput&#34; onkeyup=&#34;myFunction()&#34; placeholder=&#34;Buscar nome...&#34; title=&#34;Digite um nome&#34;&gt;

&lt;table id=&#34;myTable&#34; style=&#34;margin: 0px auto;&#34;&gt;
  &lt;tr class=&#34;header1&#34;&gt;
    &lt;th style=&#34;width:600px; background-color:  #f5f5f5; color: black;&#34;&gt;Nome&lt;/th&gt;
    &lt;th style=&#34;width:600px; background-color:  #f5f5f5; color: black;&#34;&gt;Acusações&lt;/th&gt;
  &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Roberto Dias&lt;/td&gt;
    &lt;td&gt;Formação de Organização Criminosa, Improbidade Administrativa, Corrupção Passiva&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Paolo Zanotto&lt;/td&gt;
    &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
    &lt;td&gt;Prevaricação, Epidemia com Resultado em Morte, Crime Contra Humanidade&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Bia Kicis&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Carlos Wizard&lt;/td&gt;
    &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Regina Célia Oliveira&lt;/td&gt;
    &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Rodrigo Esper&lt;/td&gt;
    &lt;td&gt;Crime Contra Humanidade, Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
    &lt;td&gt;Corrupção Ativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Osmar Terra&lt;/td&gt;
    &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Marcelo Bento Pires&lt;/td&gt;
    &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
    &lt;td&gt;Prevaricação, Advocacia Administrativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Fernando Parrillo&lt;/td&gt;
    &lt;td&gt;Falsidade Ideológica, Crime Contra Humanidade, Perigo Para a vida ou Saúde de Outrem, Omissão de Notificação de Doença&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Carla Guerra&lt;/td&gt;
    &lt;td&gt;Crime Contra Humanidade, Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
    &lt;td&gt;Prevaricação, Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Marcelo Blanco&lt;/td&gt;
    &lt;td&gt;Corrupção Ativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Filipe Martins&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Wilson Lima&lt;/td&gt;
    &lt;td&gt;Prevaricação, Crimes de Responsabilidade&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Roberto Jefferson&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
    &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
    &lt;td&gt;Prevaricação&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Bernardo Kuster&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
    &lt;td&gt;Corrupção Ativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;José Odilon Torres&lt;/td&gt;
    &lt;td&gt;Corrupção Ativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Paola Werneck&lt;/td&gt;
    &lt;td&gt;Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Carlos Jordy&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
    &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
    &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
    &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
    &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Marcos Tolentino&lt;/td&gt;
    &lt;td&gt;Formação de Organização Criminosa, Improbidade Administrativa, Fraude em Contrato&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
    &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Emanuela Medrades&lt;/td&gt;
    &lt;td&gt;Formação de Organização Criminosa, Improbidade Administrativa, Falsidade Ideológica, Fraude Processual, Uso de Documento Falso&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
    &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Airton Soligo&lt;/td&gt;
    &lt;td&gt;Usurpação de Função Pública&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Leandro Ruschel&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
    &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
    &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Allan dos Santos&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;José Alves Filho&lt;/td&gt;
    &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Alex Lial Marinho&lt;/td&gt;
    &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
    &lt;td&gt;Falsidade Ideológica, Crime Contra Humanidade, Perigo Para a vida ou Saúde de Outrem, Omissão de Notificação de Doença&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;José Ricardo Santana&lt;/td&gt;
    &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
    &lt;td&gt;Incitação ao crime, Crime Contra Humanidade&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Luciano Hang&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Danilo Trento&lt;/td&gt;
    &lt;td&gt;Formação de Organização Criminosa, Improbidade Administrativa, Fraude em Contrato&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Wagner Rosário&lt;/td&gt;
    &lt;td&gt;Prevaricação&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Arthur Weintraub&lt;/td&gt;
    &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Paulo Eneas&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
    &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Carla Zambelli&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
    &lt;td&gt;Prevaricação, Epidemia com Resultado em Morte, Crime Contra Humanidade, Emprego Irregular de Verbas Públicas, Comunicação Falsa de Crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
    &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
    &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
    &lt;td&gt;Formação de Organização Criminosa, Improbidade Administrativa, Fraude em Contrato, Falsidade Ideológica, Fraude Processual, Uso de Documento Falso&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Richards Pozzer&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Ricardo Barros&lt;/td&gt;
    &lt;td&gt;Incitação ao crime, Advocacia Administrativa, Formação de Organização Criminosa, Improbidade Administrativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
    &lt;td&gt;Falsidade Ideológica, Crime Contra Humanidade, Perigo Para a vida ou Saúde de Outrem, Omissão de Notificação de Doença&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
    &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Thiago Fernandes da Costa&lt;/td&gt;
    &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Ernesto Araújo&lt;/td&gt;
    &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Fernando Oikawa&lt;/td&gt;
    &lt;td&gt;Crime Contra Humanidade, Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Roberto Goidanich&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Túlio Silveira&lt;/td&gt;
    &lt;td&gt;Improbidade Administrativa, Falsidade Ideológica, Uso de Documento Falso&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
    &lt;td&gt;Incitação ao crime, Prevaricação, Epidemia com Resultado em Morte, Crime Contra Humanidade, Emprego Irregular de Verbas Públicas, Crimes de Responsabilidade, Charlatanismo, Infração a Medidas Sanitárias Preventivas, Falsificação de Documento Particular&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Amilton Gomes de Paula&lt;/td&gt;
    &lt;td&gt;Tráfico de Influência&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
    &lt;td&gt;Incitação ao crime&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Elcio Franco&lt;/td&gt;
    &lt;td&gt;Improbidade Administrativa, Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
    &lt;td&gt;Corrupção Ativa&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
    &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Daniella de Aguiar Moreira da Silva&lt;/td&gt;
    &lt;td&gt;Tentativa de Homicídio&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Braga Netto&lt;/td&gt;
    &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Luciano Dias&lt;/td&gt;
    &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
   &lt;/tr&gt;
&lt;/table&gt;

&lt;script&gt;
function myFunction() {
  var input, filter, table, tr, td, i, txtValue;
  input = document.getElementById(&#34;myInput&#34;);
  filter = input.value.toUpperCase();
  table = document.getElementById(&#34;myTable&#34;);
  tr = table.getElementsByTagName(&#34;tr&#34;);
  for (i = 0; i &lt; tr.length; i++) {
    td = tr[i].getElementsByTagName(&#34;td&#34;)[0];
    if (td) {
      txtValue = td.textContent || td.innerText;
      if (txtValue.toUpperCase().indexOf(filter) &gt; -1) {
        tr[i].style.display = &#34;&#34;;
      } else {
        tr[i].style.display = &#34;none&#34;;
      }
    }       
  }
}
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;

&lt;br&gt;
&lt;h2 id=&#34;acusados-que-compartilham-as-mesmas-acusações&#34;&gt;Acusados que compartilham as mesmas acusações&lt;/h2&gt;
&lt;br&gt;

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
* {
  box-sizing: border-box;
}

#myInput2 {
  padding: 12px 20px 12px 40px;
  border: 1px solid #ddd;
  display: block;
  /*margin-right: auto;*/
  /*margin-left: 25%; */
  margin-bottom: 12px;
  margin-left: 2.5%;
}

#myTable2 {
  border-collapse: collapse;
  width:  95%;
  max-height: 470px;
  overflow-x:auto;
  font-size: 18px;
}

#myTable2 th, #myTable2 td {
  text-align: left;
  margin: 0 auto;
  padding: 20px;
}

#myTable2 th, #myTable2 td {
  text-align: left;
  margin: 0 auto;
  padding: 20px;
}

&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;input type=&#34;text&#34; id=&#34;myInput2&#34; onkeyup=&#34;myFunction2()&#34; placeholder=&#34;Buscar nome...&#34; title=&#34;Digite um nome&#34;&gt;

&lt;table id=&#34;myTable2&#34; style=&#34;margin: 10px auto;&#34;&gt;
  &lt;tr class=&#34;header2&#34;&gt;
    &lt;th style=&#34;width:300px; background-color: #f5f5f5; color: black;&#34;&gt;Pessoa 1&lt;/th&gt;
    &lt;th style=&#34;width:300px; background-color: #f5f5f5; color: black;&#34;&gt;Pessoa 2&lt;/th&gt;
    &lt;th style=&#34;width:600px; background-color: #f5f5f5; color: black;&#34;&gt;Supostos crimes compartilhados&lt;/th&gt;
  &lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Thiago Fernandes da Costa&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Uso de Documento Falso, Falsidade Ideológica, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Thiago Fernandes da Costa&lt;/td&gt;
            &lt;td&gt;Marcelo Bento Pires&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Prevaricação, Crime Contra Humanidade, Emprego Irregular de Verbas Públicas, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Alex Lial Marinho&lt;/td&gt;
            &lt;td&gt;Regina Célia Oliveira&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Uso de Documento Falso, Falsidade Ideológica, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paola Werneck&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Fraude em Contrato, Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Uso de Documento Falso, Falsidade Ideológica, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Prevaricação, Crimes de Responsabilidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Paola Werneck&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Fraude em Contrato, Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade, Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Alex Lial Marinho&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Paola Werneck&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Prevaricação, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paola Werneck&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Regina Célia Oliveira&lt;/td&gt;
            &lt;td&gt;Thiago Fernandes da Costa&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Alex Lial Marinho&lt;/td&gt;
            &lt;td&gt;Marcelo Bento Pires&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade, Omissão de Notificação de Doença, Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Thiago Fernandes da Costa&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Bento Pires&lt;/td&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Prevaricação, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Marcelo Bento Pires&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Prevaricação, Crime Contra Humanidade, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Fraude em Contrato, Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade, Omissão de Notificação de Doença, Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade, Omissão de Notificação de Doença, Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Paola Werneck&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Paola Werneck&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Paola Werneck&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade, Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paola Werneck&lt;/td&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Bento Pires&lt;/td&gt;
            &lt;td&gt;Regina Célia Oliveira&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Regina Célia Oliveira&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Prevaricação, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Fraude Processual, Falsidade Ideológica, Formação de Organização Criminosa, Uso de Documento Falso, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Thiago Fernandes da Costa&lt;/td&gt;
            &lt;td&gt;Regina Célia Oliveira&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Prevaricação, Crime Contra Humanidade, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paola Werneck&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Bento Pires&lt;/td&gt;
            &lt;td&gt;Alex Lial Marinho&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Prevaricação, Crimes de Responsabilidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Uso de Documento Falso, Falsidade Ideológica, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Prevaricação, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Alex Lial Marinho&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade, Omissão de Notificação de Doença, Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Bento Pires&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paola Werneck&lt;/td&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Regina Célia Oliveira&lt;/td&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Fraude em Contrato, Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Thiago Fernandes da Costa&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Paola Werneck&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Prevaricação, Crime Contra Humanidade, Emprego Irregular de Verbas Públicas, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Thiago Fernandes da Costa&lt;/td&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Prevaricação, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Fraude em Contrato, Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade, Omissão de Notificação de Doença, Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Regina Célia Oliveira&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Fraude em Contrato, Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Wilson Lima&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade, Omissão de Notificação de Doença, Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Regina Célia Oliveira&lt;/td&gt;
            &lt;td&gt;Alex Lial Marinho&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Prevaricação, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Raimundo Nonato Brasil&lt;/td&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Alex Lial Marinho&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luiz Paulo Dominghetti&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Fraude Processual, Falsidade Ideológica, Formação de Organização Criminosa, Uso de Documento Falso, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Prevaricação, Crime Contra Humanidade, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Marconny Nunes Ribeiro&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Danilo Trento&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa, Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Marcos Tolentino&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Thiago Fernandes da Costa&lt;/td&gt;
            &lt;td&gt;Alex Lial Marinho&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Cristiano Carvalho&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Carla Guerra&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Regina Célia Oliveira&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paola Werneck&lt;/td&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rodrigo Esper&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Alex Lial Marinho&lt;/td&gt;
            &lt;td&gt;Thiago Fernandes da Costa&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Marcelo Bento Pires&lt;/td&gt;
            &lt;td&gt;Thiago Fernandes da Costa&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Regina Célia Oliveira&lt;/td&gt;
            &lt;td&gt;Marcelo Bento Pires&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Mayra Pinheiro&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Prevaricação, Crime Contra Humanidade, Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;José Alves Filho&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Braga Netto&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Marcelo Blanco&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Wagner Rosário&lt;/td&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Emanuela Medrades&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Alex Lial Marinho&lt;/td&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Daniel Garrido Baena&lt;/td&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Túlio Silveira&lt;/td&gt;
            &lt;td&gt;João Paulo F. Barros&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernanda de Oliveira Igarashi&lt;/td&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Falsidade Ideológica&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Odilon Torres&lt;/td&gt;
            &lt;td&gt;Rafael Francisco Carmo Alves&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Pedro Benedito Batista Junior&lt;/td&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Perigo Para a vida ou Saúde de Outrem, Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Luciano Hang&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Richards Pozzer&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Marcelo Bento Pires&lt;/td&gt;
            &lt;td&gt;Advocacia Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Parrillo&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Tercio Arnaud Tomaz&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Ricardo Barros&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Roberto Jefferson&lt;/td&gt;
            &lt;td&gt;Carla Zambelli&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Roberto Goidanich&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Teresa Cristina Reis de Sá&lt;/td&gt;
            &lt;td&gt;Carlos Alberto de Sá&lt;/td&gt;
            &lt;td&gt;Corrupção Ativa, Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Luciano Dias&lt;/td&gt;
            &lt;td&gt;Arthur Weintraub&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Cadegiani&lt;/td&gt;
            &lt;td&gt;Fernando Parrillo&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Ernesto Araújo&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Filipe Martins&lt;/td&gt;
            &lt;td&gt;Leandro Ruschel&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;José Ricardo Santana&lt;/td&gt;
            &lt;td&gt;Roberto Dias&lt;/td&gt;
            &lt;td&gt;Formação de Organização Criminosa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Bernardo Kuster&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Fernando Oikawa&lt;/td&gt;
            &lt;td&gt;Onyx Lorenzoni&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Hélio Angotti Netto&lt;/td&gt;
            &lt;td&gt;Paulo Eneas&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Pazuello&lt;/td&gt;
            &lt;td&gt;Marcellus José Barroso Campêlo&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Nise Yamaguchi&lt;/td&gt;
            &lt;td&gt;Marcelo Queiroga&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Bia Kicis&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Fábio Wajngarten&lt;/td&gt;
            &lt;td&gt;Prevaricação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Otávio Fakhoury&lt;/td&gt;
            &lt;td&gt;Carlos Jordy&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Elcio Franco&lt;/td&gt;
            &lt;td&gt;Mauro Luiz de Brito Ribeiro&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Osmar Terra&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Flávio Adsuara Cadegiani&lt;/td&gt;
            &lt;td&gt;Jair Bolsonaro&lt;/td&gt;
            &lt;td&gt;Crime Contra Humanidade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Heitor Freire de Abreu&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Francisco Emerson Maximiano&lt;/td&gt;
            &lt;td&gt;Andreia da Silva Lima&lt;/td&gt;
            &lt;td&gt;Improbidade Administrativa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Bolsonaro&lt;/td&gt;
            &lt;td&gt;Flávio Bolsonaro&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Allan dos Santos&lt;/td&gt;
            &lt;td&gt;Oswaldo Eustáquio&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Eduardo Bolsonaro&lt;/td&gt;
            &lt;td&gt;Luis Carlos Heinze&lt;/td&gt;
            &lt;td&gt;Incitação ao crime&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
            &lt;td&gt;Carlos Wizard&lt;/td&gt;
            &lt;td&gt;Paolo Zanotto&lt;/td&gt;
            &lt;td&gt;Epidemia com Resultado em Morte&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;script&gt;
function myFunction2() {
  var input, filter, table, tr, td, i, txtValue;
  input = document.getElementById(&#34;myInput2&#34;);
  filter = input.value.toUpperCase();
  table = document.getElementById(&#34;myTable2&#34;);
  tr = table.getElementsByTagName(&#34;tr&#34;);
  for (i = 0; i &lt; tr.length; i++) {
    td = tr[i].getElementsByTagName(&#34;td&#34;)[0];
    if (td) {
      txtValue = td.textContent || td.innerText;
      if (txtValue.toUpperCase().indexOf(filter) &gt; -1) {
        tr[i].style.display = &#34;&#34;;
      } else {
        tr[i].style.display = &#34;none&#34;;
      }
    }       
  }
}
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;

&lt;br&gt;
&lt;h2 id=&#34;acusados-dentro-de-cada-comunidade&#34;&gt;Acusados dentro de cada comunidade&lt;/h2&gt;
&lt;br&gt;

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
* {
  box-sizing: border-box;
}

#myTable3 {
  border-collapse: collapse;
  width:  95%;
  max-height: 470px;
  overflow-x:auto;
  font-size: 18px;
}

#myTable3 th, #myTable3 td {
  text-align: left;
  margin: 0 auto;
  padding: 20px;
}

#myTable3 th, #myTable3 td {
  text-align: left;
  margin: 0 auto;
  padding: 20px;
}

&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;table type=&#34;text&#34; id=&#34;myTable3&#34; style=&#34;margin: 10px auto;&#34;&gt;
  &lt;tr class=&#34;header2&#34;&gt;
    &lt;th style=&#34;width:600px; background-color: #f5f5f5; color: black;&#34;&gt;Índice da comunidade&lt;/th&gt;
    &lt;th style=&#34;width:600px; background-color: #f5f5f5; color: black;&#34;&gt;Pessoas&lt;/th&gt;
  &lt;/tr&gt;
&lt;tr&gt;
                &lt;td&gt;1&lt;/td&gt;
                &lt;td&gt;Bernardo Kuster, Osmar Terra, Carlos Bolsonaro, Tercio Arnaud Tomaz, Flávio Bolsonaro, Richards Pozzer, Onyx Lorenzoni, Leandro Ruschel, Filipe Martins, Roberto Goidanich, Ernesto Araújo, Ricardo Barros, Carlos Jordy, Hélio Angotti Netto, Allan dos Santos, Luis Carlos Heinze, Luciano Hang, Oswaldo Eustáquio, Carla Zambelli, Bia Kicis, Jair Bolsonaro, Otávio Fakhoury, Roberto Jefferson, Paulo Eneas, Eduardo Bolsonaro, Carlos Wizard&lt;/td&gt;
    &lt;/tr&gt;
&lt;tr&gt;
                &lt;td&gt;2&lt;/td&gt;
                &lt;td&gt;Paolo Zanotto, José Alves Filho, Wagner Rosário, Wilson Lima, Elcio Franco, Heitor Freire de Abreu, Eduardo Pazuello, Arthur Weintraub, Nise Yamaguchi, Luciano Dias, Mayra Pinheiro, Marcelo Queiroga, Braga Netto, Mauro Luiz de Brito Ribeiro, Marcellus José Barroso Campêlo&lt;/td&gt;
    &lt;/tr&gt;
&lt;tr&gt;
                &lt;td&gt;3&lt;/td&gt;
                &lt;td&gt;José Odilon Torres, Marcos Tolentino, Túlio Silveira, Francisco Emerson Maximiano, Raimundo Nonato Brasil, Luiz Paulo Dominghetti, Andreia da Silva Lima, José Ricardo Santana, Teresa Cristina Reis de Sá, Marconny Nunes Ribeiro, Roberto Dias, Rafael Francisco Carmo Alves, Cristiano Carvalho, Emanuela Medrades, Carlos Alberto de Sá, Marcelo Blanco, Danilo Trento&lt;/td&gt;
    &lt;/tr&gt;
&lt;tr&gt;
                &lt;td&gt;4&lt;/td&gt;
                &lt;td&gt;Eduardo Parrillo, João Paulo F. Barros, Paola Werneck, Rodrigo Esper, Fernando Oikawa, Flávio Cadegiani, Daniel Garrido Baena, Pedro Benedito Batista Junior, Flávio Adsuara Cadegiani, Fernando Parrillo, Fernanda de Oliveira Igarashi, Carla Guerra&lt;/td&gt;
    &lt;/tr&gt;
&lt;tr&gt;
                &lt;td&gt;5&lt;/td&gt;
                &lt;td&gt;Thiago Fernandes da Costa, Marcelo Bento Pires, Regina Célia Oliveira, Fábio Wajngarten, Alex Lial Marinho&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;/body&gt;
&lt;/html&gt;

&lt;br&gt;
&lt;h2 id=&#34;supostos-crimes-dentro-de-cada-comunidade&#34;&gt;Supostos crimes dentro de cada comunidade&lt;/h2&gt;
&lt;br&gt;

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
* {
  box-sizing: border-box;
}

#myTable4 {
  border-collapse: collapse;
  width:  95%;
  max-height: 470px;
  overflow-x:auto;
  font-size: 18px;
}

#myTable4 th, #myTable4 td {
  text-align: left;
  margin: 0 auto;
  padding: 20px;
}

#myTable4 th, #myTable4 td {
  text-align: left;
  margin: 0 auto;
  padding: 20px;
}

&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;table type=&#34;text&#34; id=&#34;myTable4&#34; style=&#34;margin: 10px auto;&#34;&gt;
  &lt;tr class=&#34;header2&#34;&gt;
    &lt;th style=&#34;width:600px; background-color: #f5f5f5; color: black;&#34;&gt;Índice da comunidade&lt;/th&gt;
    &lt;th style=&#34;width:600px; background-color: #f5f5f5; color: black;&#34;&gt;Supostos crimes&lt;/th&gt;
  &lt;/tr&gt;
&lt;tr&gt;
                &lt;td&gt;1&lt;/td&gt;
                &lt;td&gt;Prevaricação, Infração a Medidas Sanitárias Preventivas, Advocacia Administrativa, Improbidade Administrativa, Epidemia com Resultado em Morte, Incitação ao crime, Falsificação de Documento Particular, Crime Contra Humanidade, Emprego Irregular de Verbas Públicas, Charlatanismo, Crimes de Responsabilidade, Formação de Organização Criminosa&lt;/td&gt;
    &lt;/tr&gt;
&lt;tr&gt;
                &lt;td&gt;2&lt;/td&gt;
                &lt;td&gt;Prevaricação, Comunicação Falsa de Crime, Improbidade Administrativa, Epidemia com Resultado em Morte, Crime Contra Humanidade, Emprego Irregular de Verbas Públicas, Crimes de Responsabilidade&lt;/td&gt;
    &lt;/tr&gt;
&lt;tr&gt;
                &lt;td&gt;3&lt;/td&gt;
                &lt;td&gt;Corrupção Ativa, Improbidade Administrativa, Uso de Documento Falso, Corrupção Passiva, Fraude Processual, Falsidade Ideológica, Formação de Organização Criminosa, Fraude em Contrato&lt;/td&gt;
    &lt;/tr&gt;
&lt;tr&gt;
                &lt;td&gt;4&lt;/td&gt;
                &lt;td&gt;Omissão de Notificação de Doença, Perigo Para a vida ou Saúde de Outrem, Falsidade Ideológica, Crime Contra Humanidade&lt;/td&gt;
    &lt;/tr&gt;
&lt;tr&gt;
                &lt;td&gt;5&lt;/td&gt;
                &lt;td&gt;Prevaricação, Advocacia Administrativa&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;/body&gt;
&lt;/html&gt;

&lt;br&gt;&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;É importante frisar que ligação entre duas pessoas significa &lt;strong&gt;apenas&lt;/strong&gt; que elas foram citadas em um mesmo crime. Portanto, não afirmamos que, se existe ligação entre duas pessoas, elas necessariamente possuem uma relação e/ou comunicação direta.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Do total de &lt;a href=&#34;https://g1.globo.com/politica/cpi-da-covid/noticia/2021/10/20/cpi-da-covid-lista-alvos-de-sugestao-de-indiciamento.ghtml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;78 nomes&lt;/a&gt;, três deles estão citados separadamente em três diferentes supostos crimes. Uma vez que esses vértices são isolados, não os incluímos na rede e, portanto, o número de vértices se reduz a 75.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;O &lt;a href=&#34;https://www.mapequation.org/infomap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;infomap&lt;/em&gt;&lt;/a&gt; é bastante robusto pois busca encontrar comunidades por meio de caminhadas aleatórias na rede. São consideradas comunidades as regiões nas quais o caminhante aleatório tende a permanecer por um tempo maior do que o esperado.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Por se tratar de um algoritmo &lt;a href=&#34;https://en.wikipedia.org/wiki/Unsupervised_learning&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;não supervisionado&lt;/a&gt;, o resultado de 5 módulos obtido via &lt;em&gt;infomap&lt;/em&gt; deve ser encarado com ceticismo. Entretanto, uma breve análise via &lt;a href=&#34;https://www.pnas.org/content/103/23/8577&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;maximização de modularidade&lt;/a&gt; nos retornou um valor próximo a esse, com média de &lt;a href=&#34;https://alvarofrancomartins.com/post/cpi_covid/modularity.png&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;4 comunidades&lt;/a&gt;. Futuramente, podemos considerar &lt;a href=&#34;https://graph-tool.skewed.de/static/doc/demos/inference/inference.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;outros algoritmos&lt;/a&gt; para tratar esse problema.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Note que duas comunidades diferentes podem compartilhar um mesmo crime. Nada impede, por exemplo, que duas pessoas com os mesmos crimes atribuídos estejam em comunidades diferentes.&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
  </channel>
</rss>
