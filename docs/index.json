[{"authors":null,"categories":null,"content":"Physicist working on complex networks and data science.\n  Download my CV.\n","date":1626134400,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1626134400,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://alvarofrancomartins.com/author/alvaro-franco-martins/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/alvaro-franco-martins/","section":"authors","summary":"Physicist working on complex networks and data science.\n  Download my CV.","tags":null,"title":"Alvaro Franco Martins","type":"authors"},{"authors":["Alvaro Franco Martins"],"categories":["corruption_networks"],"content":"  The community structure of political corruption networks  Our main results We have studied the corruption networks of Brazil and Spain. Here I present our main findings:\n  The countries have distributions of people per scandal with approximately the same characteristic number ($\\approx$ 7 people). It seems, therefore, that people usually act in small groups when involved in corruption processes.\n  The networks display small-world properties (high clustering coefficient and low average path length). However, corruption agents have tried to increase their distance as these networks have evolved. This result indicates an agreement with the so-called theory of secret societies, in which the evolution of illegal networks is assumed to maximize concealment.\n  The networks have degree distributions well described by exponential distributions. Moreover, their characteristic degrees have essentially the same evolving pattern.\n  The networks present modular structures and the number of modules grows linearly with the number of scandals.\n  The evolution of the networks are characterized by abrupt changes in the size of the largest connected component, which is due to the coalescence (or connection) of different network components. This process is caused by repeat offenders (i.e, individuals that are involved in at least two scandals).\n  The countries have number of repeat offenders that grows linearly with the total number of offenders. The recidivism rates (number of repeat offenders / total number of offenders) are 9% for Spain and 14,2% for Brazil, and stay the same throughout the entire network growth.\n  The repeat offenders are able to connect different parts of the network and function as brokers. In this sense, the recidivism rate plays an important role on the evolution, structure and dynamics of corruption networks. The difference in the network metrics (such as density and average path length) are then explained by the difference in the recidivism rates.\n  Last but not least, we have proposed a model to grow networks that model corruption networks taking into account two simple elements presented above: the linear recidivism pattern and the distribution of people per scandal.\nOur model have not only produced visually strikingly similar networks to the empirical ones, but it was capable of describing all the evolving patterns (3, 4 and 5) discussed above.\nAll our results are better described in our publication in the Journal X. Also, an interactive version of our model is available here.\n","date":1626134400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1626134400,"objectID":"7b4a1a1ff33f805bd3e010c90f3c0c68","permalink":"https://alvarofrancomartins.com/post/corruption-networks/","publishdate":"2021-07-13T00:00:00Z","relpermalink":"/post/corruption-networks/","section":"post","summary":"A deep dive into the hidden patterns of worldwide corruption networks","tags":["Corruption networks"],"title":"Unveiling the hidden patterns of political corruption networks","type":"post"},{"authors":["Alvaro Franco Martins"],"categories":["corruption_networks"],"content":"  A heart network   In this post, I will briefly describe our computational model of political corruption networks. I also present an interactive version of the model and then show the Python code used to create the networks. This model is extensively described and studied in our publication in Journal X. I also made a post of our main findings on the political corruption networks of Brazil and Spain.\nThe model In summary, we have proposed the model based off two of our main findings about political corruption networks.\nThe first finding is that the number of people per scandal seems to follow an exponential distribution with a characteristic number of $1/\\lambda \\approx 7$ people per scandal. This result was found in both Brazilian and Spanish datasets on corruption scandals.\nThe second finding is that the number of repeat offenders can be modeled by the following equation.\n$$r(n) = \\alpha n + \\beta,$$\nwhere $n$ is the total number of people. The parameters are\n $\\alpha$: The recidivism rate (number of repeat offenders / total number of offenders). It can go from $0$ to $1$. $\\beta$: The regression coefficient. It controls when the repeat offenders starts to appear in the network.  The networks in our model grows by the addition of \u0026ldquo;scandals\u0026rdquo; or complete graphs. The complete graphs (sampled by the exponential distribution with $1/\\lambda$) simulate the scandals in the same way that, in a scandal, all individuals involved are connected. As the number of vertices $n$ grows, the number of repeat offender $r(n)$ also grows and they start to connect different parts of the network. Depending on the value of $\\alpha$, we get different network structures. And, since the model is stochastic, every new network will be different.\nAnd that is basically it1. If you want to see in detail how the model was written, skip to the algorithm.\nPlay with the model Below you can grow the networks generated by our model2 and see how it evolves as you keep adding the scandals3. To play with the model, first click in Start new network and then keep clicking on Add new scandal. You will note that, in the beginning, only complete graphs are appearing. However, after a while you will see that they will start to connect different parts of the network and a structure will develop.\nIf the visualization starts to lag after adding too many complete graphs, just click in Start new network again.\n Network Corruption Model  #mynetwork { display: inline-block; height: 620px; width: 100%; border: 1px solid #444444; background-color: #222222; } .input-group { width: 80%; padding: 0px; } .my_input { border: solid 1px #ccc; padding-left: 10px; border-radius: 5px; margin-bottom: 5px; } .btn-primary{ font-size: 20px; margin-left: 10px; margin-bottom: 5px; } .btn-outline-primary{ font-size: 20px; margin-left: 10px; margin-bottom: 5px; } .row { margin-left:2px; } }      $\\alpha$ \u0026nbsp\u0026nbsp\u0026nbsp $\\beta$ \u0026nbspStart new network Add new scandal    var container = document.getElementById(\"mynetwork\"); proba = 0.024; lambda = 7.33; const options = { \"autoResize\": true, \"height\": '100%', \"width\": '100%', \"physics\": { \"enabled\": true, \"forceAtlas2Based\": { \"theta\": 0.9, \"gravitationalConstant\": -100, \"centralGravity\": 0.01, \"springConstant\": 0.08, \"springLength\": 100, \"damping\": 0.7, \"avoidOverlap\": 0 }, \"maxVelocity\": 50, \"minVelocity\": 0.1, \"solver\": 'forceAtlas2Based', \"stabilization\": { \"enabled\": false }, \"timestep\": 0.2, \"adaptiveTimestep\": true, }, \"edges\": { \"smooth\": false }, \"nodes\": { \"shape\": \"dot\", \"size\": 10, }, \"interaction\": { \"dragNodes\": false, \"dragView\": true } } function startNewNetwork() { a = parseFloat(document.getElementById(\"recidivism_rate\").value); b = parseFloat(document.getElementById(\"beta_parameter\").value); last_agent_index = 0; total_repeated_agents = 0; repeated_agent_names = []; agent_names = []; nodes = new vis.DataSet(); edges = new vis.DataSet(); data = { nodes: nodes, edges: edges, }; return network = new vis.Network(container, data, options); } function expoSampling(scale) { return Math.round(-scale * Math.log(1.0 - Math.random())); } function addCompleteGraph() { // calculate the size of the complete graph to enter the network var n_new_agents = expoSampling(lambda); while (n_new_agents 0) { var minimo = Math.min(new_repeated_agents, new_agent_names.length); for (let i = 0; i 0)) { id_old = repeated_agent_names[Math.floor(Math.random() * repeated_agent_names.length)]; } else { let difference = agent_names.filter(x = !repeated_agent_names.includes(x)); id_old = difference[Math.floor(Math.random() * difference.length)]; total_repeated_agents += 1; } new_agent_names[i] = id_old; repeated_agent_names.push(id_old); } } for (let i = 0; i { e.target.disabled = true setTimeout(() = { e.target.disabled = false }, numSeconds * 500) }) function enableAddGraph() { document.getElementById(\"add_new_scandal\").disabled = false; }    This interactive visualization was made using visjs, a browser based visualization library.\nThe python algorithm First of all, we need the following packages.\nimport numpy as np import graph_tool.all as gt from itertools import combinations After importing these modules, we can then write the model function:\nClick to view the full algorithm def generate_net_links(tmax = 100, lambda_ = 7.33, a = 0.09, b = -11.5, proba = 0.024): \u0026#34;\u0026#34;\u0026#34; Generate a corruption network based on our model. Parameters --------- tmax : int Number of iteration steps (default: 100). lambda_ : float Characteristic number of people per scandal (default: 7.33). a, b : float Parameters defining the number of repeated agents (nr) as a function of total number of agents (n): nr = a*n + b (default: 0.09, -11.5). proba : float Probability of selecting a repeated agent that was already involved in another scandal (default: 0.024091841863485983). Returns ------- links_list : list A list of edge lists where each element correspond to a particular iteration step. \u0026#34;\u0026#34;\u0026#34; t = 0 links = [] links_list = [] agent_names = set() last_agent_index = 0 repeated_agent_names = set() total_repeated_agents = 0 while t \u0026lt; tmax: n_new_agents = int(np.round(np.random.exponential(lambda_))) if n_new_agents \u0026gt; 1: new_agent_names = [x for x in np.arange(last_agent_index, last_agent_index + n_new_agents)] last_agent_index += n_new_agents new_repeated_agents = int(np.round((a*(len(agent_names)) + b - total_repeated_agents))) if new_repeated_agents \u0026gt; 0: for i in range(min(new_repeated_agents, len(new_agent_names))): if (np.random.uniform() \u0026lt;= proba) \u0026amp; (len(repeated_agent_names) \u0026gt; 0): #select from repeated_agent_names repeated_agent = np.random.choice(list(repeated_agent_names)) else: #select from agent_names repeated_agent = np.random.choice(list(repeated_agent_names^agent_names)) total_repeated_agents += 1 new_agent_names[i] = repeated_agent repeated_agent_names.add(repeated_agent) for agent_ in new_agent_names: agent_names.add(agent_) new_links = list(combinations(new_agent_names, 2)) links_list += [new_links] t += 1 return links_list \n This function returns a list of edge lists where each element correspond to a particular iteration step.\nedge_lists = generate_net_links(tmax = 100, a = 0.142) # e.g, [[(0, 1), (0, 3), ... (5, 6)], [(7, 8), (7, 9) ... (14, 15)], ... ] To create the network until the $i$ step, now we need to concatenate these lists.\ndef network(i, edges_list): g = gt.Graph(directed = False) edge_list_i = np.concatenate(edges_list[:i]) g.add_edge_list(edge_list_i, hashed = True) # Since we have not yet dealt with self loops and parallel edges, we will remove them.  gt.remove_self_loops(g) gt.remove_parallel_edges(g) return g Now we can finally generate the network until $i$ steps (100 in this case).\nfinal_network = network(100, edge_lists) final_network And then, voilà\n \u0026lt;Graph object, undirected, with 767 vertices and 4805 edges, at 0x7f2789007d60\u0026gt;\n   In order to make our model more precise, we also take into account the fraction of repeat offenders that reoffend in more than two cases. Represented as $p_a$, our empirical results show that $p_a \\approx 0.024$ in both Brazilian and Spanish corruption networks.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n The default $\\alpha = 0.142$ is the empirical recidivism rate found in the Brazilian corruption network. The recidivism rate found in the Spanish corruption network is $\\alpha = 0.09$.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Keep in mind that, depending on the value of $\\alpha$, you will have to add enough complete graphs for the repeat offenders appear and start to connect to the other nodes in the network. That is, if $\\alpha \\to 1$ then the repeat offenders will appear quickly. On the other hand, when $\\alpha \\to 0$ you will need to add more complete graphs.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"7147f3c8217ff551f455891882c4d951","permalink":"https://alvarofrancomartins.com/post/corruption-networks-model/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/corruption-networks-model/","section":"post","summary":"A model that is able to simulate real political corruption networks","tags":["Corruption networks"],"title":"The computational model of political corruption networks","type":"post"},{"authors":["Alvaro Franco Martins","Haroldo V. Ribeiro","Luiz G. A. Alves","Ervin K. Lenzi","Matjaz Perc"],"categories":null,"content":"","date":1516752000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1516752000,"objectID":"0e36dd8fa8e19bb42073e933b199cd02","permalink":"https://alvarofrancomartins.com/publication/brazilian-corruption-network/","publishdate":"2018-01-24T00:00:00Z","relpermalink":"/publication/brazilian-corruption-network/","section":"publication","summary":"Our research reveals that corruption runs in small groups that rarely comprise more than eight people, in networks that have hubs and a modular structure that encompasses more than one corruption scandal.","tags":["Corruption Networks"],"title":"The dynamical structure of political corruption networks","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://alvarofrancomartins.com/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c9b5771543b03b8149b612b630936a56","permalink":"https://alvarofrancomartins.com/experience/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/experience/","section":"","summary":"","tags":null,"title":"Experiência","type":"widget_page"}]